import groovy.io.FileType

buildscript {
  repositories {
    mavenLocal()
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:0.2"
  }
}

subprojects {

  apply plugin: 'java'
  apply plugin: 'jacoco'
  apply plugin: 'com.github.sherter.google-java-format'

  sourceCompatibility = 1.7
  targetCompatibility = 1.7

  // Dependencies
  // ------------

  ext {
    // Shortcuts for libraries we are using
    libraries = [
        gax: 'com.google.api:gax:1.1.0',
        gaxGrpc: 'com.google.api:gax-grpc:0.17.0',
        iam: 'com.google.api.grpc:grpc-google-iam-v1:0.1.10',

        // Testing
        junit: 'junit:junit:4.11',
        mockito: 'org.mockito:mockito-core:1.10.19',
        truth: 'com.google.truth:truth:0.27',
        lang: 'commons-lang:commons-lang:2.6',
        cli: 'commons-cli:commons-cli:1.3',

        // Formatter
        javaFomatter: 'com.google.googlejavaformat:google-java-format:0.1-alpha'
    ]
  }

  repositories {
    mavenLocal()
    mavenCentral()
  }

  dependencies {
    compile libraries.gax,
      libraries.gaxGrpc

    testCompile libraries.junit,
      libraries.mockito,
      libraries.truth,
      libraries.lang,
      libraries.cli
  }

  jacocoTestReport {
    reports {
      xml.enabled true
      html.enabled true
    }
  }

  check.dependsOn jacocoTestReport

  // Test Logging
  // ------------

  test {
    testLogging {
      events "passed", "skipped", "failed", "standardOut", "standardError"
      exceptionFormat = 'full'
    }
  }

  // Formatting tasks
  // ================


  googleJavaFormat {
    toolVersion '1.0'
  }
  tasks.googleJavaFormat {
    exclude '.apt_generated/**'
    exclude 'bin/**'
    exclude 'build/**'
  }
}

project(':gapic-google-cloud-error-reporting-v1beta1') {
  dependencies {
    compile project(':proto-google-cloud-error-reporting-v1beta1')
    testCompile project(':grpc-google-cloud-error-reporting-v1beta1')
  }
}

project(':gapic-google-cloud-language-v1') {
  dependencies {
    compile project(':proto-google-cloud-language-v1')
    testCompile project(':grpc-google-cloud-language-v1')
  }
}

project(':gapic-google-cloud-language-v1beta2') {
  dependencies {
    compile project(':proto-google-cloud-language-v1beta2')
    testCompile project(':grpc-google-cloud-language-v1beta2')
  }
}

project(':gapic-google-cloud-logging-v2') {
  dependencies {
    compile project(':proto-google-cloud-logging-v2')
    testCompile project(':grpc-google-cloud-logging-v2')
  }
}

project(':gapic-google-cloud-monitoring-v3') {
  dependencies {
    compile project(':proto-google-cloud-monitoring-v3')
    testCompile project(':grpc-google-cloud-monitoring-v3')
  }
}

project(':gapic-google-cloud-pubsub-v1') {
  dependencies {
    compile project(':proto-google-cloud-pubsub-v1')
    testCompile project(':grpc-google-cloud-pubsub-v1'),
      libraries.iam
  }
}

project(':gapic-google-cloud-spanner-v1') {
  dependencies {
    compile project(':proto-google-cloud-spanner-v1')
    testCompile project(':grpc-google-cloud-spanner-v1')
  }
}

project(':gapic-google-cloud-spanner-admin-database-v1') {
  dependencies {
    compile project(':proto-google-cloud-spanner-admin-database-v1')
    testCompile project(':grpc-google-cloud-spanner-admin-database-v1')
  }
}

project(':gapic-google-cloud-spanner-admin-instance-v1') {
  dependencies {
    compile project(':proto-google-cloud-spanner-admin-instance-v1')
    testCompile project(':grpc-google-cloud-spanner-admin-instance-v1')
  }
}

project(':gapic-google-cloud-speech-v1') {
  dependencies {
    compile project(':proto-google-cloud-speech-v1')
    testCompile project(':grpc-google-cloud-speech-v1')
  }
}

project(':gapic-google-cloud-speech-v1beta1') {
  dependencies {
    compile project(':proto-google-cloud-speech-v1beta1')
    testCompile project(':grpc-google-cloud-speech-v1beta1')
  }
}

project(':gapic-google-cloud-trace-v1') {
  dependencies {
    compile project(':proto-google-cloud-trace-v1')
    testCompile project(':grpc-google-cloud-trace-v1')
  }
}

project(':gapic-google-cloud-vision-v1') {
  dependencies {
    compile project(':proto-google-cloud-vision-v1')
    testCompile project(':grpc-google-cloud-vision-v1')
  }
}
