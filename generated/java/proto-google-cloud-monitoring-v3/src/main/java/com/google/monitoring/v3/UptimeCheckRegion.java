// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/uptime.proto

package com.google.monitoring.v3;

/**
 * <pre>
 * The regions from which an uptime check can be run.
 * </pre>
 *
 * Protobuf enum {@code google.monitoring.v3.UptimeCheckRegion}
 */
public enum UptimeCheckRegion
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Default value if no region is specified. Will result in uptime checks
   * running from all regions.
   * </pre>
   *
   * <code>REGION_UNSPECIFIED = 0;</code>
   */
  REGION_UNSPECIFIED(0),
  /**
   * <pre>
   * Allows checks to run from locations within the United States of America.
   * </pre>
   *
   * <code>USA = 1;</code>
   */
  USA(1),
  /**
   * <pre>
   * Allows checks to run from locations within the continent of Europe.
   * </pre>
   *
   * <code>EUROPE = 2;</code>
   */
  EUROPE(2),
  /**
   * <pre>
   * Allows checks to run from locations within the continent of South
   * America.
   * </pre>
   *
   * <code>SOUTH_AMERICA = 3;</code>
   */
  SOUTH_AMERICA(3),
  /**
   * <pre>
   * Allows checks to run from locations within the Asia Pacific area (ex:
   * Singapore).
   * </pre>
   *
   * <code>ASIA_PACIFIC = 4;</code>
   */
  ASIA_PACIFIC(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Default value if no region is specified. Will result in uptime checks
   * running from all regions.
   * </pre>
   *
   * <code>REGION_UNSPECIFIED = 0;</code>
   */
  public static final int REGION_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Allows checks to run from locations within the United States of America.
   * </pre>
   *
   * <code>USA = 1;</code>
   */
  public static final int USA_VALUE = 1;
  /**
   * <pre>
   * Allows checks to run from locations within the continent of Europe.
   * </pre>
   *
   * <code>EUROPE = 2;</code>
   */
  public static final int EUROPE_VALUE = 2;
  /**
   * <pre>
   * Allows checks to run from locations within the continent of South
   * America.
   * </pre>
   *
   * <code>SOUTH_AMERICA = 3;</code>
   */
  public static final int SOUTH_AMERICA_VALUE = 3;
  /**
   * <pre>
   * Allows checks to run from locations within the Asia Pacific area (ex:
   * Singapore).
   * </pre>
   *
   * <code>ASIA_PACIFIC = 4;</code>
   */
  public static final int ASIA_PACIFIC_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static UptimeCheckRegion valueOf(int value) {
    return forNumber(value);
  }

  public static UptimeCheckRegion forNumber(int value) {
    switch (value) {
      case 0: return REGION_UNSPECIFIED;
      case 1: return USA;
      case 2: return EUROPE;
      case 3: return SOUTH_AMERICA;
      case 4: return ASIA_PACIFIC;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<UptimeCheckRegion>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      UptimeCheckRegion> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<UptimeCheckRegion>() {
          public UptimeCheckRegion findValueByNumber(int number) {
            return UptimeCheckRegion.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.monitoring.v3.UptimeProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final UptimeCheckRegion[] VALUES = values();

  public static UptimeCheckRegion valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private UptimeCheckRegion(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.monitoring.v3.UptimeCheckRegion)
}

