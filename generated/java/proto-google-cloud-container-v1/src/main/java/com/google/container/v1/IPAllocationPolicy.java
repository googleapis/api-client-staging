// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/container/v1/cluster_service.proto

package com.google.container.v1;

/**
 * <pre>
 * Configuration for controlling how IPs are allocated in the cluster.
 * </pre>
 *
 * Protobuf type {@code google.container.v1.IPAllocationPolicy}
 */
public  final class IPAllocationPolicy extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.container.v1.IPAllocationPolicy)
    IPAllocationPolicyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use IPAllocationPolicy.newBuilder() to construct.
  private IPAllocationPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private IPAllocationPolicy() {
    useIpAliases_ = false;
    createSubnetwork_ = false;
    subnetworkName_ = "";
    clusterIpv4Cidr_ = "";
    nodeIpv4Cidr_ = "";
    servicesIpv4Cidr_ = "";
    clusterSecondaryRangeName_ = "";
    servicesSecondaryRangeName_ = "";
    clusterIpv4CidrBlock_ = "";
    nodeIpv4CidrBlock_ = "";
    servicesIpv4CidrBlock_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private IPAllocationPolicy(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            useIpAliases_ = input.readBool();
            break;
          }
          case 16: {

            createSubnetwork_ = input.readBool();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            subnetworkName_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            clusterIpv4Cidr_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            nodeIpv4Cidr_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            servicesIpv4Cidr_ = s;
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            clusterSecondaryRangeName_ = s;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            servicesSecondaryRangeName_ = s;
            break;
          }
          case 74: {
            java.lang.String s = input.readStringRequireUtf8();

            clusterIpv4CidrBlock_ = s;
            break;
          }
          case 82: {
            java.lang.String s = input.readStringRequireUtf8();

            nodeIpv4CidrBlock_ = s;
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();

            servicesIpv4CidrBlock_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.container.v1.ClusterServiceProto.internal_static_google_container_v1_IPAllocationPolicy_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.container.v1.ClusterServiceProto.internal_static_google_container_v1_IPAllocationPolicy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.container.v1.IPAllocationPolicy.class, com.google.container.v1.IPAllocationPolicy.Builder.class);
  }

  public static final int USE_IP_ALIASES_FIELD_NUMBER = 1;
  private boolean useIpAliases_;
  /**
   * <pre>
   * Whether alias IPs will be used for pod IPs in the cluster.
   * </pre>
   *
   * <code>bool use_ip_aliases = 1;</code>
   */
  public boolean getUseIpAliases() {
    return useIpAliases_;
  }

  public static final int CREATE_SUBNETWORK_FIELD_NUMBER = 2;
  private boolean createSubnetwork_;
  /**
   * <pre>
   * Whether a new subnetwork will be created automatically for the cluster.
   * This field is only applicable when `use_ip_aliases` is true.
   * </pre>
   *
   * <code>bool create_subnetwork = 2;</code>
   */
  public boolean getCreateSubnetwork() {
    return createSubnetwork_;
  }

  public static final int SUBNETWORK_NAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object subnetworkName_;
  /**
   * <pre>
   * A custom subnetwork name to be used if `create_subnetwork` is true.  If
   * this field is empty, then an automatic name will be chosen for the new
   * subnetwork.
   * </pre>
   *
   * <code>string subnetwork_name = 3;</code>
   */
  public java.lang.String getSubnetworkName() {
    java.lang.Object ref = subnetworkName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      subnetworkName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A custom subnetwork name to be used if `create_subnetwork` is true.  If
   * this field is empty, then an automatic name will be chosen for the new
   * subnetwork.
   * </pre>
   *
   * <code>string subnetwork_name = 3;</code>
   */
  public com.google.protobuf.ByteString
      getSubnetworkNameBytes() {
    java.lang.Object ref = subnetworkName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      subnetworkName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLUSTER_IPV4_CIDR_FIELD_NUMBER = 4;
  private volatile java.lang.Object clusterIpv4Cidr_;
  /**
   * <pre>
   * This field is deprecated, use cluster_ipv4_cidr_block.
   * </pre>
   *
   * <code>string cluster_ipv4_cidr = 4;</code>
   */
  public java.lang.String getClusterIpv4Cidr() {
    java.lang.Object ref = clusterIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clusterIpv4Cidr_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This field is deprecated, use cluster_ipv4_cidr_block.
   * </pre>
   *
   * <code>string cluster_ipv4_cidr = 4;</code>
   */
  public com.google.protobuf.ByteString
      getClusterIpv4CidrBytes() {
    java.lang.Object ref = clusterIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clusterIpv4Cidr_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NODE_IPV4_CIDR_FIELD_NUMBER = 5;
  private volatile java.lang.Object nodeIpv4Cidr_;
  /**
   * <pre>
   * This field is deprecated, use node_ipv4_cidr_block.
   * </pre>
   *
   * <code>string node_ipv4_cidr = 5;</code>
   */
  public java.lang.String getNodeIpv4Cidr() {
    java.lang.Object ref = nodeIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nodeIpv4Cidr_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This field is deprecated, use node_ipv4_cidr_block.
   * </pre>
   *
   * <code>string node_ipv4_cidr = 5;</code>
   */
  public com.google.protobuf.ByteString
      getNodeIpv4CidrBytes() {
    java.lang.Object ref = nodeIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nodeIpv4Cidr_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICES_IPV4_CIDR_FIELD_NUMBER = 6;
  private volatile java.lang.Object servicesIpv4Cidr_;
  /**
   * <pre>
   * This field is deprecated, use services_ipv4_cidr_block.
   * </pre>
   *
   * <code>string services_ipv4_cidr = 6;</code>
   */
  public java.lang.String getServicesIpv4Cidr() {
    java.lang.Object ref = servicesIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      servicesIpv4Cidr_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This field is deprecated, use services_ipv4_cidr_block.
   * </pre>
   *
   * <code>string services_ipv4_cidr = 6;</code>
   */
  public com.google.protobuf.ByteString
      getServicesIpv4CidrBytes() {
    java.lang.Object ref = servicesIpv4Cidr_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      servicesIpv4Cidr_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLUSTER_SECONDARY_RANGE_NAME_FIELD_NUMBER = 7;
  private volatile java.lang.Object clusterSecondaryRangeName_;
  /**
   * <pre>
   * The name of the secondary range to be used for the cluster CIDR
   * block.  The secondary range will be used for pod IP
   * addresses. This must be an existing secondary range associated
   * with the cluster subnetwork.
   * This field is only applicable with use_ip_aliases is true and
   * create_subnetwork is false.
   * </pre>
   *
   * <code>string cluster_secondary_range_name = 7;</code>
   */
  public java.lang.String getClusterSecondaryRangeName() {
    java.lang.Object ref = clusterSecondaryRangeName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clusterSecondaryRangeName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the secondary range to be used for the cluster CIDR
   * block.  The secondary range will be used for pod IP
   * addresses. This must be an existing secondary range associated
   * with the cluster subnetwork.
   * This field is only applicable with use_ip_aliases is true and
   * create_subnetwork is false.
   * </pre>
   *
   * <code>string cluster_secondary_range_name = 7;</code>
   */
  public com.google.protobuf.ByteString
      getClusterSecondaryRangeNameBytes() {
    java.lang.Object ref = clusterSecondaryRangeName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clusterSecondaryRangeName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICES_SECONDARY_RANGE_NAME_FIELD_NUMBER = 8;
  private volatile java.lang.Object servicesSecondaryRangeName_;
  /**
   * <pre>
   * The name of the secondary range to be used as for the services
   * CIDR block.  The secondary range will be used for service
   * ClusterIPs. This must be an existing secondary range associated
   * with the cluster subnetwork.
   * This field is only applicable with use_ip_aliases is true and
   * create_subnetwork is false.
   * </pre>
   *
   * <code>string services_secondary_range_name = 8;</code>
   */
  public java.lang.String getServicesSecondaryRangeName() {
    java.lang.Object ref = servicesSecondaryRangeName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      servicesSecondaryRangeName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the secondary range to be used as for the services
   * CIDR block.  The secondary range will be used for service
   * ClusterIPs. This must be an existing secondary range associated
   * with the cluster subnetwork.
   * This field is only applicable with use_ip_aliases is true and
   * create_subnetwork is false.
   * </pre>
   *
   * <code>string services_secondary_range_name = 8;</code>
   */
  public com.google.protobuf.ByteString
      getServicesSecondaryRangeNameBytes() {
    java.lang.Object ref = servicesSecondaryRangeName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      servicesSecondaryRangeName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLUSTER_IPV4_CIDR_BLOCK_FIELD_NUMBER = 9;
  private volatile java.lang.Object clusterIpv4CidrBlock_;
  /**
   * <pre>
   * The IP address range for the cluster pod IPs. If this field is set, then
   * `cluster.cluster_ipv4_cidr` must be left blank.
   * This field is only applicable when `use_ip_aliases` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string cluster_ipv4_cidr_block = 9;</code>
   */
  public java.lang.String getClusterIpv4CidrBlock() {
    java.lang.Object ref = clusterIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clusterIpv4CidrBlock_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The IP address range for the cluster pod IPs. If this field is set, then
   * `cluster.cluster_ipv4_cidr` must be left blank.
   * This field is only applicable when `use_ip_aliases` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string cluster_ipv4_cidr_block = 9;</code>
   */
  public com.google.protobuf.ByteString
      getClusterIpv4CidrBlockBytes() {
    java.lang.Object ref = clusterIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clusterIpv4CidrBlock_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NODE_IPV4_CIDR_BLOCK_FIELD_NUMBER = 10;
  private volatile java.lang.Object nodeIpv4CidrBlock_;
  /**
   * <pre>
   * The IP address range of the instance IPs in this cluster.
   * This is applicable only if `create_subnetwork` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string node_ipv4_cidr_block = 10;</code>
   */
  public java.lang.String getNodeIpv4CidrBlock() {
    java.lang.Object ref = nodeIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nodeIpv4CidrBlock_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The IP address range of the instance IPs in this cluster.
   * This is applicable only if `create_subnetwork` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string node_ipv4_cidr_block = 10;</code>
   */
  public com.google.protobuf.ByteString
      getNodeIpv4CidrBlockBytes() {
    java.lang.Object ref = nodeIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nodeIpv4CidrBlock_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICES_IPV4_CIDR_BLOCK_FIELD_NUMBER = 11;
  private volatile java.lang.Object servicesIpv4CidrBlock_;
  /**
   * <pre>
   * The IP address range of the services IPs in this cluster. If blank, a range
   * will be automatically chosen with the default size.
   * This field is only applicable when `use_ip_aliases` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string services_ipv4_cidr_block = 11;</code>
   */
  public java.lang.String getServicesIpv4CidrBlock() {
    java.lang.Object ref = servicesIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      servicesIpv4CidrBlock_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The IP address range of the services IPs in this cluster. If blank, a range
   * will be automatically chosen with the default size.
   * This field is only applicable when `use_ip_aliases` is true.
   * Set to blank to have a range chosen with the default size.
   * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
   * netmask.
   * Set to a
   * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
   * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
   * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
   * to use.
   * </pre>
   *
   * <code>string services_ipv4_cidr_block = 11;</code>
   */
  public com.google.protobuf.ByteString
      getServicesIpv4CidrBlockBytes() {
    java.lang.Object ref = servicesIpv4CidrBlock_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      servicesIpv4CidrBlock_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (useIpAliases_ != false) {
      output.writeBool(1, useIpAliases_);
    }
    if (createSubnetwork_ != false) {
      output.writeBool(2, createSubnetwork_);
    }
    if (!getSubnetworkNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, subnetworkName_);
    }
    if (!getClusterIpv4CidrBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, clusterIpv4Cidr_);
    }
    if (!getNodeIpv4CidrBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, nodeIpv4Cidr_);
    }
    if (!getServicesIpv4CidrBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, servicesIpv4Cidr_);
    }
    if (!getClusterSecondaryRangeNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, clusterSecondaryRangeName_);
    }
    if (!getServicesSecondaryRangeNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, servicesSecondaryRangeName_);
    }
    if (!getClusterIpv4CidrBlockBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, clusterIpv4CidrBlock_);
    }
    if (!getNodeIpv4CidrBlockBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, nodeIpv4CidrBlock_);
    }
    if (!getServicesIpv4CidrBlockBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, servicesIpv4CidrBlock_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (useIpAliases_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, useIpAliases_);
    }
    if (createSubnetwork_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, createSubnetwork_);
    }
    if (!getSubnetworkNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, subnetworkName_);
    }
    if (!getClusterIpv4CidrBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, clusterIpv4Cidr_);
    }
    if (!getNodeIpv4CidrBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, nodeIpv4Cidr_);
    }
    if (!getServicesIpv4CidrBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, servicesIpv4Cidr_);
    }
    if (!getClusterSecondaryRangeNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, clusterSecondaryRangeName_);
    }
    if (!getServicesSecondaryRangeNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, servicesSecondaryRangeName_);
    }
    if (!getClusterIpv4CidrBlockBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, clusterIpv4CidrBlock_);
    }
    if (!getNodeIpv4CidrBlockBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, nodeIpv4CidrBlock_);
    }
    if (!getServicesIpv4CidrBlockBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, servicesIpv4CidrBlock_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.container.v1.IPAllocationPolicy)) {
      return super.equals(obj);
    }
    com.google.container.v1.IPAllocationPolicy other = (com.google.container.v1.IPAllocationPolicy) obj;

    boolean result = true;
    result = result && (getUseIpAliases()
        == other.getUseIpAliases());
    result = result && (getCreateSubnetwork()
        == other.getCreateSubnetwork());
    result = result && getSubnetworkName()
        .equals(other.getSubnetworkName());
    result = result && getClusterIpv4Cidr()
        .equals(other.getClusterIpv4Cidr());
    result = result && getNodeIpv4Cidr()
        .equals(other.getNodeIpv4Cidr());
    result = result && getServicesIpv4Cidr()
        .equals(other.getServicesIpv4Cidr());
    result = result && getClusterSecondaryRangeName()
        .equals(other.getClusterSecondaryRangeName());
    result = result && getServicesSecondaryRangeName()
        .equals(other.getServicesSecondaryRangeName());
    result = result && getClusterIpv4CidrBlock()
        .equals(other.getClusterIpv4CidrBlock());
    result = result && getNodeIpv4CidrBlock()
        .equals(other.getNodeIpv4CidrBlock());
    result = result && getServicesIpv4CidrBlock()
        .equals(other.getServicesIpv4CidrBlock());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + USE_IP_ALIASES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseIpAliases());
    hash = (37 * hash) + CREATE_SUBNETWORK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getCreateSubnetwork());
    hash = (37 * hash) + SUBNETWORK_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getSubnetworkName().hashCode();
    hash = (37 * hash) + CLUSTER_IPV4_CIDR_FIELD_NUMBER;
    hash = (53 * hash) + getClusterIpv4Cidr().hashCode();
    hash = (37 * hash) + NODE_IPV4_CIDR_FIELD_NUMBER;
    hash = (53 * hash) + getNodeIpv4Cidr().hashCode();
    hash = (37 * hash) + SERVICES_IPV4_CIDR_FIELD_NUMBER;
    hash = (53 * hash) + getServicesIpv4Cidr().hashCode();
    hash = (37 * hash) + CLUSTER_SECONDARY_RANGE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getClusterSecondaryRangeName().hashCode();
    hash = (37 * hash) + SERVICES_SECONDARY_RANGE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getServicesSecondaryRangeName().hashCode();
    hash = (37 * hash) + CLUSTER_IPV4_CIDR_BLOCK_FIELD_NUMBER;
    hash = (53 * hash) + getClusterIpv4CidrBlock().hashCode();
    hash = (37 * hash) + NODE_IPV4_CIDR_BLOCK_FIELD_NUMBER;
    hash = (53 * hash) + getNodeIpv4CidrBlock().hashCode();
    hash = (37 * hash) + SERVICES_IPV4_CIDR_BLOCK_FIELD_NUMBER;
    hash = (53 * hash) + getServicesIpv4CidrBlock().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.container.v1.IPAllocationPolicy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.container.v1.IPAllocationPolicy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.container.v1.IPAllocationPolicy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.container.v1.IPAllocationPolicy parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.container.v1.IPAllocationPolicy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.container.v1.IPAllocationPolicy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Configuration for controlling how IPs are allocated in the cluster.
   * </pre>
   *
   * Protobuf type {@code google.container.v1.IPAllocationPolicy}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.container.v1.IPAllocationPolicy)
      com.google.container.v1.IPAllocationPolicyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.container.v1.ClusterServiceProto.internal_static_google_container_v1_IPAllocationPolicy_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.container.v1.ClusterServiceProto.internal_static_google_container_v1_IPAllocationPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.container.v1.IPAllocationPolicy.class, com.google.container.v1.IPAllocationPolicy.Builder.class);
    }

    // Construct using com.google.container.v1.IPAllocationPolicy.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      useIpAliases_ = false;

      createSubnetwork_ = false;

      subnetworkName_ = "";

      clusterIpv4Cidr_ = "";

      nodeIpv4Cidr_ = "";

      servicesIpv4Cidr_ = "";

      clusterSecondaryRangeName_ = "";

      servicesSecondaryRangeName_ = "";

      clusterIpv4CidrBlock_ = "";

      nodeIpv4CidrBlock_ = "";

      servicesIpv4CidrBlock_ = "";

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.container.v1.ClusterServiceProto.internal_static_google_container_v1_IPAllocationPolicy_descriptor;
    }

    public com.google.container.v1.IPAllocationPolicy getDefaultInstanceForType() {
      return com.google.container.v1.IPAllocationPolicy.getDefaultInstance();
    }

    public com.google.container.v1.IPAllocationPolicy build() {
      com.google.container.v1.IPAllocationPolicy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.container.v1.IPAllocationPolicy buildPartial() {
      com.google.container.v1.IPAllocationPolicy result = new com.google.container.v1.IPAllocationPolicy(this);
      result.useIpAliases_ = useIpAliases_;
      result.createSubnetwork_ = createSubnetwork_;
      result.subnetworkName_ = subnetworkName_;
      result.clusterIpv4Cidr_ = clusterIpv4Cidr_;
      result.nodeIpv4Cidr_ = nodeIpv4Cidr_;
      result.servicesIpv4Cidr_ = servicesIpv4Cidr_;
      result.clusterSecondaryRangeName_ = clusterSecondaryRangeName_;
      result.servicesSecondaryRangeName_ = servicesSecondaryRangeName_;
      result.clusterIpv4CidrBlock_ = clusterIpv4CidrBlock_;
      result.nodeIpv4CidrBlock_ = nodeIpv4CidrBlock_;
      result.servicesIpv4CidrBlock_ = servicesIpv4CidrBlock_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.container.v1.IPAllocationPolicy) {
        return mergeFrom((com.google.container.v1.IPAllocationPolicy)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.container.v1.IPAllocationPolicy other) {
      if (other == com.google.container.v1.IPAllocationPolicy.getDefaultInstance()) return this;
      if (other.getUseIpAliases() != false) {
        setUseIpAliases(other.getUseIpAliases());
      }
      if (other.getCreateSubnetwork() != false) {
        setCreateSubnetwork(other.getCreateSubnetwork());
      }
      if (!other.getSubnetworkName().isEmpty()) {
        subnetworkName_ = other.subnetworkName_;
        onChanged();
      }
      if (!other.getClusterIpv4Cidr().isEmpty()) {
        clusterIpv4Cidr_ = other.clusterIpv4Cidr_;
        onChanged();
      }
      if (!other.getNodeIpv4Cidr().isEmpty()) {
        nodeIpv4Cidr_ = other.nodeIpv4Cidr_;
        onChanged();
      }
      if (!other.getServicesIpv4Cidr().isEmpty()) {
        servicesIpv4Cidr_ = other.servicesIpv4Cidr_;
        onChanged();
      }
      if (!other.getClusterSecondaryRangeName().isEmpty()) {
        clusterSecondaryRangeName_ = other.clusterSecondaryRangeName_;
        onChanged();
      }
      if (!other.getServicesSecondaryRangeName().isEmpty()) {
        servicesSecondaryRangeName_ = other.servicesSecondaryRangeName_;
        onChanged();
      }
      if (!other.getClusterIpv4CidrBlock().isEmpty()) {
        clusterIpv4CidrBlock_ = other.clusterIpv4CidrBlock_;
        onChanged();
      }
      if (!other.getNodeIpv4CidrBlock().isEmpty()) {
        nodeIpv4CidrBlock_ = other.nodeIpv4CidrBlock_;
        onChanged();
      }
      if (!other.getServicesIpv4CidrBlock().isEmpty()) {
        servicesIpv4CidrBlock_ = other.servicesIpv4CidrBlock_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.container.v1.IPAllocationPolicy parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.container.v1.IPAllocationPolicy) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean useIpAliases_ ;
    /**
     * <pre>
     * Whether alias IPs will be used for pod IPs in the cluster.
     * </pre>
     *
     * <code>bool use_ip_aliases = 1;</code>
     */
    public boolean getUseIpAliases() {
      return useIpAliases_;
    }
    /**
     * <pre>
     * Whether alias IPs will be used for pod IPs in the cluster.
     * </pre>
     *
     * <code>bool use_ip_aliases = 1;</code>
     */
    public Builder setUseIpAliases(boolean value) {
      
      useIpAliases_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether alias IPs will be used for pod IPs in the cluster.
     * </pre>
     *
     * <code>bool use_ip_aliases = 1;</code>
     */
    public Builder clearUseIpAliases() {
      
      useIpAliases_ = false;
      onChanged();
      return this;
    }

    private boolean createSubnetwork_ ;
    /**
     * <pre>
     * Whether a new subnetwork will be created automatically for the cluster.
     * This field is only applicable when `use_ip_aliases` is true.
     * </pre>
     *
     * <code>bool create_subnetwork = 2;</code>
     */
    public boolean getCreateSubnetwork() {
      return createSubnetwork_;
    }
    /**
     * <pre>
     * Whether a new subnetwork will be created automatically for the cluster.
     * This field is only applicable when `use_ip_aliases` is true.
     * </pre>
     *
     * <code>bool create_subnetwork = 2;</code>
     */
    public Builder setCreateSubnetwork(boolean value) {
      
      createSubnetwork_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether a new subnetwork will be created automatically for the cluster.
     * This field is only applicable when `use_ip_aliases` is true.
     * </pre>
     *
     * <code>bool create_subnetwork = 2;</code>
     */
    public Builder clearCreateSubnetwork() {
      
      createSubnetwork_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object subnetworkName_ = "";
    /**
     * <pre>
     * A custom subnetwork name to be used if `create_subnetwork` is true.  If
     * this field is empty, then an automatic name will be chosen for the new
     * subnetwork.
     * </pre>
     *
     * <code>string subnetwork_name = 3;</code>
     */
    public java.lang.String getSubnetworkName() {
      java.lang.Object ref = subnetworkName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subnetworkName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A custom subnetwork name to be used if `create_subnetwork` is true.  If
     * this field is empty, then an automatic name will be chosen for the new
     * subnetwork.
     * </pre>
     *
     * <code>string subnetwork_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSubnetworkNameBytes() {
      java.lang.Object ref = subnetworkName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subnetworkName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A custom subnetwork name to be used if `create_subnetwork` is true.  If
     * this field is empty, then an automatic name will be chosen for the new
     * subnetwork.
     * </pre>
     *
     * <code>string subnetwork_name = 3;</code>
     */
    public Builder setSubnetworkName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      subnetworkName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A custom subnetwork name to be used if `create_subnetwork` is true.  If
     * this field is empty, then an automatic name will be chosen for the new
     * subnetwork.
     * </pre>
     *
     * <code>string subnetwork_name = 3;</code>
     */
    public Builder clearSubnetworkName() {
      
      subnetworkName_ = getDefaultInstance().getSubnetworkName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A custom subnetwork name to be used if `create_subnetwork` is true.  If
     * this field is empty, then an automatic name will be chosen for the new
     * subnetwork.
     * </pre>
     *
     * <code>string subnetwork_name = 3;</code>
     */
    public Builder setSubnetworkNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      subnetworkName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clusterIpv4Cidr_ = "";
    /**
     * <pre>
     * This field is deprecated, use cluster_ipv4_cidr_block.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 4;</code>
     */
    public java.lang.String getClusterIpv4Cidr() {
      java.lang.Object ref = clusterIpv4Cidr_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterIpv4Cidr_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * This field is deprecated, use cluster_ipv4_cidr_block.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 4;</code>
     */
    public com.google.protobuf.ByteString
        getClusterIpv4CidrBytes() {
      java.lang.Object ref = clusterIpv4Cidr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterIpv4Cidr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This field is deprecated, use cluster_ipv4_cidr_block.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 4;</code>
     */
    public Builder setClusterIpv4Cidr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clusterIpv4Cidr_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field is deprecated, use cluster_ipv4_cidr_block.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 4;</code>
     */
    public Builder clearClusterIpv4Cidr() {
      
      clusterIpv4Cidr_ = getDefaultInstance().getClusterIpv4Cidr();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field is deprecated, use cluster_ipv4_cidr_block.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 4;</code>
     */
    public Builder setClusterIpv4CidrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clusterIpv4Cidr_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object nodeIpv4Cidr_ = "";
    /**
     * <pre>
     * This field is deprecated, use node_ipv4_cidr_block.
     * </pre>
     *
     * <code>string node_ipv4_cidr = 5;</code>
     */
    public java.lang.String getNodeIpv4Cidr() {
      java.lang.Object ref = nodeIpv4Cidr_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeIpv4Cidr_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * This field is deprecated, use node_ipv4_cidr_block.
     * </pre>
     *
     * <code>string node_ipv4_cidr = 5;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIpv4CidrBytes() {
      java.lang.Object ref = nodeIpv4Cidr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeIpv4Cidr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This field is deprecated, use node_ipv4_cidr_block.
     * </pre>
     *
     * <code>string node_ipv4_cidr = 5;</code>
     */
    public Builder setNodeIpv4Cidr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      nodeIpv4Cidr_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field is deprecated, use node_ipv4_cidr_block.
     * </pre>
     *
     * <code>string node_ipv4_cidr = 5;</code>
     */
    public Builder clearNodeIpv4Cidr() {
      
      nodeIpv4Cidr_ = getDefaultInstance().getNodeIpv4Cidr();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field is deprecated, use node_ipv4_cidr_block.
     * </pre>
     *
     * <code>string node_ipv4_cidr = 5;</code>
     */
    public Builder setNodeIpv4CidrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      nodeIpv4Cidr_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object servicesIpv4Cidr_ = "";
    /**
     * <pre>
     * This field is deprecated, use services_ipv4_cidr_block.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 6;</code>
     */
    public java.lang.String getServicesIpv4Cidr() {
      java.lang.Object ref = servicesIpv4Cidr_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        servicesIpv4Cidr_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * This field is deprecated, use services_ipv4_cidr_block.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 6;</code>
     */
    public com.google.protobuf.ByteString
        getServicesIpv4CidrBytes() {
      java.lang.Object ref = servicesIpv4Cidr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        servicesIpv4Cidr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This field is deprecated, use services_ipv4_cidr_block.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 6;</code>
     */
    public Builder setServicesIpv4Cidr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      servicesIpv4Cidr_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field is deprecated, use services_ipv4_cidr_block.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 6;</code>
     */
    public Builder clearServicesIpv4Cidr() {
      
      servicesIpv4Cidr_ = getDefaultInstance().getServicesIpv4Cidr();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field is deprecated, use services_ipv4_cidr_block.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 6;</code>
     */
    public Builder setServicesIpv4CidrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      servicesIpv4Cidr_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clusterSecondaryRangeName_ = "";
    /**
     * <pre>
     * The name of the secondary range to be used for the cluster CIDR
     * block.  The secondary range will be used for pod IP
     * addresses. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string cluster_secondary_range_name = 7;</code>
     */
    public java.lang.String getClusterSecondaryRangeName() {
      java.lang.Object ref = clusterSecondaryRangeName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterSecondaryRangeName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the secondary range to be used for the cluster CIDR
     * block.  The secondary range will be used for pod IP
     * addresses. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string cluster_secondary_range_name = 7;</code>
     */
    public com.google.protobuf.ByteString
        getClusterSecondaryRangeNameBytes() {
      java.lang.Object ref = clusterSecondaryRangeName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterSecondaryRangeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the secondary range to be used for the cluster CIDR
     * block.  The secondary range will be used for pod IP
     * addresses. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string cluster_secondary_range_name = 7;</code>
     */
    public Builder setClusterSecondaryRangeName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clusterSecondaryRangeName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the secondary range to be used for the cluster CIDR
     * block.  The secondary range will be used for pod IP
     * addresses. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string cluster_secondary_range_name = 7;</code>
     */
    public Builder clearClusterSecondaryRangeName() {
      
      clusterSecondaryRangeName_ = getDefaultInstance().getClusterSecondaryRangeName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the secondary range to be used for the cluster CIDR
     * block.  The secondary range will be used for pod IP
     * addresses. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string cluster_secondary_range_name = 7;</code>
     */
    public Builder setClusterSecondaryRangeNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clusterSecondaryRangeName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object servicesSecondaryRangeName_ = "";
    /**
     * <pre>
     * The name of the secondary range to be used as for the services
     * CIDR block.  The secondary range will be used for service
     * ClusterIPs. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string services_secondary_range_name = 8;</code>
     */
    public java.lang.String getServicesSecondaryRangeName() {
      java.lang.Object ref = servicesSecondaryRangeName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        servicesSecondaryRangeName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the secondary range to be used as for the services
     * CIDR block.  The secondary range will be used for service
     * ClusterIPs. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string services_secondary_range_name = 8;</code>
     */
    public com.google.protobuf.ByteString
        getServicesSecondaryRangeNameBytes() {
      java.lang.Object ref = servicesSecondaryRangeName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        servicesSecondaryRangeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the secondary range to be used as for the services
     * CIDR block.  The secondary range will be used for service
     * ClusterIPs. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string services_secondary_range_name = 8;</code>
     */
    public Builder setServicesSecondaryRangeName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      servicesSecondaryRangeName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the secondary range to be used as for the services
     * CIDR block.  The secondary range will be used for service
     * ClusterIPs. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string services_secondary_range_name = 8;</code>
     */
    public Builder clearServicesSecondaryRangeName() {
      
      servicesSecondaryRangeName_ = getDefaultInstance().getServicesSecondaryRangeName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the secondary range to be used as for the services
     * CIDR block.  The secondary range will be used for service
     * ClusterIPs. This must be an existing secondary range associated
     * with the cluster subnetwork.
     * This field is only applicable with use_ip_aliases is true and
     * create_subnetwork is false.
     * </pre>
     *
     * <code>string services_secondary_range_name = 8;</code>
     */
    public Builder setServicesSecondaryRangeNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      servicesSecondaryRangeName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clusterIpv4CidrBlock_ = "";
    /**
     * <pre>
     * The IP address range for the cluster pod IPs. If this field is set, then
     * `cluster.cluster_ipv4_cidr` must be left blank.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr_block = 9;</code>
     */
    public java.lang.String getClusterIpv4CidrBlock() {
      java.lang.Object ref = clusterIpv4CidrBlock_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterIpv4CidrBlock_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The IP address range for the cluster pod IPs. If this field is set, then
     * `cluster.cluster_ipv4_cidr` must be left blank.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr_block = 9;</code>
     */
    public com.google.protobuf.ByteString
        getClusterIpv4CidrBlockBytes() {
      java.lang.Object ref = clusterIpv4CidrBlock_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterIpv4CidrBlock_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The IP address range for the cluster pod IPs. If this field is set, then
     * `cluster.cluster_ipv4_cidr` must be left blank.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr_block = 9;</code>
     */
    public Builder setClusterIpv4CidrBlock(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clusterIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The IP address range for the cluster pod IPs. If this field is set, then
     * `cluster.cluster_ipv4_cidr` must be left blank.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr_block = 9;</code>
     */
    public Builder clearClusterIpv4CidrBlock() {
      
      clusterIpv4CidrBlock_ = getDefaultInstance().getClusterIpv4CidrBlock();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The IP address range for the cluster pod IPs. If this field is set, then
     * `cluster.cluster_ipv4_cidr` must be left blank.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr_block = 9;</code>
     */
    public Builder setClusterIpv4CidrBlockBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clusterIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object nodeIpv4CidrBlock_ = "";
    /**
     * <pre>
     * The IP address range of the instance IPs in this cluster.
     * This is applicable only if `create_subnetwork` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string node_ipv4_cidr_block = 10;</code>
     */
    public java.lang.String getNodeIpv4CidrBlock() {
      java.lang.Object ref = nodeIpv4CidrBlock_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeIpv4CidrBlock_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The IP address range of the instance IPs in this cluster.
     * This is applicable only if `create_subnetwork` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string node_ipv4_cidr_block = 10;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIpv4CidrBlockBytes() {
      java.lang.Object ref = nodeIpv4CidrBlock_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeIpv4CidrBlock_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The IP address range of the instance IPs in this cluster.
     * This is applicable only if `create_subnetwork` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string node_ipv4_cidr_block = 10;</code>
     */
    public Builder setNodeIpv4CidrBlock(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      nodeIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The IP address range of the instance IPs in this cluster.
     * This is applicable only if `create_subnetwork` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string node_ipv4_cidr_block = 10;</code>
     */
    public Builder clearNodeIpv4CidrBlock() {
      
      nodeIpv4CidrBlock_ = getDefaultInstance().getNodeIpv4CidrBlock();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The IP address range of the instance IPs in this cluster.
     * This is applicable only if `create_subnetwork` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string node_ipv4_cidr_block = 10;</code>
     */
    public Builder setNodeIpv4CidrBlockBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      nodeIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object servicesIpv4CidrBlock_ = "";
    /**
     * <pre>
     * The IP address range of the services IPs in this cluster. If blank, a range
     * will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string services_ipv4_cidr_block = 11;</code>
     */
    public java.lang.String getServicesIpv4CidrBlock() {
      java.lang.Object ref = servicesIpv4CidrBlock_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        servicesIpv4CidrBlock_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The IP address range of the services IPs in this cluster. If blank, a range
     * will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string services_ipv4_cidr_block = 11;</code>
     */
    public com.google.protobuf.ByteString
        getServicesIpv4CidrBlockBytes() {
      java.lang.Object ref = servicesIpv4CidrBlock_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        servicesIpv4CidrBlock_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The IP address range of the services IPs in this cluster. If blank, a range
     * will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string services_ipv4_cidr_block = 11;</code>
     */
    public Builder setServicesIpv4CidrBlock(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      servicesIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The IP address range of the services IPs in this cluster. If blank, a range
     * will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string services_ipv4_cidr_block = 11;</code>
     */
    public Builder clearServicesIpv4CidrBlock() {
      
      servicesIpv4CidrBlock_ = getDefaultInstance().getServicesIpv4CidrBlock();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The IP address range of the services IPs in this cluster. If blank, a range
     * will be automatically chosen with the default size.
     * This field is only applicable when `use_ip_aliases` is true.
     * Set to blank to have a range chosen with the default size.
     * Set to /netmask (e.g. `/14`) to have a range chosen with a specific
     * netmask.
     * Set to a
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
     * `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
     * to use.
     * </pre>
     *
     * <code>string services_ipv4_cidr_block = 11;</code>
     */
    public Builder setServicesIpv4CidrBlockBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      servicesIpv4CidrBlock_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.container.v1.IPAllocationPolicy)
  }

  // @@protoc_insertion_point(class_scope:google.container.v1.IPAllocationPolicy)
  private static final com.google.container.v1.IPAllocationPolicy DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.container.v1.IPAllocationPolicy();
  }

  public static com.google.container.v1.IPAllocationPolicy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IPAllocationPolicy>
      PARSER = new com.google.protobuf.AbstractParser<IPAllocationPolicy>() {
    public IPAllocationPolicy parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new IPAllocationPolicy(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<IPAllocationPolicy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IPAllocationPolicy> getParserForType() {
    return PARSER;
  }

  public com.google.container.v1.IPAllocationPolicy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

