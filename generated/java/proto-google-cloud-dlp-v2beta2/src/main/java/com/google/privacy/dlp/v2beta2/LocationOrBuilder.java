// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2beta2/dlp.proto

package com.google.privacy.dlp.v2beta2;

public interface LocationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2beta2.Location)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Zero-based byte offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Note that when the content is not textual, this references
   * the UTF-8 encoded textual representation of the content.
   * Omitted if content is an image.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.Range byte_range = 1;</code>
   */
  boolean hasByteRange();
  /**
   * <pre>
   * Zero-based byte offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Note that when the content is not textual, this references
   * the UTF-8 encoded textual representation of the content.
   * Omitted if content is an image.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.Range byte_range = 1;</code>
   */
  com.google.privacy.dlp.v2beta2.Range getByteRange();
  /**
   * <pre>
   * Zero-based byte offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Note that when the content is not textual, this references
   * the UTF-8 encoded textual representation of the content.
   * Omitted if content is an image.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.Range byte_range = 1;</code>
   */
  com.google.privacy.dlp.v2beta2.RangeOrBuilder getByteRangeOrBuilder();

  /**
   * <pre>
   * Unicode character offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Provided when the content is text.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.Range codepoint_range = 2;</code>
   */
  boolean hasCodepointRange();
  /**
   * <pre>
   * Unicode character offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Provided when the content is text.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.Range codepoint_range = 2;</code>
   */
  com.google.privacy.dlp.v2beta2.Range getCodepointRange();
  /**
   * <pre>
   * Unicode character offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Provided when the content is text.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.Range codepoint_range = 2;</code>
   */
  com.google.privacy.dlp.v2beta2.RangeOrBuilder getCodepointRangeOrBuilder();

  /**
   * <pre>
   * The area within the image that contained the finding.
   * Provided when the content is an image.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta2.ImageLocation image_boxes = 3;</code>
   */
  java.util.List<com.google.privacy.dlp.v2beta2.ImageLocation> 
      getImageBoxesList();
  /**
   * <pre>
   * The area within the image that contained the finding.
   * Provided when the content is an image.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta2.ImageLocation image_boxes = 3;</code>
   */
  com.google.privacy.dlp.v2beta2.ImageLocation getImageBoxes(int index);
  /**
   * <pre>
   * The area within the image that contained the finding.
   * Provided when the content is an image.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta2.ImageLocation image_boxes = 3;</code>
   */
  int getImageBoxesCount();
  /**
   * <pre>
   * The area within the image that contained the finding.
   * Provided when the content is an image.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta2.ImageLocation image_boxes = 3;</code>
   */
  java.util.List<? extends com.google.privacy.dlp.v2beta2.ImageLocationOrBuilder> 
      getImageBoxesOrBuilderList();
  /**
   * <pre>
   * The area within the image that contained the finding.
   * Provided when the content is an image.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta2.ImageLocation image_boxes = 3;</code>
   */
  com.google.privacy.dlp.v2beta2.ImageLocationOrBuilder getImageBoxesOrBuilder(
      int index);

  /**
   * <pre>
   * The pointer to the record in storage that contained the field the
   * finding was found in.
   * Provided when the finding's containing element is a property
   * of a storage object.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.RecordKey record_key = 4;</code>
   */
  boolean hasRecordKey();
  /**
   * <pre>
   * The pointer to the record in storage that contained the field the
   * finding was found in.
   * Provided when the finding's containing element is a property
   * of a storage object.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.RecordKey record_key = 4;</code>
   */
  com.google.privacy.dlp.v2beta2.RecordKey getRecordKey();
  /**
   * <pre>
   * The pointer to the record in storage that contained the field the
   * finding was found in.
   * Provided when the finding's containing element is a property
   * of a storage object.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.RecordKey record_key = 4;</code>
   */
  com.google.privacy.dlp.v2beta2.RecordKeyOrBuilder getRecordKeyOrBuilder();

  /**
   * <pre>
   * The pointer to the property or cell that contained the finding.
   * Provided when the finding's containing element is a cell in a table
   * or a property of storage object.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.FieldId field_id = 5;</code>
   */
  boolean hasFieldId();
  /**
   * <pre>
   * The pointer to the property or cell that contained the finding.
   * Provided when the finding's containing element is a cell in a table
   * or a property of storage object.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.FieldId field_id = 5;</code>
   */
  com.google.privacy.dlp.v2beta2.FieldId getFieldId();
  /**
   * <pre>
   * The pointer to the property or cell that contained the finding.
   * Provided when the finding's containing element is a cell in a table
   * or a property of storage object.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.FieldId field_id = 5;</code>
   */
  com.google.privacy.dlp.v2beta2.FieldIdOrBuilder getFieldIdOrBuilder();

  /**
   * <pre>
   * The pointer to the row of the table that contained the finding.
   * Provided when the finding's containing element is a cell of a table.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.TableLocation table_location = 6;</code>
   */
  boolean hasTableLocation();
  /**
   * <pre>
   * The pointer to the row of the table that contained the finding.
   * Provided when the finding's containing element is a cell of a table.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.TableLocation table_location = 6;</code>
   */
  com.google.privacy.dlp.v2beta2.TableLocation getTableLocation();
  /**
   * <pre>
   * The pointer to the row of the table that contained the finding.
   * Provided when the finding's containing element is a cell of a table.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.TableLocation table_location = 6;</code>
   */
  com.google.privacy.dlp.v2beta2.TableLocationOrBuilder getTableLocationOrBuilder();
}
