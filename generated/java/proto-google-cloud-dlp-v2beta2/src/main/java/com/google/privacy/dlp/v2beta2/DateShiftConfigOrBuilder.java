// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2beta2/dlp.proto

package com.google.privacy.dlp.v2beta2;

public interface DateShiftConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2beta2.DateShiftConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Range of shift in days. Actual shift will be selected at random within this
   * range (inclusive ends). Negative means shift to earlier in time. Must not
   * be more than 365250 days (1000 years) each direction.
   * For example, 3 means shift date to at most 3 days into the future.
   * [Required]
   * </pre>
   *
   * <code>int32 upper_bound_days = 1;</code>
   */
  int getUpperBoundDays();

  /**
   * <pre>
   * For example, -5 means shift date to at most 5 days back in the past.
   * [Required]
   * </pre>
   *
   * <code>int32 lower_bound_days = 2;</code>
   */
  int getLowerBoundDays();

  /**
   * <pre>
   * Points to the field that contains the context, for example, an entity id.
   * If set, must also set method. If set, shift will be consistent for the
   * given context.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.FieldId context = 3;</code>
   */
  boolean hasContext();
  /**
   * <pre>
   * Points to the field that contains the context, for example, an entity id.
   * If set, must also set method. If set, shift will be consistent for the
   * given context.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.FieldId context = 3;</code>
   */
  com.google.privacy.dlp.v2beta2.FieldId getContext();
  /**
   * <pre>
   * Points to the field that contains the context, for example, an entity id.
   * If set, must also set method. If set, shift will be consistent for the
   * given context.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.FieldId context = 3;</code>
   */
  com.google.privacy.dlp.v2beta2.FieldIdOrBuilder getContextOrBuilder();

  /**
   * <pre>
   * Causes the shift to be computed based on this key and the context. This
   * results in the same shift for the same context and crypto_key.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.CryptoKey crypto_key = 4;</code>
   */
  boolean hasCryptoKey();
  /**
   * <pre>
   * Causes the shift to be computed based on this key and the context. This
   * results in the same shift for the same context and crypto_key.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.CryptoKey crypto_key = 4;</code>
   */
  com.google.privacy.dlp.v2beta2.CryptoKey getCryptoKey();
  /**
   * <pre>
   * Causes the shift to be computed based on this key and the context. This
   * results in the same shift for the same context and crypto_key.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta2.CryptoKey crypto_key = 4;</code>
   */
  com.google.privacy.dlp.v2beta2.CryptoKeyOrBuilder getCryptoKeyOrBuilder();

  public com.google.privacy.dlp.v2beta2.DateShiftConfig.MethodCase getMethodCase();
}
