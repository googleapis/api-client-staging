// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.dialogflow.v2beta1;

import "google/api/annotations.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option cc_enable_arenas = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/dialogflow/v2beta1;dialogflow";
option java_multiple_files = true;
option java_outer_classname = "RuntimeProto";
option java_package = "com.google.cloud.dialogflow.v2beta1";


// Manages agent runtimes.
//
//
// Standard methods.
service Runtimes {
  // Returns the list of all runtimes of the specified agent.
  rpc ListRuntimes(ListRuntimesRequest) returns (ListRuntimesResponse) {
    option (google.api.http) = { get: "/v2beta1/{parent=projects/*/agent}/runtimes" };
  }

  // Retrieves the specified agent runtime.
  rpc GetRuntime(GetRuntimeRequest) returns (Runtime) {
    option (google.api.http) = { get: "/v2beta1/{name=projects/*/agent/runtimes/*}" };
  }

  // Creates an agent runtime.
  rpc CreateRuntime(CreateRuntimeRequest) returns (Runtime) {
    option (google.api.http) = { post: "/v2beta1/{parent=projects/*/agent}/runtimes" body: "runtime" };
  }

  // Updates the specified agent runtime.
  //
  // This method allows you to deploy new agent versions into the runtime.
  // When a runtime is pointed to a new agent version by setting
  // `runtime.agent_version`, the runtime is temporarily set to the `LOADING`
  // state. During that time, the runtime keeps on serving the previous version
  // of the agent. After the new agent version is done loading, the runtime is
  // set back to the `RUNNING` state.
  //
  // Operation<response: Runtime>
  rpc UpdateRuntime(UpdateRuntimeRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = { patch: "/v2beta1/{runtime.name=projects/*/agent/runtimes/*}" body: "runtime" };
  }

  // Deletes the specified agent runtime.
  rpc DeleteRuntime(DeleteRuntimeRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = { delete: "/v2beta1/{name=projects/*/agent/runtimes/*}" };
  }

  // Gets the history of the specified runtime.
  rpc GetRuntimeHistory(GetRuntimeHistoryRequest) returns (RuntimeHistory) {
    option (google.api.http) = { post: "/v2beta1/{name=projects/*/agent/runtime/*}:getHistory" body: "*" };
  }
}

// Represents an agent runtime.
message Runtime {
  // Represents a runtime state. When a runtime is pointed to a new agent
  // version, the runtime is temporarily set to the `LOADING` state. During that
  // time, the runtime keeps on serving the previous version of the agent. After
  // the new agent version is done loading, the runtime is set back to the
  // `RUNNING` state.
  enum State {
    // Not specified. This value is not used.
    STATE_UNSPECIFIED = 0;

    // Stopped.
    STATE_STOPPED = 1;

    // Loading.
    STATE_LOADING = 2;

    // Running.
    STATE_RUNNING = 3;
  }

  // Required. The unique identifier of this agent runtime.
  // Format: `projects/<Project ID>/agent/runtimes/<Runtime ID>`.
  string name = 1;

  // Optional. The developer-provided description for this runtime.
  string description = 2;

  // Optional. The agent version loaded into this runtime.
  // Format: `projects/<Project ID>/agent/versions/<Version ID>`.
  string agent_version = 3;

  // The state of this runtime. This field is read-only, i.e., it cannot be set
  // by create and update methods.
  State state = 4;

  // The last update time of this runtime. This field is read-only, i.e., it
  // cannot be set by create and update methods.
  google.protobuf.Timestamp update_time = 5;
}

// The request message for [Runtimes.ListRuntimes].
message ListRuntimesRequest {
  // Required. The agent to list all runtimes from.
  // Format: `projects/<Project ID>/agent`.
  string parent = 1;

  // Optional. The maximum number of items to return in a single page. By
  // default 100 and at most 1000.
  int32 page_size = 2;

  // Optional. The next_page_token value returned from a previous list request.
  string page_token = 3;
}

// The response message for [Runtimes.ListRuntimes].
message ListRuntimesResponse {
  // The list of agent runtimes. There will be a maximum number of items
  // returned based on the page_size field in the request.
  repeated Runtime runtimes = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

// The request message for [Runtimes.GetRuntime].
message GetRuntimeRequest {
  // Required. The name of the runtime.
  // Format: `projects/<Project ID>/agent/runtimes/<Runtime ID>`.
  string name = 1;
}

// The request message for [Runtimes.CreateRuntime].
message CreateRuntimeRequest {
  // Required. The agent to create a runtime for.
  // Format: `projects/<Project ID>/agent`.
  string parent = 1;

  // Required. The runtime to create.
  Runtime runtime = 2;
}

// The request message for [Runtimes.UpdateRuntime].
message UpdateRuntimeRequest {
  // Required. The runtime to update.
  // Format: `projects/<Project ID>/agent/runtimes/<Runtime ID>`.
  Runtime runtime = 1;

  // Optional. The mask to control which fields get updated.
  google.protobuf.FieldMask update_mask = 2;
}

// The request message for [Runtimes.DeleteRuntime].
message DeleteRuntimeRequest {
  // Required. The name of the runtime to delete.
  // Format: `projects/<Project ID>/agent/runtimes/<Runtime ID>`.
  string name = 1;
}

// The request message for [Runtimes.GetRuntimeHistory].
message GetRuntimeHistoryRequest {
  // Required. The name of the runtime to retrieve history for.
  // Format: `projects/<Project ID>/agent/runtime`.
  string name = 1;

  // Optional. The maximum number of items to return in a single page. By
  // default 100 and at most 1000.
  int32 page_size = 2;

  // Optional. The next_page_token value returned from a previous list request.
  string page_token = 3;
}

// The response message for [Runtimes.GetRuntimeHistory].
message RuntimeHistory {
  // Represents a runtime history entry.
  message Entry {
    // The agent version loaded into this runtime history entry.
    string agent_version = 4;

    // The developer-provided description for this runtime history entry.
    string description = 1;

    // The creation time of this runtime history entry.
    google.protobuf.Timestamp create_time = 5;
  }

  // The list of agent runtimes. There will be a maximum number of items
  // returned based on the page_size field in the request.
  repeated Entry entries = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}
