// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/operation.proto

package com.google.api.servicecontrol.v1;

/**
 * <pre>
 * Represents information regarding an operation.
 * </pre>
 *
 * Protobuf type {@code google.api.servicecontrol.v1.Operation}
 */
public  final class Operation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.api.servicecontrol.v1.Operation)
    OperationOrBuilder {
  // Use Operation.newBuilder() to construct.
  private Operation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Operation() {
    operationId_ = "";
    operationName_ = "";
    consumerId_ = "";
    metricValueSets_ = java.util.Collections.emptyList();
    logEntries_ = java.util.Collections.emptyList();
    importance_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Operation(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            operationId_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            operationName_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            consumerId_ = s;
            break;
          }
          case 34: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (startTime_ != null) {
              subBuilder = startTime_.toBuilder();
            }
            startTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(startTime_);
              startTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (endTime_ != null) {
              subBuilder = endTime_.toBuilder();
            }
            endTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(endTime_);
              endTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              labels_ = com.google.protobuf.MapField.newMapField(
                  LabelsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000020;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            labels = input.readMessage(
                LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            labels_.getMutableMap().put(labels.getKey(), labels.getValue());
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              metricValueSets_ = new java.util.ArrayList<com.google.api.servicecontrol.v1.MetricValueSet>();
              mutable_bitField0_ |= 0x00000040;
            }
            metricValueSets_.add(
                input.readMessage(com.google.api.servicecontrol.v1.MetricValueSet.parser(), extensionRegistry));
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              logEntries_ = new java.util.ArrayList<com.google.api.servicecontrol.v1.LogEntry>();
              mutable_bitField0_ |= 0x00000080;
            }
            logEntries_.add(
                input.readMessage(com.google.api.servicecontrol.v1.LogEntry.parser(), extensionRegistry));
            break;
          }
          case 88: {
            int rawValue = input.readEnum();

            importance_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        metricValueSets_ = java.util.Collections.unmodifiableList(metricValueSets_);
      }
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        logEntries_ = java.util.Collections.unmodifiableList(logEntries_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.api.servicecontrol.v1.OperationProto.internal_static_google_api_servicecontrol_v1_Operation_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 6:
        return internalGetLabels();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.api.servicecontrol.v1.OperationProto.internal_static_google_api_servicecontrol_v1_Operation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.api.servicecontrol.v1.Operation.class, com.google.api.servicecontrol.v1.Operation.Builder.class);
  }

  /**
   * <pre>
   * Defines the importance of the data contained in the operation.
   * </pre>
   *
   * Protobuf enum {@code google.api.servicecontrol.v1.Operation.Importance}
   */
  public enum Importance
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The API implementation may cache and aggregate the data.
     * The data may be lost when rare and unexpected system failures occur.
     * </pre>
     *
     * <code>LOW = 0;</code>
     */
    LOW(0),
    /**
     * <pre>
     * The API implementation doesn't cache and aggregate the data.
     * If the method returns successfully, it's guaranteed that the data has
     * been persisted in durable storage.
     * </pre>
     *
     * <code>HIGH = 1;</code>
     */
    HIGH(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * The API implementation may cache and aggregate the data.
     * The data may be lost when rare and unexpected system failures occur.
     * </pre>
     *
     * <code>LOW = 0;</code>
     */
    public static final int LOW_VALUE = 0;
    /**
     * <pre>
     * The API implementation doesn't cache and aggregate the data.
     * If the method returns successfully, it's guaranteed that the data has
     * been persisted in durable storage.
     * </pre>
     *
     * <code>HIGH = 1;</code>
     */
    public static final int HIGH_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Importance valueOf(int value) {
      return forNumber(value);
    }

    public static Importance forNumber(int value) {
      switch (value) {
        case 0: return LOW;
        case 1: return HIGH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Importance>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Importance> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Importance>() {
            public Importance findValueByNumber(int number) {
              return Importance.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.api.servicecontrol.v1.Operation.getDescriptor().getEnumTypes().get(0);
    }

    private static final Importance[] VALUES = values();

    public static Importance valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Importance(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.api.servicecontrol.v1.Operation.Importance)
  }

  private int bitField0_;
  public static final int OPERATION_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object operationId_;
  /**
   * <pre>
   * Identity of the operation. This must be unique within the scope of the
   * service that generated the operation. If the service calls
   * Check() and Report() on the same operation, the two calls should carry
   * the same id.
   * UUID version 4 is recommended, though not required.
   * In scenarios where an operation is computed from existing information
   * and an idempotent id is desirable for deduplication purpose, UUID version 5
   * is recommended. See RFC 4122 for details.
   * </pre>
   *
   * <code>optional string operation_id = 1;</code>
   */
  public java.lang.String getOperationId() {
    java.lang.Object ref = operationId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      operationId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Identity of the operation. This must be unique within the scope of the
   * service that generated the operation. If the service calls
   * Check() and Report() on the same operation, the two calls should carry
   * the same id.
   * UUID version 4 is recommended, though not required.
   * In scenarios where an operation is computed from existing information
   * and an idempotent id is desirable for deduplication purpose, UUID version 5
   * is recommended. See RFC 4122 for details.
   * </pre>
   *
   * <code>optional string operation_id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getOperationIdBytes() {
    java.lang.Object ref = operationId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      operationId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OPERATION_NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object operationName_;
  /**
   * <pre>
   * Fully qualified name of the operation. Reserved for future use.
   * </pre>
   *
   * <code>optional string operation_name = 2;</code>
   */
  public java.lang.String getOperationName() {
    java.lang.Object ref = operationName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      operationName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Fully qualified name of the operation. Reserved for future use.
   * </pre>
   *
   * <code>optional string operation_name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getOperationNameBytes() {
    java.lang.Object ref = operationName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      operationName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONSUMER_ID_FIELD_NUMBER = 3;
  private volatile java.lang.Object consumerId_;
  /**
   * <pre>
   * Identity of the consumer who is using the service.
   * This field should be filled in for the operations initiated by a
   * consumer, but not for service-initiated operations that are
   * not related to a specific consumer.
   * This can be in one of the following formats:
   *   project:&lt;project_id&gt;,
   *   project_number:&lt;project_number&gt;,
   *   api_key:&lt;api_key&gt;.
   * </pre>
   *
   * <code>optional string consumer_id = 3;</code>
   */
  public java.lang.String getConsumerId() {
    java.lang.Object ref = consumerId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      consumerId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Identity of the consumer who is using the service.
   * This field should be filled in for the operations initiated by a
   * consumer, but not for service-initiated operations that are
   * not related to a specific consumer.
   * This can be in one of the following formats:
   *   project:&lt;project_id&gt;,
   *   project_number:&lt;project_number&gt;,
   *   api_key:&lt;api_key&gt;.
   * </pre>
   *
   * <code>optional string consumer_id = 3;</code>
   */
  public com.google.protobuf.ByteString
      getConsumerIdBytes() {
    java.lang.Object ref = consumerId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      consumerId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int START_TIME_FIELD_NUMBER = 4;
  private com.google.protobuf.Timestamp startTime_;
  /**
   * <pre>
   * Required. Start time of the operation.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
   */
  public boolean hasStartTime() {
    return startTime_ != null;
  }
  /**
   * <pre>
   * Required. Start time of the operation.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
   */
  public com.google.protobuf.Timestamp getStartTime() {
    return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
  }
  /**
   * <pre>
   * Required. Start time of the operation.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
   */
  public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
    return getStartTime();
  }

  public static final int END_TIME_FIELD_NUMBER = 5;
  private com.google.protobuf.Timestamp endTime_;
  /**
   * <pre>
   * End time of the operation.
   * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
   * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
   */
  public boolean hasEndTime() {
    return endTime_ != null;
  }
  /**
   * <pre>
   * End time of the operation.
   * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
   * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
   */
  public com.google.protobuf.Timestamp getEndTime() {
    return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
  }
  /**
   * <pre>
   * End time of the operation.
   * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
   * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
   */
  public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
    return getEndTime();
  }

  public static final int LABELS_FIELD_NUMBER = 6;
  private static final class LabelsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.api.servicecontrol.v1.OperationProto.internal_static_google_api_servicecontrol_v1_Operation_LabelsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> labels_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetLabels() {
    if (labels_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LabelsDefaultEntryHolder.defaultEntry);
    }
    return labels_;
  }

  public int getLabelsCount() {
    return internalGetLabels().getMap().size();
  }
  /**
   * <pre>
   * Labels describing the operation. Only the following labels are allowed:
   * - Labels describing monitored resources as defined in
   *   the service configuration.
   * - Default labels of metric values. When specified, labels defined in the
   *   metric value override these default.
   * - The following labels defined by Google Cloud Platform:
   *     - `cloud.googleapis.com/location` describing the location where the
   *        operation happened,
   *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
   *        of the API request,
   *     - `servicecontrol.googleapis.com/service_agent` describing the service
   *        used to handle the API request (e.g. ESP),
   *     - `servicecontrol.googleapis.com/platform` describing the platform
   *        where the API is served (e.g. GAE, GCE, GKE).
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6;</code>
   */

  public boolean containsLabels(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetLabels().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLabelsMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getLabels() {
    return getLabelsMap();
  }
  /**
   * <pre>
   * Labels describing the operation. Only the following labels are allowed:
   * - Labels describing monitored resources as defined in
   *   the service configuration.
   * - Default labels of metric values. When specified, labels defined in the
   *   metric value override these default.
   * - The following labels defined by Google Cloud Platform:
   *     - `cloud.googleapis.com/location` describing the location where the
   *        operation happened,
   *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
   *        of the API request,
   *     - `servicecontrol.googleapis.com/service_agent` describing the service
   *        used to handle the API request (e.g. ESP),
   *     - `servicecontrol.googleapis.com/platform` describing the platform
   *        where the API is served (e.g. GAE, GCE, GKE).
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
    return internalGetLabels().getMap();
  }
  /**
   * <pre>
   * Labels describing the operation. Only the following labels are allowed:
   * - Labels describing monitored resources as defined in
   *   the service configuration.
   * - Default labels of metric values. When specified, labels defined in the
   *   metric value override these default.
   * - The following labels defined by Google Cloud Platform:
   *     - `cloud.googleapis.com/location` describing the location where the
   *        operation happened,
   *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
   *        of the API request,
   *     - `servicecontrol.googleapis.com/service_agent` describing the service
   *        used to handle the API request (e.g. ESP),
   *     - `servicecontrol.googleapis.com/platform` describing the platform
   *        where the API is served (e.g. GAE, GCE, GKE).
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6;</code>
   */

  public java.lang.String getLabelsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Labels describing the operation. Only the following labels are allowed:
   * - Labels describing monitored resources as defined in
   *   the service configuration.
   * - Default labels of metric values. When specified, labels defined in the
   *   metric value override these default.
   * - The following labels defined by Google Cloud Platform:
   *     - `cloud.googleapis.com/location` describing the location where the
   *        operation happened,
   *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
   *        of the API request,
   *     - `servicecontrol.googleapis.com/service_agent` describing the service
   *        used to handle the API request (e.g. ESP),
   *     - `servicecontrol.googleapis.com/platform` describing the platform
   *        where the API is served (e.g. GAE, GCE, GKE).
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6;</code>
   */

  public java.lang.String getLabelsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int METRIC_VALUE_SETS_FIELD_NUMBER = 7;
  private java.util.List<com.google.api.servicecontrol.v1.MetricValueSet> metricValueSets_;
  /**
   * <pre>
   * Represents information about this operation. Each MetricValueSet
   * corresponds to a metric defined in the service configuration.
   * The data type used in the MetricValueSet must agree with
   * the data type specified in the metric definition.
   * Within a single operation, it is not allowed to have more than one
   * MetricValue instances that have the same metric names and identical
   * label value combinations. If a request has such duplicated MetricValue
   * instances, the entire request is rejected with
   * an invalid argument error.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
   */
  public java.util.List<com.google.api.servicecontrol.v1.MetricValueSet> getMetricValueSetsList() {
    return metricValueSets_;
  }
  /**
   * <pre>
   * Represents information about this operation. Each MetricValueSet
   * corresponds to a metric defined in the service configuration.
   * The data type used in the MetricValueSet must agree with
   * the data type specified in the metric definition.
   * Within a single operation, it is not allowed to have more than one
   * MetricValue instances that have the same metric names and identical
   * label value combinations. If a request has such duplicated MetricValue
   * instances, the entire request is rejected with
   * an invalid argument error.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
   */
  public java.util.List<? extends com.google.api.servicecontrol.v1.MetricValueSetOrBuilder> 
      getMetricValueSetsOrBuilderList() {
    return metricValueSets_;
  }
  /**
   * <pre>
   * Represents information about this operation. Each MetricValueSet
   * corresponds to a metric defined in the service configuration.
   * The data type used in the MetricValueSet must agree with
   * the data type specified in the metric definition.
   * Within a single operation, it is not allowed to have more than one
   * MetricValue instances that have the same metric names and identical
   * label value combinations. If a request has such duplicated MetricValue
   * instances, the entire request is rejected with
   * an invalid argument error.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
   */
  public int getMetricValueSetsCount() {
    return metricValueSets_.size();
  }
  /**
   * <pre>
   * Represents information about this operation. Each MetricValueSet
   * corresponds to a metric defined in the service configuration.
   * The data type used in the MetricValueSet must agree with
   * the data type specified in the metric definition.
   * Within a single operation, it is not allowed to have more than one
   * MetricValue instances that have the same metric names and identical
   * label value combinations. If a request has such duplicated MetricValue
   * instances, the entire request is rejected with
   * an invalid argument error.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
   */
  public com.google.api.servicecontrol.v1.MetricValueSet getMetricValueSets(int index) {
    return metricValueSets_.get(index);
  }
  /**
   * <pre>
   * Represents information about this operation. Each MetricValueSet
   * corresponds to a metric defined in the service configuration.
   * The data type used in the MetricValueSet must agree with
   * the data type specified in the metric definition.
   * Within a single operation, it is not allowed to have more than one
   * MetricValue instances that have the same metric names and identical
   * label value combinations. If a request has such duplicated MetricValue
   * instances, the entire request is rejected with
   * an invalid argument error.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
   */
  public com.google.api.servicecontrol.v1.MetricValueSetOrBuilder getMetricValueSetsOrBuilder(
      int index) {
    return metricValueSets_.get(index);
  }

  public static final int LOG_ENTRIES_FIELD_NUMBER = 8;
  private java.util.List<com.google.api.servicecontrol.v1.LogEntry> logEntries_;
  /**
   * <pre>
   * Represents information to be logged.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
   */
  public java.util.List<com.google.api.servicecontrol.v1.LogEntry> getLogEntriesList() {
    return logEntries_;
  }
  /**
   * <pre>
   * Represents information to be logged.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
   */
  public java.util.List<? extends com.google.api.servicecontrol.v1.LogEntryOrBuilder> 
      getLogEntriesOrBuilderList() {
    return logEntries_;
  }
  /**
   * <pre>
   * Represents information to be logged.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
   */
  public int getLogEntriesCount() {
    return logEntries_.size();
  }
  /**
   * <pre>
   * Represents information to be logged.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
   */
  public com.google.api.servicecontrol.v1.LogEntry getLogEntries(int index) {
    return logEntries_.get(index);
  }
  /**
   * <pre>
   * Represents information to be logged.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
   */
  public com.google.api.servicecontrol.v1.LogEntryOrBuilder getLogEntriesOrBuilder(
      int index) {
    return logEntries_.get(index);
  }

  public static final int IMPORTANCE_FIELD_NUMBER = 11;
  private int importance_;
  /**
   * <pre>
   * DO NOT USE. This is an experimental field.
   * </pre>
   *
   * <code>optional .google.api.servicecontrol.v1.Operation.Importance importance = 11;</code>
   */
  public int getImportanceValue() {
    return importance_;
  }
  /**
   * <pre>
   * DO NOT USE. This is an experimental field.
   * </pre>
   *
   * <code>optional .google.api.servicecontrol.v1.Operation.Importance importance = 11;</code>
   */
  public com.google.api.servicecontrol.v1.Operation.Importance getImportance() {
    com.google.api.servicecontrol.v1.Operation.Importance result = com.google.api.servicecontrol.v1.Operation.Importance.valueOf(importance_);
    return result == null ? com.google.api.servicecontrol.v1.Operation.Importance.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getOperationIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, operationId_);
    }
    if (!getOperationNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, operationName_);
    }
    if (!getConsumerIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, consumerId_);
    }
    if (startTime_ != null) {
      output.writeMessage(4, getStartTime());
    }
    if (endTime_ != null) {
      output.writeMessage(5, getEndTime());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetLabels().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      labels = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(6, labels);
    }
    for (int i = 0; i < metricValueSets_.size(); i++) {
      output.writeMessage(7, metricValueSets_.get(i));
    }
    for (int i = 0; i < logEntries_.size(); i++) {
      output.writeMessage(8, logEntries_.get(i));
    }
    if (importance_ != com.google.api.servicecontrol.v1.Operation.Importance.LOW.getNumber()) {
      output.writeEnum(11, importance_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getOperationIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, operationId_);
    }
    if (!getOperationNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, operationName_);
    }
    if (!getConsumerIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, consumerId_);
    }
    if (startTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getStartTime());
    }
    if (endTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getEndTime());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetLabels().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      labels = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, labels);
    }
    for (int i = 0; i < metricValueSets_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, metricValueSets_.get(i));
    }
    for (int i = 0; i < logEntries_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, logEntries_.get(i));
    }
    if (importance_ != com.google.api.servicecontrol.v1.Operation.Importance.LOW.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(11, importance_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.api.servicecontrol.v1.Operation)) {
      return super.equals(obj);
    }
    com.google.api.servicecontrol.v1.Operation other = (com.google.api.servicecontrol.v1.Operation) obj;

    boolean result = true;
    result = result && getOperationId()
        .equals(other.getOperationId());
    result = result && getOperationName()
        .equals(other.getOperationName());
    result = result && getConsumerId()
        .equals(other.getConsumerId());
    result = result && (hasStartTime() == other.hasStartTime());
    if (hasStartTime()) {
      result = result && getStartTime()
          .equals(other.getStartTime());
    }
    result = result && (hasEndTime() == other.hasEndTime());
    if (hasEndTime()) {
      result = result && getEndTime()
          .equals(other.getEndTime());
    }
    result = result && internalGetLabels().equals(
        other.internalGetLabels());
    result = result && getMetricValueSetsList()
        .equals(other.getMetricValueSetsList());
    result = result && getLogEntriesList()
        .equals(other.getLogEntriesList());
    result = result && importance_ == other.importance_;
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + OPERATION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getOperationId().hashCode();
    hash = (37 * hash) + OPERATION_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getOperationName().hashCode();
    hash = (37 * hash) + CONSUMER_ID_FIELD_NUMBER;
    hash = (53 * hash) + getConsumerId().hashCode();
    if (hasStartTime()) {
      hash = (37 * hash) + START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime().hashCode();
    }
    if (hasEndTime()) {
      hash = (37 * hash) + END_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getEndTime().hashCode();
    }
    if (!internalGetLabels().getMap().isEmpty()) {
      hash = (37 * hash) + LABELS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLabels().hashCode();
    }
    if (getMetricValueSetsCount() > 0) {
      hash = (37 * hash) + METRIC_VALUE_SETS_FIELD_NUMBER;
      hash = (53 * hash) + getMetricValueSetsList().hashCode();
    }
    if (getLogEntriesCount() > 0) {
      hash = (37 * hash) + LOG_ENTRIES_FIELD_NUMBER;
      hash = (53 * hash) + getLogEntriesList().hashCode();
    }
    hash = (37 * hash) + IMPORTANCE_FIELD_NUMBER;
    hash = (53 * hash) + importance_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.api.servicecontrol.v1.Operation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.api.servicecontrol.v1.Operation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.Operation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.api.servicecontrol.v1.Operation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.Operation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.api.servicecontrol.v1.Operation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.Operation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.api.servicecontrol.v1.Operation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.api.servicecontrol.v1.Operation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.api.servicecontrol.v1.Operation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.api.servicecontrol.v1.Operation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents information regarding an operation.
   * </pre>
   *
   * Protobuf type {@code google.api.servicecontrol.v1.Operation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.servicecontrol.v1.Operation)
      com.google.api.servicecontrol.v1.OperationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.api.servicecontrol.v1.OperationProto.internal_static_google_api_servicecontrol_v1_Operation_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetMutableLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.api.servicecontrol.v1.OperationProto.internal_static_google_api_servicecontrol_v1_Operation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.api.servicecontrol.v1.Operation.class, com.google.api.servicecontrol.v1.Operation.Builder.class);
    }

    // Construct using com.google.api.servicecontrol.v1.Operation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMetricValueSetsFieldBuilder();
        getLogEntriesFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      operationId_ = "";

      operationName_ = "";

      consumerId_ = "";

      if (startTimeBuilder_ == null) {
        startTime_ = null;
      } else {
        startTime_ = null;
        startTimeBuilder_ = null;
      }
      if (endTimeBuilder_ == null) {
        endTime_ = null;
      } else {
        endTime_ = null;
        endTimeBuilder_ = null;
      }
      internalGetMutableLabels().clear();
      if (metricValueSetsBuilder_ == null) {
        metricValueSets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        metricValueSetsBuilder_.clear();
      }
      if (logEntriesBuilder_ == null) {
        logEntries_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
      } else {
        logEntriesBuilder_.clear();
      }
      importance_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.api.servicecontrol.v1.OperationProto.internal_static_google_api_servicecontrol_v1_Operation_descriptor;
    }

    public com.google.api.servicecontrol.v1.Operation getDefaultInstanceForType() {
      return com.google.api.servicecontrol.v1.Operation.getDefaultInstance();
    }

    public com.google.api.servicecontrol.v1.Operation build() {
      com.google.api.servicecontrol.v1.Operation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.api.servicecontrol.v1.Operation buildPartial() {
      com.google.api.servicecontrol.v1.Operation result = new com.google.api.servicecontrol.v1.Operation(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.operationId_ = operationId_;
      result.operationName_ = operationName_;
      result.consumerId_ = consumerId_;
      if (startTimeBuilder_ == null) {
        result.startTime_ = startTime_;
      } else {
        result.startTime_ = startTimeBuilder_.build();
      }
      if (endTimeBuilder_ == null) {
        result.endTime_ = endTime_;
      } else {
        result.endTime_ = endTimeBuilder_.build();
      }
      result.labels_ = internalGetLabels();
      result.labels_.makeImmutable();
      if (metricValueSetsBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          metricValueSets_ = java.util.Collections.unmodifiableList(metricValueSets_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.metricValueSets_ = metricValueSets_;
      } else {
        result.metricValueSets_ = metricValueSetsBuilder_.build();
      }
      if (logEntriesBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          logEntries_ = java.util.Collections.unmodifiableList(logEntries_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.logEntries_ = logEntries_;
      } else {
        result.logEntries_ = logEntriesBuilder_.build();
      }
      result.importance_ = importance_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.api.servicecontrol.v1.Operation) {
        return mergeFrom((com.google.api.servicecontrol.v1.Operation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.api.servicecontrol.v1.Operation other) {
      if (other == com.google.api.servicecontrol.v1.Operation.getDefaultInstance()) return this;
      if (!other.getOperationId().isEmpty()) {
        operationId_ = other.operationId_;
        onChanged();
      }
      if (!other.getOperationName().isEmpty()) {
        operationName_ = other.operationName_;
        onChanged();
      }
      if (!other.getConsumerId().isEmpty()) {
        consumerId_ = other.consumerId_;
        onChanged();
      }
      if (other.hasStartTime()) {
        mergeStartTime(other.getStartTime());
      }
      if (other.hasEndTime()) {
        mergeEndTime(other.getEndTime());
      }
      internalGetMutableLabels().mergeFrom(
          other.internalGetLabels());
      if (metricValueSetsBuilder_ == null) {
        if (!other.metricValueSets_.isEmpty()) {
          if (metricValueSets_.isEmpty()) {
            metricValueSets_ = other.metricValueSets_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureMetricValueSetsIsMutable();
            metricValueSets_.addAll(other.metricValueSets_);
          }
          onChanged();
        }
      } else {
        if (!other.metricValueSets_.isEmpty()) {
          if (metricValueSetsBuilder_.isEmpty()) {
            metricValueSetsBuilder_.dispose();
            metricValueSetsBuilder_ = null;
            metricValueSets_ = other.metricValueSets_;
            bitField0_ = (bitField0_ & ~0x00000040);
            metricValueSetsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMetricValueSetsFieldBuilder() : null;
          } else {
            metricValueSetsBuilder_.addAllMessages(other.metricValueSets_);
          }
        }
      }
      if (logEntriesBuilder_ == null) {
        if (!other.logEntries_.isEmpty()) {
          if (logEntries_.isEmpty()) {
            logEntries_ = other.logEntries_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureLogEntriesIsMutable();
            logEntries_.addAll(other.logEntries_);
          }
          onChanged();
        }
      } else {
        if (!other.logEntries_.isEmpty()) {
          if (logEntriesBuilder_.isEmpty()) {
            logEntriesBuilder_.dispose();
            logEntriesBuilder_ = null;
            logEntries_ = other.logEntries_;
            bitField0_ = (bitField0_ & ~0x00000080);
            logEntriesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLogEntriesFieldBuilder() : null;
          } else {
            logEntriesBuilder_.addAllMessages(other.logEntries_);
          }
        }
      }
      if (other.importance_ != 0) {
        setImportanceValue(other.getImportanceValue());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.api.servicecontrol.v1.Operation parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.api.servicecontrol.v1.Operation) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object operationId_ = "";
    /**
     * <pre>
     * Identity of the operation. This must be unique within the scope of the
     * service that generated the operation. If the service calls
     * Check() and Report() on the same operation, the two calls should carry
     * the same id.
     * UUID version 4 is recommended, though not required.
     * In scenarios where an operation is computed from existing information
     * and an idempotent id is desirable for deduplication purpose, UUID version 5
     * is recommended. See RFC 4122 for details.
     * </pre>
     *
     * <code>optional string operation_id = 1;</code>
     */
    public java.lang.String getOperationId() {
      java.lang.Object ref = operationId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operationId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Identity of the operation. This must be unique within the scope of the
     * service that generated the operation. If the service calls
     * Check() and Report() on the same operation, the two calls should carry
     * the same id.
     * UUID version 4 is recommended, though not required.
     * In scenarios where an operation is computed from existing information
     * and an idempotent id is desirable for deduplication purpose, UUID version 5
     * is recommended. See RFC 4122 for details.
     * </pre>
     *
     * <code>optional string operation_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getOperationIdBytes() {
      java.lang.Object ref = operationId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Identity of the operation. This must be unique within the scope of the
     * service that generated the operation. If the service calls
     * Check() and Report() on the same operation, the two calls should carry
     * the same id.
     * UUID version 4 is recommended, though not required.
     * In scenarios where an operation is computed from existing information
     * and an idempotent id is desirable for deduplication purpose, UUID version 5
     * is recommended. See RFC 4122 for details.
     * </pre>
     *
     * <code>optional string operation_id = 1;</code>
     */
    public Builder setOperationId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      operationId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Identity of the operation. This must be unique within the scope of the
     * service that generated the operation. If the service calls
     * Check() and Report() on the same operation, the two calls should carry
     * the same id.
     * UUID version 4 is recommended, though not required.
     * In scenarios where an operation is computed from existing information
     * and an idempotent id is desirable for deduplication purpose, UUID version 5
     * is recommended. See RFC 4122 for details.
     * </pre>
     *
     * <code>optional string operation_id = 1;</code>
     */
    public Builder clearOperationId() {
      
      operationId_ = getDefaultInstance().getOperationId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Identity of the operation. This must be unique within the scope of the
     * service that generated the operation. If the service calls
     * Check() and Report() on the same operation, the two calls should carry
     * the same id.
     * UUID version 4 is recommended, though not required.
     * In scenarios where an operation is computed from existing information
     * and an idempotent id is desirable for deduplication purpose, UUID version 5
     * is recommended. See RFC 4122 for details.
     * </pre>
     *
     * <code>optional string operation_id = 1;</code>
     */
    public Builder setOperationIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      operationId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object operationName_ = "";
    /**
     * <pre>
     * Fully qualified name of the operation. Reserved for future use.
     * </pre>
     *
     * <code>optional string operation_name = 2;</code>
     */
    public java.lang.String getOperationName() {
      java.lang.Object ref = operationName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operationName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Fully qualified name of the operation. Reserved for future use.
     * </pre>
     *
     * <code>optional string operation_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOperationNameBytes() {
      java.lang.Object ref = operationName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operationName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Fully qualified name of the operation. Reserved for future use.
     * </pre>
     *
     * <code>optional string operation_name = 2;</code>
     */
    public Builder setOperationName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      operationName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Fully qualified name of the operation. Reserved for future use.
     * </pre>
     *
     * <code>optional string operation_name = 2;</code>
     */
    public Builder clearOperationName() {
      
      operationName_ = getDefaultInstance().getOperationName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Fully qualified name of the operation. Reserved for future use.
     * </pre>
     *
     * <code>optional string operation_name = 2;</code>
     */
    public Builder setOperationNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      operationName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object consumerId_ = "";
    /**
     * <pre>
     * Identity of the consumer who is using the service.
     * This field should be filled in for the operations initiated by a
     * consumer, but not for service-initiated operations that are
     * not related to a specific consumer.
     * This can be in one of the following formats:
     *   project:&lt;project_id&gt;,
     *   project_number:&lt;project_number&gt;,
     *   api_key:&lt;api_key&gt;.
     * </pre>
     *
     * <code>optional string consumer_id = 3;</code>
     */
    public java.lang.String getConsumerId() {
      java.lang.Object ref = consumerId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        consumerId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Identity of the consumer who is using the service.
     * This field should be filled in for the operations initiated by a
     * consumer, but not for service-initiated operations that are
     * not related to a specific consumer.
     * This can be in one of the following formats:
     *   project:&lt;project_id&gt;,
     *   project_number:&lt;project_number&gt;,
     *   api_key:&lt;api_key&gt;.
     * </pre>
     *
     * <code>optional string consumer_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getConsumerIdBytes() {
      java.lang.Object ref = consumerId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        consumerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Identity of the consumer who is using the service.
     * This field should be filled in for the operations initiated by a
     * consumer, but not for service-initiated operations that are
     * not related to a specific consumer.
     * This can be in one of the following formats:
     *   project:&lt;project_id&gt;,
     *   project_number:&lt;project_number&gt;,
     *   api_key:&lt;api_key&gt;.
     * </pre>
     *
     * <code>optional string consumer_id = 3;</code>
     */
    public Builder setConsumerId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      consumerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Identity of the consumer who is using the service.
     * This field should be filled in for the operations initiated by a
     * consumer, but not for service-initiated operations that are
     * not related to a specific consumer.
     * This can be in one of the following formats:
     *   project:&lt;project_id&gt;,
     *   project_number:&lt;project_number&gt;,
     *   api_key:&lt;api_key&gt;.
     * </pre>
     *
     * <code>optional string consumer_id = 3;</code>
     */
    public Builder clearConsumerId() {
      
      consumerId_ = getDefaultInstance().getConsumerId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Identity of the consumer who is using the service.
     * This field should be filled in for the operations initiated by a
     * consumer, but not for service-initiated operations that are
     * not related to a specific consumer.
     * This can be in one of the following formats:
     *   project:&lt;project_id&gt;,
     *   project_number:&lt;project_number&gt;,
     *   api_key:&lt;api_key&gt;.
     * </pre>
     *
     * <code>optional string consumer_id = 3;</code>
     */
    public Builder setConsumerIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      consumerId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp startTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> startTimeBuilder_;
    /**
     * <pre>
     * Required. Start time of the operation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
     */
    public boolean hasStartTime() {
      return startTimeBuilder_ != null || startTime_ != null;
    }
    /**
     * <pre>
     * Required. Start time of the operation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
     */
    public com.google.protobuf.Timestamp getStartTime() {
      if (startTimeBuilder_ == null) {
        return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
      } else {
        return startTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required. Start time of the operation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
     */
    public Builder setStartTime(com.google.protobuf.Timestamp value) {
      if (startTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        startTime_ = value;
        onChanged();
      } else {
        startTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. Start time of the operation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
     */
    public Builder setStartTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (startTimeBuilder_ == null) {
        startTime_ = builderForValue.build();
        onChanged();
      } else {
        startTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Required. Start time of the operation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
     */
    public Builder mergeStartTime(com.google.protobuf.Timestamp value) {
      if (startTimeBuilder_ == null) {
        if (startTime_ != null) {
          startTime_ =
            com.google.protobuf.Timestamp.newBuilder(startTime_).mergeFrom(value).buildPartial();
        } else {
          startTime_ = value;
        }
        onChanged();
      } else {
        startTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. Start time of the operation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
     */
    public Builder clearStartTime() {
      if (startTimeBuilder_ == null) {
        startTime_ = null;
        onChanged();
      } else {
        startTime_ = null;
        startTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Required. Start time of the operation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
     */
    public com.google.protobuf.Timestamp.Builder getStartTimeBuilder() {
      
      onChanged();
      return getStartTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required. Start time of the operation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
      if (startTimeBuilder_ != null) {
        return startTimeBuilder_.getMessageOrBuilder();
      } else {
        return startTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
      }
    }
    /**
     * <pre>
     * Required. Start time of the operation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp start_time = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getStartTimeFieldBuilder() {
      if (startTimeBuilder_ == null) {
        startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getStartTime(),
                getParentForChildren(),
                isClean());
        startTime_ = null;
      }
      return startTimeBuilder_;
    }

    private com.google.protobuf.Timestamp endTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> endTimeBuilder_;
    /**
     * <pre>
     * End time of the operation.
     * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
     * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
     */
    public boolean hasEndTime() {
      return endTimeBuilder_ != null || endTime_ != null;
    }
    /**
     * <pre>
     * End time of the operation.
     * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
     * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
     */
    public com.google.protobuf.Timestamp getEndTime() {
      if (endTimeBuilder_ == null) {
        return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
      } else {
        return endTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * End time of the operation.
     * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
     * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
     */
    public Builder setEndTime(com.google.protobuf.Timestamp value) {
      if (endTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        endTime_ = value;
        onChanged();
      } else {
        endTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * End time of the operation.
     * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
     * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
     */
    public Builder setEndTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (endTimeBuilder_ == null) {
        endTime_ = builderForValue.build();
        onChanged();
      } else {
        endTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * End time of the operation.
     * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
     * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
     */
    public Builder mergeEndTime(com.google.protobuf.Timestamp value) {
      if (endTimeBuilder_ == null) {
        if (endTime_ != null) {
          endTime_ =
            com.google.protobuf.Timestamp.newBuilder(endTime_).mergeFrom(value).buildPartial();
        } else {
          endTime_ = value;
        }
        onChanged();
      } else {
        endTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * End time of the operation.
     * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
     * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
     */
    public Builder clearEndTime() {
      if (endTimeBuilder_ == null) {
        endTime_ = null;
        onChanged();
      } else {
        endTime_ = null;
        endTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * End time of the operation.
     * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
     * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
     */
    public com.google.protobuf.Timestamp.Builder getEndTimeBuilder() {
      
      onChanged();
      return getEndTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * End time of the operation.
     * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
     * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
      if (endTimeBuilder_ != null) {
        return endTimeBuilder_.getMessageOrBuilder();
      } else {
        return endTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
      }
    }
    /**
     * <pre>
     * End time of the operation.
     * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
     * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp end_time = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getEndTimeFieldBuilder() {
      if (endTimeBuilder_ == null) {
        endTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getEndTime(),
                getParentForChildren(),
                isClean());
        endTime_ = null;
      }
      return endTimeBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableLabels() {
      onChanged();;
      if (labels_ == null) {
        labels_ = com.google.protobuf.MapField.newMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      if (!labels_.isMutable()) {
        labels_ = labels_.copy();
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Labels describing the operation. Only the following labels are allowed:
     * - Labels describing monitored resources as defined in
     *   the service configuration.
     * - Default labels of metric values. When specified, labels defined in the
     *   metric value override these default.
     * - The following labels defined by Google Cloud Platform:
     *     - `cloud.googleapis.com/location` describing the location where the
     *        operation happened,
     *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
     *        of the API request,
     *     - `servicecontrol.googleapis.com/service_agent` describing the service
     *        used to handle the API request (e.g. ESP),
     *     - `servicecontrol.googleapis.com/platform` describing the platform
     *        where the API is served (e.g. GAE, GCE, GKE).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 6;</code>
     */

    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Labels describing the operation. Only the following labels are allowed:
     * - Labels describing monitored resources as defined in
     *   the service configuration.
     * - Default labels of metric values. When specified, labels defined in the
     *   metric value override these default.
     * - The following labels defined by Google Cloud Platform:
     *     - `cloud.googleapis.com/location` describing the location where the
     *        operation happened,
     *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
     *        of the API request,
     *     - `servicecontrol.googleapis.com/service_agent` describing the service
     *        used to handle the API request (e.g. ESP),
     *     - `servicecontrol.googleapis.com/platform` describing the platform
     *        where the API is served (e.g. GAE, GCE, GKE).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Labels describing the operation. Only the following labels are allowed:
     * - Labels describing monitored resources as defined in
     *   the service configuration.
     * - Default labels of metric values. When specified, labels defined in the
     *   metric value override these default.
     * - The following labels defined by Google Cloud Platform:
     *     - `cloud.googleapis.com/location` describing the location where the
     *        operation happened,
     *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
     *        of the API request,
     *     - `servicecontrol.googleapis.com/service_agent` describing the service
     *        used to handle the API request (e.g. ESP),
     *     - `servicecontrol.googleapis.com/platform` describing the platform
     *        where the API is served (e.g. GAE, GCE, GKE).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 6;</code>
     */

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Labels describing the operation. Only the following labels are allowed:
     * - Labels describing monitored resources as defined in
     *   the service configuration.
     * - Default labels of metric values. When specified, labels defined in the
     *   metric value override these default.
     * - The following labels defined by Google Cloud Platform:
     *     - `cloud.googleapis.com/location` describing the location where the
     *        operation happened,
     *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
     *        of the API request,
     *     - `servicecontrol.googleapis.com/service_agent` describing the service
     *        used to handle the API request (e.g. ESP),
     *     - `servicecontrol.googleapis.com/platform` describing the platform
     *        where the API is served (e.g. GAE, GCE, GKE).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 6;</code>
     */

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLabels() {
      getMutableLabels().clear();
      return this;
    }
    /**
     * <pre>
     * Labels describing the operation. Only the following labels are allowed:
     * - Labels describing monitored resources as defined in
     *   the service configuration.
     * - Default labels of metric values. When specified, labels defined in the
     *   metric value override these default.
     * - The following labels defined by Google Cloud Platform:
     *     - `cloud.googleapis.com/location` describing the location where the
     *        operation happened,
     *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
     *        of the API request,
     *     - `servicecontrol.googleapis.com/service_agent` describing the service
     *        used to handle the API request (e.g. ESP),
     *     - `servicecontrol.googleapis.com/platform` describing the platform
     *        where the API is served (e.g. GAE, GCE, GKE).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 6;</code>
     */

    public Builder removeLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      getMutableLabels().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableLabels() {
      return internalGetMutableLabels().getMutableMap();
    }
    /**
     * <pre>
     * Labels describing the operation. Only the following labels are allowed:
     * - Labels describing monitored resources as defined in
     *   the service configuration.
     * - Default labels of metric values. When specified, labels defined in the
     *   metric value override these default.
     * - The following labels defined by Google Cloud Platform:
     *     - `cloud.googleapis.com/location` describing the location where the
     *        operation happened,
     *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
     *        of the API request,
     *     - `servicecontrol.googleapis.com/service_agent` describing the service
     *        used to handle the API request (e.g. ESP),
     *     - `servicecontrol.googleapis.com/platform` describing the platform
     *        where the API is served (e.g. GAE, GCE, GKE).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 6;</code>
     */
    public Builder putLabels(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      getMutableLabels().put(key, value);
      return this;
    }
    /**
     * <pre>
     * Labels describing the operation. Only the following labels are allowed:
     * - Labels describing monitored resources as defined in
     *   the service configuration.
     * - Default labels of metric values. When specified, labels defined in the
     *   metric value override these default.
     * - The following labels defined by Google Cloud Platform:
     *     - `cloud.googleapis.com/location` describing the location where the
     *        operation happened,
     *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
     *        of the API request,
     *     - `servicecontrol.googleapis.com/service_agent` describing the service
     *        used to handle the API request (e.g. ESP),
     *     - `servicecontrol.googleapis.com/platform` describing the platform
     *        where the API is served (e.g. GAE, GCE, GKE).
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 6;</code>
     */

    public Builder putAllLabels(
        java.util.Map<java.lang.String, java.lang.String> values) {
      getMutableLabels().putAll(values);
      return this;
    }

    private java.util.List<com.google.api.servicecontrol.v1.MetricValueSet> metricValueSets_ =
      java.util.Collections.emptyList();
    private void ensureMetricValueSetsIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        metricValueSets_ = new java.util.ArrayList<com.google.api.servicecontrol.v1.MetricValueSet>(metricValueSets_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.api.servicecontrol.v1.MetricValueSet, com.google.api.servicecontrol.v1.MetricValueSet.Builder, com.google.api.servicecontrol.v1.MetricValueSetOrBuilder> metricValueSetsBuilder_;

    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public java.util.List<com.google.api.servicecontrol.v1.MetricValueSet> getMetricValueSetsList() {
      if (metricValueSetsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(metricValueSets_);
      } else {
        return metricValueSetsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public int getMetricValueSetsCount() {
      if (metricValueSetsBuilder_ == null) {
        return metricValueSets_.size();
      } else {
        return metricValueSetsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public com.google.api.servicecontrol.v1.MetricValueSet getMetricValueSets(int index) {
      if (metricValueSetsBuilder_ == null) {
        return metricValueSets_.get(index);
      } else {
        return metricValueSetsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public Builder setMetricValueSets(
        int index, com.google.api.servicecontrol.v1.MetricValueSet value) {
      if (metricValueSetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricValueSetsIsMutable();
        metricValueSets_.set(index, value);
        onChanged();
      } else {
        metricValueSetsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public Builder setMetricValueSets(
        int index, com.google.api.servicecontrol.v1.MetricValueSet.Builder builderForValue) {
      if (metricValueSetsBuilder_ == null) {
        ensureMetricValueSetsIsMutable();
        metricValueSets_.set(index, builderForValue.build());
        onChanged();
      } else {
        metricValueSetsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public Builder addMetricValueSets(com.google.api.servicecontrol.v1.MetricValueSet value) {
      if (metricValueSetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricValueSetsIsMutable();
        metricValueSets_.add(value);
        onChanged();
      } else {
        metricValueSetsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public Builder addMetricValueSets(
        int index, com.google.api.servicecontrol.v1.MetricValueSet value) {
      if (metricValueSetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricValueSetsIsMutable();
        metricValueSets_.add(index, value);
        onChanged();
      } else {
        metricValueSetsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public Builder addMetricValueSets(
        com.google.api.servicecontrol.v1.MetricValueSet.Builder builderForValue) {
      if (metricValueSetsBuilder_ == null) {
        ensureMetricValueSetsIsMutable();
        metricValueSets_.add(builderForValue.build());
        onChanged();
      } else {
        metricValueSetsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public Builder addMetricValueSets(
        int index, com.google.api.servicecontrol.v1.MetricValueSet.Builder builderForValue) {
      if (metricValueSetsBuilder_ == null) {
        ensureMetricValueSetsIsMutable();
        metricValueSets_.add(index, builderForValue.build());
        onChanged();
      } else {
        metricValueSetsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public Builder addAllMetricValueSets(
        java.lang.Iterable<? extends com.google.api.servicecontrol.v1.MetricValueSet> values) {
      if (metricValueSetsBuilder_ == null) {
        ensureMetricValueSetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, metricValueSets_);
        onChanged();
      } else {
        metricValueSetsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public Builder clearMetricValueSets() {
      if (metricValueSetsBuilder_ == null) {
        metricValueSets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        metricValueSetsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public Builder removeMetricValueSets(int index) {
      if (metricValueSetsBuilder_ == null) {
        ensureMetricValueSetsIsMutable();
        metricValueSets_.remove(index);
        onChanged();
      } else {
        metricValueSetsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public com.google.api.servicecontrol.v1.MetricValueSet.Builder getMetricValueSetsBuilder(
        int index) {
      return getMetricValueSetsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public com.google.api.servicecontrol.v1.MetricValueSetOrBuilder getMetricValueSetsOrBuilder(
        int index) {
      if (metricValueSetsBuilder_ == null) {
        return metricValueSets_.get(index);  } else {
        return metricValueSetsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public java.util.List<? extends com.google.api.servicecontrol.v1.MetricValueSetOrBuilder> 
         getMetricValueSetsOrBuilderList() {
      if (metricValueSetsBuilder_ != null) {
        return metricValueSetsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(metricValueSets_);
      }
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public com.google.api.servicecontrol.v1.MetricValueSet.Builder addMetricValueSetsBuilder() {
      return getMetricValueSetsFieldBuilder().addBuilder(
          com.google.api.servicecontrol.v1.MetricValueSet.getDefaultInstance());
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public com.google.api.servicecontrol.v1.MetricValueSet.Builder addMetricValueSetsBuilder(
        int index) {
      return getMetricValueSetsFieldBuilder().addBuilder(
          index, com.google.api.servicecontrol.v1.MetricValueSet.getDefaultInstance());
    }
    /**
     * <pre>
     * Represents information about this operation. Each MetricValueSet
     * corresponds to a metric defined in the service configuration.
     * The data type used in the MetricValueSet must agree with
     * the data type specified in the metric definition.
     * Within a single operation, it is not allowed to have more than one
     * MetricValue instances that have the same metric names and identical
     * label value combinations. If a request has such duplicated MetricValue
     * instances, the entire request is rejected with
     * an invalid argument error.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;</code>
     */
    public java.util.List<com.google.api.servicecontrol.v1.MetricValueSet.Builder> 
         getMetricValueSetsBuilderList() {
      return getMetricValueSetsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.api.servicecontrol.v1.MetricValueSet, com.google.api.servicecontrol.v1.MetricValueSet.Builder, com.google.api.servicecontrol.v1.MetricValueSetOrBuilder> 
        getMetricValueSetsFieldBuilder() {
      if (metricValueSetsBuilder_ == null) {
        metricValueSetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.api.servicecontrol.v1.MetricValueSet, com.google.api.servicecontrol.v1.MetricValueSet.Builder, com.google.api.servicecontrol.v1.MetricValueSetOrBuilder>(
                metricValueSets_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        metricValueSets_ = null;
      }
      return metricValueSetsBuilder_;
    }

    private java.util.List<com.google.api.servicecontrol.v1.LogEntry> logEntries_ =
      java.util.Collections.emptyList();
    private void ensureLogEntriesIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        logEntries_ = new java.util.ArrayList<com.google.api.servicecontrol.v1.LogEntry>(logEntries_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.api.servicecontrol.v1.LogEntry, com.google.api.servicecontrol.v1.LogEntry.Builder, com.google.api.servicecontrol.v1.LogEntryOrBuilder> logEntriesBuilder_;

    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public java.util.List<com.google.api.servicecontrol.v1.LogEntry> getLogEntriesList() {
      if (logEntriesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(logEntries_);
      } else {
        return logEntriesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public int getLogEntriesCount() {
      if (logEntriesBuilder_ == null) {
        return logEntries_.size();
      } else {
        return logEntriesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public com.google.api.servicecontrol.v1.LogEntry getLogEntries(int index) {
      if (logEntriesBuilder_ == null) {
        return logEntries_.get(index);
      } else {
        return logEntriesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public Builder setLogEntries(
        int index, com.google.api.servicecontrol.v1.LogEntry value) {
      if (logEntriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLogEntriesIsMutable();
        logEntries_.set(index, value);
        onChanged();
      } else {
        logEntriesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public Builder setLogEntries(
        int index, com.google.api.servicecontrol.v1.LogEntry.Builder builderForValue) {
      if (logEntriesBuilder_ == null) {
        ensureLogEntriesIsMutable();
        logEntries_.set(index, builderForValue.build());
        onChanged();
      } else {
        logEntriesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public Builder addLogEntries(com.google.api.servicecontrol.v1.LogEntry value) {
      if (logEntriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLogEntriesIsMutable();
        logEntries_.add(value);
        onChanged();
      } else {
        logEntriesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public Builder addLogEntries(
        int index, com.google.api.servicecontrol.v1.LogEntry value) {
      if (logEntriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLogEntriesIsMutable();
        logEntries_.add(index, value);
        onChanged();
      } else {
        logEntriesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public Builder addLogEntries(
        com.google.api.servicecontrol.v1.LogEntry.Builder builderForValue) {
      if (logEntriesBuilder_ == null) {
        ensureLogEntriesIsMutable();
        logEntries_.add(builderForValue.build());
        onChanged();
      } else {
        logEntriesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public Builder addLogEntries(
        int index, com.google.api.servicecontrol.v1.LogEntry.Builder builderForValue) {
      if (logEntriesBuilder_ == null) {
        ensureLogEntriesIsMutable();
        logEntries_.add(index, builderForValue.build());
        onChanged();
      } else {
        logEntriesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public Builder addAllLogEntries(
        java.lang.Iterable<? extends com.google.api.servicecontrol.v1.LogEntry> values) {
      if (logEntriesBuilder_ == null) {
        ensureLogEntriesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, logEntries_);
        onChanged();
      } else {
        logEntriesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public Builder clearLogEntries() {
      if (logEntriesBuilder_ == null) {
        logEntries_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        logEntriesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public Builder removeLogEntries(int index) {
      if (logEntriesBuilder_ == null) {
        ensureLogEntriesIsMutable();
        logEntries_.remove(index);
        onChanged();
      } else {
        logEntriesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public com.google.api.servicecontrol.v1.LogEntry.Builder getLogEntriesBuilder(
        int index) {
      return getLogEntriesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public com.google.api.servicecontrol.v1.LogEntryOrBuilder getLogEntriesOrBuilder(
        int index) {
      if (logEntriesBuilder_ == null) {
        return logEntries_.get(index);  } else {
        return logEntriesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public java.util.List<? extends com.google.api.servicecontrol.v1.LogEntryOrBuilder> 
         getLogEntriesOrBuilderList() {
      if (logEntriesBuilder_ != null) {
        return logEntriesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(logEntries_);
      }
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public com.google.api.servicecontrol.v1.LogEntry.Builder addLogEntriesBuilder() {
      return getLogEntriesFieldBuilder().addBuilder(
          com.google.api.servicecontrol.v1.LogEntry.getDefaultInstance());
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public com.google.api.servicecontrol.v1.LogEntry.Builder addLogEntriesBuilder(
        int index) {
      return getLogEntriesFieldBuilder().addBuilder(
          index, com.google.api.servicecontrol.v1.LogEntry.getDefaultInstance());
    }
    /**
     * <pre>
     * Represents information to be logged.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.LogEntry log_entries = 8;</code>
     */
    public java.util.List<com.google.api.servicecontrol.v1.LogEntry.Builder> 
         getLogEntriesBuilderList() {
      return getLogEntriesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.api.servicecontrol.v1.LogEntry, com.google.api.servicecontrol.v1.LogEntry.Builder, com.google.api.servicecontrol.v1.LogEntryOrBuilder> 
        getLogEntriesFieldBuilder() {
      if (logEntriesBuilder_ == null) {
        logEntriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.api.servicecontrol.v1.LogEntry, com.google.api.servicecontrol.v1.LogEntry.Builder, com.google.api.servicecontrol.v1.LogEntryOrBuilder>(
                logEntries_,
                ((bitField0_ & 0x00000080) == 0x00000080),
                getParentForChildren(),
                isClean());
        logEntries_ = null;
      }
      return logEntriesBuilder_;
    }

    private int importance_ = 0;
    /**
     * <pre>
     * DO NOT USE. This is an experimental field.
     * </pre>
     *
     * <code>optional .google.api.servicecontrol.v1.Operation.Importance importance = 11;</code>
     */
    public int getImportanceValue() {
      return importance_;
    }
    /**
     * <pre>
     * DO NOT USE. This is an experimental field.
     * </pre>
     *
     * <code>optional .google.api.servicecontrol.v1.Operation.Importance importance = 11;</code>
     */
    public Builder setImportanceValue(int value) {
      importance_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DO NOT USE. This is an experimental field.
     * </pre>
     *
     * <code>optional .google.api.servicecontrol.v1.Operation.Importance importance = 11;</code>
     */
    public com.google.api.servicecontrol.v1.Operation.Importance getImportance() {
      com.google.api.servicecontrol.v1.Operation.Importance result = com.google.api.servicecontrol.v1.Operation.Importance.valueOf(importance_);
      return result == null ? com.google.api.servicecontrol.v1.Operation.Importance.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * DO NOT USE. This is an experimental field.
     * </pre>
     *
     * <code>optional .google.api.servicecontrol.v1.Operation.Importance importance = 11;</code>
     */
    public Builder setImportance(com.google.api.servicecontrol.v1.Operation.Importance value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      importance_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DO NOT USE. This is an experimental field.
     * </pre>
     *
     * <code>optional .google.api.servicecontrol.v1.Operation.Importance importance = 11;</code>
     */
    public Builder clearImportance() {
      
      importance_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.api.servicecontrol.v1.Operation)
  }

  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.Operation)
  private static final com.google.api.servicecontrol.v1.Operation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.api.servicecontrol.v1.Operation();
  }

  public static com.google.api.servicecontrol.v1.Operation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Operation>
      PARSER = new com.google.protobuf.AbstractParser<Operation>() {
    public Operation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Operation(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Operation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Operation> getParserForType() {
    return PARSER;
  }

  public com.google.api.servicecontrol.v1.Operation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

