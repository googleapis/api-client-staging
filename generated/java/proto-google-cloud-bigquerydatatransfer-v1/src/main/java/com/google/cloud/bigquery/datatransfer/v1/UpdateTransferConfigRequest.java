// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/datatransfer/v1/datatransfer.proto

package com.google.cloud.bigquery.datatransfer.v1;

/**
 * <pre>
 * A request to update a transfer configuration. To update the user id of the
 * transfer configuration, an authorization code needs to be provided.
 * </pre>
 *
 * Protobuf type {@code google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest}
 */
public  final class UpdateTransferConfigRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
    UpdateTransferConfigRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UpdateTransferConfigRequest.newBuilder() to construct.
  private UpdateTransferConfigRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UpdateTransferConfigRequest() {
    authorizationCode_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private UpdateTransferConfigRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.cloud.bigquery.datatransfer.v1.TransferConfig.Builder subBuilder = null;
            if (transferConfig_ != null) {
              subBuilder = transferConfig_.toBuilder();
            }
            transferConfig_ = input.readMessage(com.google.cloud.bigquery.datatransfer.v1.TransferConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(transferConfig_);
              transferConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            authorizationCode_ = s;
            break;
          }
          case 34: {
            com.google.protobuf.FieldMask.Builder subBuilder = null;
            if (updateMask_ != null) {
              subBuilder = updateMask_.toBuilder();
            }
            updateMask_ = input.readMessage(com.google.protobuf.FieldMask.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(updateMask_);
              updateMask_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.bigquery.datatransfer.v1.DataTransferProto.internal_static_google_cloud_bigquery_datatransfer_v1_UpdateTransferConfigRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.bigquery.datatransfer.v1.DataTransferProto.internal_static_google_cloud_bigquery_datatransfer_v1_UpdateTransferConfigRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.class, com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.Builder.class);
  }

  public static final int TRANSFER_CONFIG_FIELD_NUMBER = 1;
  private com.google.cloud.bigquery.datatransfer.v1.TransferConfig transferConfig_;
  /**
   * <pre>
   * Data transfer configuration to create.
   * </pre>
   *
   * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
   */
  public boolean hasTransferConfig() {
    return transferConfig_ != null;
  }
  /**
   * <pre>
   * Data transfer configuration to create.
   * </pre>
   *
   * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
   */
  public com.google.cloud.bigquery.datatransfer.v1.TransferConfig getTransferConfig() {
    return transferConfig_ == null ? com.google.cloud.bigquery.datatransfer.v1.TransferConfig.getDefaultInstance() : transferConfig_;
  }
  /**
   * <pre>
   * Data transfer configuration to create.
   * </pre>
   *
   * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
   */
  public com.google.cloud.bigquery.datatransfer.v1.TransferConfigOrBuilder getTransferConfigOrBuilder() {
    return getTransferConfig();
  }

  public static final int AUTHORIZATION_CODE_FIELD_NUMBER = 3;
  private volatile java.lang.Object authorizationCode_;
  /**
   * <pre>
   * Optional OAuth2 authorization code to use with this transfer configuration.
   * If it is provided, the transfer configuration will be associated with the
   * authorizing user.
   * In order to obtain authorization_code, please make a
   * request to
   * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=&lt;datatransferapiclientid&gt;&amp;scope=&lt;data_source_scopes&gt;&amp;redirect_uri=&lt;redirect_uri&gt;
   * * client_id should be OAuth client_id of BigQuery DTS API for the given
   *   data source returned by ListDataSources method.
   * * data_source_scopes are the scopes returned by ListDataSources method.
   * * redirect_uri is an optional parameter. If not specified, then
   *   authorization code is posted to the opener of authorization flow window.
   *   Otherwise it will be sent to the redirect uri. A special value of
   *   urn:ietf:wg:oauth:2.0:oob means that authorization code should be
   *   returned in the title bar of the browser, with the page text prompting
   *   the user to copy the code and paste it in the application.
   * </pre>
   *
   * <code>string authorization_code = 3;</code>
   */
  public java.lang.String getAuthorizationCode() {
    java.lang.Object ref = authorizationCode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      authorizationCode_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional OAuth2 authorization code to use with this transfer configuration.
   * If it is provided, the transfer configuration will be associated with the
   * authorizing user.
   * In order to obtain authorization_code, please make a
   * request to
   * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=&lt;datatransferapiclientid&gt;&amp;scope=&lt;data_source_scopes&gt;&amp;redirect_uri=&lt;redirect_uri&gt;
   * * client_id should be OAuth client_id of BigQuery DTS API for the given
   *   data source returned by ListDataSources method.
   * * data_source_scopes are the scopes returned by ListDataSources method.
   * * redirect_uri is an optional parameter. If not specified, then
   *   authorization code is posted to the opener of authorization flow window.
   *   Otherwise it will be sent to the redirect uri. A special value of
   *   urn:ietf:wg:oauth:2.0:oob means that authorization code should be
   *   returned in the title bar of the browser, with the page text prompting
   *   the user to copy the code and paste it in the application.
   * </pre>
   *
   * <code>string authorization_code = 3;</code>
   */
  public com.google.protobuf.ByteString
      getAuthorizationCodeBytes() {
    java.lang.Object ref = authorizationCode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      authorizationCode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UPDATE_MASK_FIELD_NUMBER = 4;
  private com.google.protobuf.FieldMask updateMask_;
  /**
   * <pre>
   * Required list of fields to be updated in this request.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 4;</code>
   */
  public boolean hasUpdateMask() {
    return updateMask_ != null;
  }
  /**
   * <pre>
   * Required list of fields to be updated in this request.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 4;</code>
   */
  public com.google.protobuf.FieldMask getUpdateMask() {
    return updateMask_ == null ? com.google.protobuf.FieldMask.getDefaultInstance() : updateMask_;
  }
  /**
   * <pre>
   * Required list of fields to be updated in this request.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 4;</code>
   */
  public com.google.protobuf.FieldMaskOrBuilder getUpdateMaskOrBuilder() {
    return getUpdateMask();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (transferConfig_ != null) {
      output.writeMessage(1, getTransferConfig());
    }
    if (!getAuthorizationCodeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, authorizationCode_);
    }
    if (updateMask_ != null) {
      output.writeMessage(4, getUpdateMask());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (transferConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTransferConfig());
    }
    if (!getAuthorizationCodeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, authorizationCode_);
    }
    if (updateMask_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getUpdateMask());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)) {
      return super.equals(obj);
    }
    com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest other = (com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest) obj;

    boolean result = true;
    result = result && (hasTransferConfig() == other.hasTransferConfig());
    if (hasTransferConfig()) {
      result = result && getTransferConfig()
          .equals(other.getTransferConfig());
    }
    result = result && getAuthorizationCode()
        .equals(other.getAuthorizationCode());
    result = result && (hasUpdateMask() == other.hasUpdateMask());
    if (hasUpdateMask()) {
      result = result && getUpdateMask()
          .equals(other.getUpdateMask());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTransferConfig()) {
      hash = (37 * hash) + TRANSFER_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getTransferConfig().hashCode();
    }
    hash = (37 * hash) + AUTHORIZATION_CODE_FIELD_NUMBER;
    hash = (53 * hash) + getAuthorizationCode().hashCode();
    if (hasUpdateMask()) {
      hash = (37 * hash) + UPDATE_MASK_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateMask().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A request to update a transfer configuration. To update the user id of the
   * transfer configuration, an authorization code needs to be provided.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
      com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.datatransfer.v1.DataTransferProto.internal_static_google_cloud_bigquery_datatransfer_v1_UpdateTransferConfigRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.datatransfer.v1.DataTransferProto.internal_static_google_cloud_bigquery_datatransfer_v1_UpdateTransferConfigRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.class, com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.Builder.class);
    }

    // Construct using com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (transferConfigBuilder_ == null) {
        transferConfig_ = null;
      } else {
        transferConfig_ = null;
        transferConfigBuilder_ = null;
      }
      authorizationCode_ = "";

      if (updateMaskBuilder_ == null) {
        updateMask_ = null;
      } else {
        updateMask_ = null;
        updateMaskBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.bigquery.datatransfer.v1.DataTransferProto.internal_static_google_cloud_bigquery_datatransfer_v1_UpdateTransferConfigRequest_descriptor;
    }

    public com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest getDefaultInstanceForType() {
      return com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.getDefaultInstance();
    }

    public com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest build() {
      com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest buildPartial() {
      com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest result = new com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest(this);
      if (transferConfigBuilder_ == null) {
        result.transferConfig_ = transferConfig_;
      } else {
        result.transferConfig_ = transferConfigBuilder_.build();
      }
      result.authorizationCode_ = authorizationCode_;
      if (updateMaskBuilder_ == null) {
        result.updateMask_ = updateMask_;
      } else {
        result.updateMask_ = updateMaskBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest) {
        return mergeFrom((com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest other) {
      if (other == com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.getDefaultInstance()) return this;
      if (other.hasTransferConfig()) {
        mergeTransferConfig(other.getTransferConfig());
      }
      if (!other.getAuthorizationCode().isEmpty()) {
        authorizationCode_ = other.authorizationCode_;
        onChanged();
      }
      if (other.hasUpdateMask()) {
        mergeUpdateMask(other.getUpdateMask());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.cloud.bigquery.datatransfer.v1.TransferConfig transferConfig_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.datatransfer.v1.TransferConfig, com.google.cloud.bigquery.datatransfer.v1.TransferConfig.Builder, com.google.cloud.bigquery.datatransfer.v1.TransferConfigOrBuilder> transferConfigBuilder_;
    /**
     * <pre>
     * Data transfer configuration to create.
     * </pre>
     *
     * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
     */
    public boolean hasTransferConfig() {
      return transferConfigBuilder_ != null || transferConfig_ != null;
    }
    /**
     * <pre>
     * Data transfer configuration to create.
     * </pre>
     *
     * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
     */
    public com.google.cloud.bigquery.datatransfer.v1.TransferConfig getTransferConfig() {
      if (transferConfigBuilder_ == null) {
        return transferConfig_ == null ? com.google.cloud.bigquery.datatransfer.v1.TransferConfig.getDefaultInstance() : transferConfig_;
      } else {
        return transferConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Data transfer configuration to create.
     * </pre>
     *
     * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
     */
    public Builder setTransferConfig(com.google.cloud.bigquery.datatransfer.v1.TransferConfig value) {
      if (transferConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        transferConfig_ = value;
        onChanged();
      } else {
        transferConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Data transfer configuration to create.
     * </pre>
     *
     * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
     */
    public Builder setTransferConfig(
        com.google.cloud.bigquery.datatransfer.v1.TransferConfig.Builder builderForValue) {
      if (transferConfigBuilder_ == null) {
        transferConfig_ = builderForValue.build();
        onChanged();
      } else {
        transferConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Data transfer configuration to create.
     * </pre>
     *
     * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
     */
    public Builder mergeTransferConfig(com.google.cloud.bigquery.datatransfer.v1.TransferConfig value) {
      if (transferConfigBuilder_ == null) {
        if (transferConfig_ != null) {
          transferConfig_ =
            com.google.cloud.bigquery.datatransfer.v1.TransferConfig.newBuilder(transferConfig_).mergeFrom(value).buildPartial();
        } else {
          transferConfig_ = value;
        }
        onChanged();
      } else {
        transferConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Data transfer configuration to create.
     * </pre>
     *
     * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
     */
    public Builder clearTransferConfig() {
      if (transferConfigBuilder_ == null) {
        transferConfig_ = null;
        onChanged();
      } else {
        transferConfig_ = null;
        transferConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Data transfer configuration to create.
     * </pre>
     *
     * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
     */
    public com.google.cloud.bigquery.datatransfer.v1.TransferConfig.Builder getTransferConfigBuilder() {
      
      onChanged();
      return getTransferConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Data transfer configuration to create.
     * </pre>
     *
     * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
     */
    public com.google.cloud.bigquery.datatransfer.v1.TransferConfigOrBuilder getTransferConfigOrBuilder() {
      if (transferConfigBuilder_ != null) {
        return transferConfigBuilder_.getMessageOrBuilder();
      } else {
        return transferConfig_ == null ?
            com.google.cloud.bigquery.datatransfer.v1.TransferConfig.getDefaultInstance() : transferConfig_;
      }
    }
    /**
     * <pre>
     * Data transfer configuration to create.
     * </pre>
     *
     * <code>.google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.datatransfer.v1.TransferConfig, com.google.cloud.bigquery.datatransfer.v1.TransferConfig.Builder, com.google.cloud.bigquery.datatransfer.v1.TransferConfigOrBuilder> 
        getTransferConfigFieldBuilder() {
      if (transferConfigBuilder_ == null) {
        transferConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.datatransfer.v1.TransferConfig, com.google.cloud.bigquery.datatransfer.v1.TransferConfig.Builder, com.google.cloud.bigquery.datatransfer.v1.TransferConfigOrBuilder>(
                getTransferConfig(),
                getParentForChildren(),
                isClean());
        transferConfig_ = null;
      }
      return transferConfigBuilder_;
    }

    private java.lang.Object authorizationCode_ = "";
    /**
     * <pre>
     * Optional OAuth2 authorization code to use with this transfer configuration.
     * If it is provided, the transfer configuration will be associated with the
     * authorizing user.
     * In order to obtain authorization_code, please make a
     * request to
     * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=&lt;datatransferapiclientid&gt;&amp;scope=&lt;data_source_scopes&gt;&amp;redirect_uri=&lt;redirect_uri&gt;
     * * client_id should be OAuth client_id of BigQuery DTS API for the given
     *   data source returned by ListDataSources method.
     * * data_source_scopes are the scopes returned by ListDataSources method.
     * * redirect_uri is an optional parameter. If not specified, then
     *   authorization code is posted to the opener of authorization flow window.
     *   Otherwise it will be sent to the redirect uri. A special value of
     *   urn:ietf:wg:oauth:2.0:oob means that authorization code should be
     *   returned in the title bar of the browser, with the page text prompting
     *   the user to copy the code and paste it in the application.
     * </pre>
     *
     * <code>string authorization_code = 3;</code>
     */
    public java.lang.String getAuthorizationCode() {
      java.lang.Object ref = authorizationCode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authorizationCode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional OAuth2 authorization code to use with this transfer configuration.
     * If it is provided, the transfer configuration will be associated with the
     * authorizing user.
     * In order to obtain authorization_code, please make a
     * request to
     * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=&lt;datatransferapiclientid&gt;&amp;scope=&lt;data_source_scopes&gt;&amp;redirect_uri=&lt;redirect_uri&gt;
     * * client_id should be OAuth client_id of BigQuery DTS API for the given
     *   data source returned by ListDataSources method.
     * * data_source_scopes are the scopes returned by ListDataSources method.
     * * redirect_uri is an optional parameter. If not specified, then
     *   authorization code is posted to the opener of authorization flow window.
     *   Otherwise it will be sent to the redirect uri. A special value of
     *   urn:ietf:wg:oauth:2.0:oob means that authorization code should be
     *   returned in the title bar of the browser, with the page text prompting
     *   the user to copy the code and paste it in the application.
     * </pre>
     *
     * <code>string authorization_code = 3;</code>
     */
    public com.google.protobuf.ByteString
        getAuthorizationCodeBytes() {
      java.lang.Object ref = authorizationCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authorizationCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional OAuth2 authorization code to use with this transfer configuration.
     * If it is provided, the transfer configuration will be associated with the
     * authorizing user.
     * In order to obtain authorization_code, please make a
     * request to
     * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=&lt;datatransferapiclientid&gt;&amp;scope=&lt;data_source_scopes&gt;&amp;redirect_uri=&lt;redirect_uri&gt;
     * * client_id should be OAuth client_id of BigQuery DTS API for the given
     *   data source returned by ListDataSources method.
     * * data_source_scopes are the scopes returned by ListDataSources method.
     * * redirect_uri is an optional parameter. If not specified, then
     *   authorization code is posted to the opener of authorization flow window.
     *   Otherwise it will be sent to the redirect uri. A special value of
     *   urn:ietf:wg:oauth:2.0:oob means that authorization code should be
     *   returned in the title bar of the browser, with the page text prompting
     *   the user to copy the code and paste it in the application.
     * </pre>
     *
     * <code>string authorization_code = 3;</code>
     */
    public Builder setAuthorizationCode(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      authorizationCode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional OAuth2 authorization code to use with this transfer configuration.
     * If it is provided, the transfer configuration will be associated with the
     * authorizing user.
     * In order to obtain authorization_code, please make a
     * request to
     * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=&lt;datatransferapiclientid&gt;&amp;scope=&lt;data_source_scopes&gt;&amp;redirect_uri=&lt;redirect_uri&gt;
     * * client_id should be OAuth client_id of BigQuery DTS API for the given
     *   data source returned by ListDataSources method.
     * * data_source_scopes are the scopes returned by ListDataSources method.
     * * redirect_uri is an optional parameter. If not specified, then
     *   authorization code is posted to the opener of authorization flow window.
     *   Otherwise it will be sent to the redirect uri. A special value of
     *   urn:ietf:wg:oauth:2.0:oob means that authorization code should be
     *   returned in the title bar of the browser, with the page text prompting
     *   the user to copy the code and paste it in the application.
     * </pre>
     *
     * <code>string authorization_code = 3;</code>
     */
    public Builder clearAuthorizationCode() {
      
      authorizationCode_ = getDefaultInstance().getAuthorizationCode();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional OAuth2 authorization code to use with this transfer configuration.
     * If it is provided, the transfer configuration will be associated with the
     * authorizing user.
     * In order to obtain authorization_code, please make a
     * request to
     * https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=&lt;datatransferapiclientid&gt;&amp;scope=&lt;data_source_scopes&gt;&amp;redirect_uri=&lt;redirect_uri&gt;
     * * client_id should be OAuth client_id of BigQuery DTS API for the given
     *   data source returned by ListDataSources method.
     * * data_source_scopes are the scopes returned by ListDataSources method.
     * * redirect_uri is an optional parameter. If not specified, then
     *   authorization code is posted to the opener of authorization flow window.
     *   Otherwise it will be sent to the redirect uri. A special value of
     *   urn:ietf:wg:oauth:2.0:oob means that authorization code should be
     *   returned in the title bar of the browser, with the page text prompting
     *   the user to copy the code and paste it in the application.
     * </pre>
     *
     * <code>string authorization_code = 3;</code>
     */
    public Builder setAuthorizationCodeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      authorizationCode_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.FieldMask updateMask_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FieldMask, com.google.protobuf.FieldMask.Builder, com.google.protobuf.FieldMaskOrBuilder> updateMaskBuilder_;
    /**
     * <pre>
     * Required list of fields to be updated in this request.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 4;</code>
     */
    public boolean hasUpdateMask() {
      return updateMaskBuilder_ != null || updateMask_ != null;
    }
    /**
     * <pre>
     * Required list of fields to be updated in this request.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 4;</code>
     */
    public com.google.protobuf.FieldMask getUpdateMask() {
      if (updateMaskBuilder_ == null) {
        return updateMask_ == null ? com.google.protobuf.FieldMask.getDefaultInstance() : updateMask_;
      } else {
        return updateMaskBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required list of fields to be updated in this request.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 4;</code>
     */
    public Builder setUpdateMask(com.google.protobuf.FieldMask value) {
      if (updateMaskBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        updateMask_ = value;
        onChanged();
      } else {
        updateMaskBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required list of fields to be updated in this request.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 4;</code>
     */
    public Builder setUpdateMask(
        com.google.protobuf.FieldMask.Builder builderForValue) {
      if (updateMaskBuilder_ == null) {
        updateMask_ = builderForValue.build();
        onChanged();
      } else {
        updateMaskBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Required list of fields to be updated in this request.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 4;</code>
     */
    public Builder mergeUpdateMask(com.google.protobuf.FieldMask value) {
      if (updateMaskBuilder_ == null) {
        if (updateMask_ != null) {
          updateMask_ =
            com.google.protobuf.FieldMask.newBuilder(updateMask_).mergeFrom(value).buildPartial();
        } else {
          updateMask_ = value;
        }
        onChanged();
      } else {
        updateMaskBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required list of fields to be updated in this request.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 4;</code>
     */
    public Builder clearUpdateMask() {
      if (updateMaskBuilder_ == null) {
        updateMask_ = null;
        onChanged();
      } else {
        updateMask_ = null;
        updateMaskBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Required list of fields to be updated in this request.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 4;</code>
     */
    public com.google.protobuf.FieldMask.Builder getUpdateMaskBuilder() {
      
      onChanged();
      return getUpdateMaskFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required list of fields to be updated in this request.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 4;</code>
     */
    public com.google.protobuf.FieldMaskOrBuilder getUpdateMaskOrBuilder() {
      if (updateMaskBuilder_ != null) {
        return updateMaskBuilder_.getMessageOrBuilder();
      } else {
        return updateMask_ == null ?
            com.google.protobuf.FieldMask.getDefaultInstance() : updateMask_;
      }
    }
    /**
     * <pre>
     * Required list of fields to be updated in this request.
     * </pre>
     *
     * <code>.google.protobuf.FieldMask update_mask = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FieldMask, com.google.protobuf.FieldMask.Builder, com.google.protobuf.FieldMaskOrBuilder> 
        getUpdateMaskFieldBuilder() {
      if (updateMaskBuilder_ == null) {
        updateMaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FieldMask, com.google.protobuf.FieldMask.Builder, com.google.protobuf.FieldMaskOrBuilder>(
                getUpdateMask(),
                getParentForChildren(),
                isClean());
        updateMask_ = null;
      }
      return updateMaskBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  private static final com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest();
  }

  public static com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UpdateTransferConfigRequest>
      PARSER = new com.google.protobuf.AbstractParser<UpdateTransferConfigRequest>() {
    public UpdateTransferConfigRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new UpdateTransferConfigRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<UpdateTransferConfigRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UpdateTransferConfigRequest> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

