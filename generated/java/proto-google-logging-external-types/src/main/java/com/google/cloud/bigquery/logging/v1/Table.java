// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/logging/v1/audit_data.proto

package com.google.cloud.bigquery.logging.v1;

/**
 * <pre>
 * Describes a BigQuery table.
 * See the [Table](/bigquery/docs/reference/v2/tables) API resource
 * for more details on individual fields.
 * Note: `Table.schema` has been deprecated in favor of `Table.schemaJson`.
 * `Table.schema` may continue to be present in your logs during this
 * transition.
 * </pre>
 *
 * Protobuf type {@code google.cloud.bigquery.logging.v1.Table}
 */
public  final class Table extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.bigquery.logging.v1.Table)
    TableOrBuilder {
  // Use Table.newBuilder() to construct.
  private Table(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Table() {
    schemaJson_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Table(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.cloud.bigquery.logging.v1.TableName.Builder subBuilder = null;
            if (tableName_ != null) {
              subBuilder = tableName_.toBuilder();
            }
            tableName_ = input.readMessage(com.google.cloud.bigquery.logging.v1.TableName.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tableName_);
              tableName_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.cloud.bigquery.logging.v1.TableInfo.Builder subBuilder = null;
            if (info_ != null) {
              subBuilder = info_.toBuilder();
            }
            info_ = input.readMessage(com.google.cloud.bigquery.logging.v1.TableInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(info_);
              info_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.cloud.bigquery.logging.v1.TableViewDefinition.Builder subBuilder = null;
            if (view_ != null) {
              subBuilder = view_.toBuilder();
            }
            view_ = input.readMessage(com.google.cloud.bigquery.logging.v1.TableViewDefinition.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(view_);
              view_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (expireTime_ != null) {
              subBuilder = expireTime_.toBuilder();
            }
            expireTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(expireTime_);
              expireTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (createTime_ != null) {
              subBuilder = createTime_.toBuilder();
            }
            createTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(createTime_);
              createTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (truncateTime_ != null) {
              subBuilder = truncateTime_.toBuilder();
            }
            truncateTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(truncateTime_);
              truncateTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            schemaJson_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_Table_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_Table_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.bigquery.logging.v1.Table.class, com.google.cloud.bigquery.logging.v1.Table.Builder.class);
  }

  public static final int TABLE_NAME_FIELD_NUMBER = 1;
  private com.google.cloud.bigquery.logging.v1.TableName tableName_;
  /**
   * <pre>
   * The name of the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
   */
  public boolean hasTableName() {
    return tableName_ != null;
  }
  /**
   * <pre>
   * The name of the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
   */
  public com.google.cloud.bigquery.logging.v1.TableName getTableName() {
    return tableName_ == null ? com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : tableName_;
  }
  /**
   * <pre>
   * The name of the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
   */
  public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getTableNameOrBuilder() {
    return getTableName();
  }

  public static final int INFO_FIELD_NUMBER = 2;
  private com.google.cloud.bigquery.logging.v1.TableInfo info_;
  /**
   * <pre>
   * User-provided metadata for the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
   */
  public boolean hasInfo() {
    return info_ != null;
  }
  /**
   * <pre>
   * User-provided metadata for the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
   */
  public com.google.cloud.bigquery.logging.v1.TableInfo getInfo() {
    return info_ == null ? com.google.cloud.bigquery.logging.v1.TableInfo.getDefaultInstance() : info_;
  }
  /**
   * <pre>
   * User-provided metadata for the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
   */
  public com.google.cloud.bigquery.logging.v1.TableInfoOrBuilder getInfoOrBuilder() {
    return getInfo();
  }

  public static final int SCHEMA_JSON_FIELD_NUMBER = 8;
  private volatile java.lang.Object schemaJson_;
  /**
   * <pre>
   * A JSON representation of the table's schema.
   * </pre>
   *
   * <code>optional string schema_json = 8;</code>
   */
  public java.lang.String getSchemaJson() {
    java.lang.Object ref = schemaJson_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      schemaJson_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A JSON representation of the table's schema.
   * </pre>
   *
   * <code>optional string schema_json = 8;</code>
   */
  public com.google.protobuf.ByteString
      getSchemaJsonBytes() {
    java.lang.Object ref = schemaJson_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      schemaJson_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VIEW_FIELD_NUMBER = 4;
  private com.google.cloud.bigquery.logging.v1.TableViewDefinition view_;
  /**
   * <pre>
   * If present, this is a virtual table defined by a SQL query.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
   */
  public boolean hasView() {
    return view_ != null;
  }
  /**
   * <pre>
   * If present, this is a virtual table defined by a SQL query.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
   */
  public com.google.cloud.bigquery.logging.v1.TableViewDefinition getView() {
    return view_ == null ? com.google.cloud.bigquery.logging.v1.TableViewDefinition.getDefaultInstance() : view_;
  }
  /**
   * <pre>
   * If present, this is a virtual table defined by a SQL query.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
   */
  public com.google.cloud.bigquery.logging.v1.TableViewDefinitionOrBuilder getViewOrBuilder() {
    return getView();
  }

  public static final int EXPIRE_TIME_FIELD_NUMBER = 5;
  private com.google.protobuf.Timestamp expireTime_;
  /**
   * <pre>
   * The expiration date for the table, after which the table
   * is deleted and the storage reclaimed.
   * If not present, the table persists indefinitely.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
   */
  public boolean hasExpireTime() {
    return expireTime_ != null;
  }
  /**
   * <pre>
   * The expiration date for the table, after which the table
   * is deleted and the storage reclaimed.
   * If not present, the table persists indefinitely.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
   */
  public com.google.protobuf.Timestamp getExpireTime() {
    return expireTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expireTime_;
  }
  /**
   * <pre>
   * The expiration date for the table, after which the table
   * is deleted and the storage reclaimed.
   * If not present, the table persists indefinitely.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
   */
  public com.google.protobuf.TimestampOrBuilder getExpireTimeOrBuilder() {
    return getExpireTime();
  }

  public static final int CREATE_TIME_FIELD_NUMBER = 6;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * The time the table was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
   */
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <pre>
   * The time the table was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
   */
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * The time the table was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
   */
  public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
    return getCreateTime();
  }

  public static final int TRUNCATE_TIME_FIELD_NUMBER = 7;
  private com.google.protobuf.Timestamp truncateTime_;
  /**
   * <pre>
   * The time the table was last truncated
   * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
   */
  public boolean hasTruncateTime() {
    return truncateTime_ != null;
  }
  /**
   * <pre>
   * The time the table was last truncated
   * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
   */
  public com.google.protobuf.Timestamp getTruncateTime() {
    return truncateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : truncateTime_;
  }
  /**
   * <pre>
   * The time the table was last truncated
   * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
   */
  public com.google.protobuf.TimestampOrBuilder getTruncateTimeOrBuilder() {
    return getTruncateTime();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (tableName_ != null) {
      output.writeMessage(1, getTableName());
    }
    if (info_ != null) {
      output.writeMessage(2, getInfo());
    }
    if (view_ != null) {
      output.writeMessage(4, getView());
    }
    if (expireTime_ != null) {
      output.writeMessage(5, getExpireTime());
    }
    if (createTime_ != null) {
      output.writeMessage(6, getCreateTime());
    }
    if (truncateTime_ != null) {
      output.writeMessage(7, getTruncateTime());
    }
    if (!getSchemaJsonBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, schemaJson_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (tableName_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTableName());
    }
    if (info_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getInfo());
    }
    if (view_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getView());
    }
    if (expireTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getExpireTime());
    }
    if (createTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getCreateTime());
    }
    if (truncateTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getTruncateTime());
    }
    if (!getSchemaJsonBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, schemaJson_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.bigquery.logging.v1.Table)) {
      return super.equals(obj);
    }
    com.google.cloud.bigquery.logging.v1.Table other = (com.google.cloud.bigquery.logging.v1.Table) obj;

    boolean result = true;
    result = result && (hasTableName() == other.hasTableName());
    if (hasTableName()) {
      result = result && getTableName()
          .equals(other.getTableName());
    }
    result = result && (hasInfo() == other.hasInfo());
    if (hasInfo()) {
      result = result && getInfo()
          .equals(other.getInfo());
    }
    result = result && getSchemaJson()
        .equals(other.getSchemaJson());
    result = result && (hasView() == other.hasView());
    if (hasView()) {
      result = result && getView()
          .equals(other.getView());
    }
    result = result && (hasExpireTime() == other.hasExpireTime());
    if (hasExpireTime()) {
      result = result && getExpireTime()
          .equals(other.getExpireTime());
    }
    result = result && (hasCreateTime() == other.hasCreateTime());
    if (hasCreateTime()) {
      result = result && getCreateTime()
          .equals(other.getCreateTime());
    }
    result = result && (hasTruncateTime() == other.hasTruncateTime());
    if (hasTruncateTime()) {
      result = result && getTruncateTime()
          .equals(other.getTruncateTime());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasTableName()) {
      hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTableName().hashCode();
    }
    if (hasInfo()) {
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + getInfo().hashCode();
    }
    hash = (37 * hash) + SCHEMA_JSON_FIELD_NUMBER;
    hash = (53 * hash) + getSchemaJson().hashCode();
    if (hasView()) {
      hash = (37 * hash) + VIEW_FIELD_NUMBER;
      hash = (53 * hash) + getView().hashCode();
    }
    if (hasExpireTime()) {
      hash = (37 * hash) + EXPIRE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getExpireTime().hashCode();
    }
    if (hasCreateTime()) {
      hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCreateTime().hashCode();
    }
    if (hasTruncateTime()) {
      hash = (37 * hash) + TRUNCATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTruncateTime().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.bigquery.logging.v1.Table parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.logging.v1.Table parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.Table parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.logging.v1.Table parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.Table parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.Table parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.Table parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.Table parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.Table parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.Table parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.bigquery.logging.v1.Table prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes a BigQuery table.
   * See the [Table](/bigquery/docs/reference/v2/tables) API resource
   * for more details on individual fields.
   * Note: `Table.schema` has been deprecated in favor of `Table.schemaJson`.
   * `Table.schema` may continue to be present in your logs during this
   * transition.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.logging.v1.Table}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.logging.v1.Table)
      com.google.cloud.bigquery.logging.v1.TableOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_Table_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_Table_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.logging.v1.Table.class, com.google.cloud.bigquery.logging.v1.Table.Builder.class);
    }

    // Construct using com.google.cloud.bigquery.logging.v1.Table.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (tableNameBuilder_ == null) {
        tableName_ = null;
      } else {
        tableName_ = null;
        tableNameBuilder_ = null;
      }
      if (infoBuilder_ == null) {
        info_ = null;
      } else {
        info_ = null;
        infoBuilder_ = null;
      }
      schemaJson_ = "";

      if (viewBuilder_ == null) {
        view_ = null;
      } else {
        view_ = null;
        viewBuilder_ = null;
      }
      if (expireTimeBuilder_ == null) {
        expireTime_ = null;
      } else {
        expireTime_ = null;
        expireTimeBuilder_ = null;
      }
      if (createTimeBuilder_ == null) {
        createTime_ = null;
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }
      if (truncateTimeBuilder_ == null) {
        truncateTime_ = null;
      } else {
        truncateTime_ = null;
        truncateTimeBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_Table_descriptor;
    }

    public com.google.cloud.bigquery.logging.v1.Table getDefaultInstanceForType() {
      return com.google.cloud.bigquery.logging.v1.Table.getDefaultInstance();
    }

    public com.google.cloud.bigquery.logging.v1.Table build() {
      com.google.cloud.bigquery.logging.v1.Table result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.bigquery.logging.v1.Table buildPartial() {
      com.google.cloud.bigquery.logging.v1.Table result = new com.google.cloud.bigquery.logging.v1.Table(this);
      if (tableNameBuilder_ == null) {
        result.tableName_ = tableName_;
      } else {
        result.tableName_ = tableNameBuilder_.build();
      }
      if (infoBuilder_ == null) {
        result.info_ = info_;
      } else {
        result.info_ = infoBuilder_.build();
      }
      result.schemaJson_ = schemaJson_;
      if (viewBuilder_ == null) {
        result.view_ = view_;
      } else {
        result.view_ = viewBuilder_.build();
      }
      if (expireTimeBuilder_ == null) {
        result.expireTime_ = expireTime_;
      } else {
        result.expireTime_ = expireTimeBuilder_.build();
      }
      if (createTimeBuilder_ == null) {
        result.createTime_ = createTime_;
      } else {
        result.createTime_ = createTimeBuilder_.build();
      }
      if (truncateTimeBuilder_ == null) {
        result.truncateTime_ = truncateTime_;
      } else {
        result.truncateTime_ = truncateTimeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.bigquery.logging.v1.Table) {
        return mergeFrom((com.google.cloud.bigquery.logging.v1.Table)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.bigquery.logging.v1.Table other) {
      if (other == com.google.cloud.bigquery.logging.v1.Table.getDefaultInstance()) return this;
      if (other.hasTableName()) {
        mergeTableName(other.getTableName());
      }
      if (other.hasInfo()) {
        mergeInfo(other.getInfo());
      }
      if (!other.getSchemaJson().isEmpty()) {
        schemaJson_ = other.schemaJson_;
        onChanged();
      }
      if (other.hasView()) {
        mergeView(other.getView());
      }
      if (other.hasExpireTime()) {
        mergeExpireTime(other.getExpireTime());
      }
      if (other.hasCreateTime()) {
        mergeCreateTime(other.getCreateTime());
      }
      if (other.hasTruncateTime()) {
        mergeTruncateTime(other.getTruncateTime());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.bigquery.logging.v1.Table parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.bigquery.logging.v1.Table) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.cloud.bigquery.logging.v1.TableName tableName_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> tableNameBuilder_;
    /**
     * <pre>
     * The name of the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     */
    public boolean hasTableName() {
      return tableNameBuilder_ != null || tableName_ != null;
    }
    /**
     * <pre>
     * The name of the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName getTableName() {
      if (tableNameBuilder_ == null) {
        return tableName_ == null ? com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : tableName_;
      } else {
        return tableNameBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The name of the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     */
    public Builder setTableName(com.google.cloud.bigquery.logging.v1.TableName value) {
      if (tableNameBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tableName_ = value;
        onChanged();
      } else {
        tableNameBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The name of the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     */
    public Builder setTableName(
        com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
      if (tableNameBuilder_ == null) {
        tableName_ = builderForValue.build();
        onChanged();
      } else {
        tableNameBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The name of the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     */
    public Builder mergeTableName(com.google.cloud.bigquery.logging.v1.TableName value) {
      if (tableNameBuilder_ == null) {
        if (tableName_ != null) {
          tableName_ =
            com.google.cloud.bigquery.logging.v1.TableName.newBuilder(tableName_).mergeFrom(value).buildPartial();
        } else {
          tableName_ = value;
        }
        onChanged();
      } else {
        tableNameBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The name of the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     */
    public Builder clearTableName() {
      if (tableNameBuilder_ == null) {
        tableName_ = null;
        onChanged();
      } else {
        tableName_ = null;
        tableNameBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The name of the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName.Builder getTableNameBuilder() {
      
      onChanged();
      return getTableNameFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The name of the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getTableNameOrBuilder() {
      if (tableNameBuilder_ != null) {
        return tableNameBuilder_.getMessageOrBuilder();
      } else {
        return tableName_ == null ?
            com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : tableName_;
      }
    }
    /**
     * <pre>
     * The name of the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
        getTableNameFieldBuilder() {
      if (tableNameBuilder_ == null) {
        tableNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder>(
                getTableName(),
                getParentForChildren(),
                isClean());
        tableName_ = null;
      }
      return tableNameBuilder_;
    }

    private com.google.cloud.bigquery.logging.v1.TableInfo info_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.TableInfo, com.google.cloud.bigquery.logging.v1.TableInfo.Builder, com.google.cloud.bigquery.logging.v1.TableInfoOrBuilder> infoBuilder_;
    /**
     * <pre>
     * User-provided metadata for the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     */
    public boolean hasInfo() {
      return infoBuilder_ != null || info_ != null;
    }
    /**
     * <pre>
     * User-provided metadata for the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableInfo getInfo() {
      if (infoBuilder_ == null) {
        return info_ == null ? com.google.cloud.bigquery.logging.v1.TableInfo.getDefaultInstance() : info_;
      } else {
        return infoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * User-provided metadata for the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     */
    public Builder setInfo(com.google.cloud.bigquery.logging.v1.TableInfo value) {
      if (infoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        info_ = value;
        onChanged();
      } else {
        infoBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * User-provided metadata for the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     */
    public Builder setInfo(
        com.google.cloud.bigquery.logging.v1.TableInfo.Builder builderForValue) {
      if (infoBuilder_ == null) {
        info_ = builderForValue.build();
        onChanged();
      } else {
        infoBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * User-provided metadata for the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     */
    public Builder mergeInfo(com.google.cloud.bigquery.logging.v1.TableInfo value) {
      if (infoBuilder_ == null) {
        if (info_ != null) {
          info_ =
            com.google.cloud.bigquery.logging.v1.TableInfo.newBuilder(info_).mergeFrom(value).buildPartial();
        } else {
          info_ = value;
        }
        onChanged();
      } else {
        infoBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * User-provided metadata for the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     */
    public Builder clearInfo() {
      if (infoBuilder_ == null) {
        info_ = null;
        onChanged();
      } else {
        info_ = null;
        infoBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * User-provided metadata for the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableInfo.Builder getInfoBuilder() {
      
      onChanged();
      return getInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * User-provided metadata for the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableInfoOrBuilder getInfoOrBuilder() {
      if (infoBuilder_ != null) {
        return infoBuilder_.getMessageOrBuilder();
      } else {
        return info_ == null ?
            com.google.cloud.bigquery.logging.v1.TableInfo.getDefaultInstance() : info_;
      }
    }
    /**
     * <pre>
     * User-provided metadata for the table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.TableInfo, com.google.cloud.bigquery.logging.v1.TableInfo.Builder, com.google.cloud.bigquery.logging.v1.TableInfoOrBuilder> 
        getInfoFieldBuilder() {
      if (infoBuilder_ == null) {
        infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.TableInfo, com.google.cloud.bigquery.logging.v1.TableInfo.Builder, com.google.cloud.bigquery.logging.v1.TableInfoOrBuilder>(
                getInfo(),
                getParentForChildren(),
                isClean());
        info_ = null;
      }
      return infoBuilder_;
    }

    private java.lang.Object schemaJson_ = "";
    /**
     * <pre>
     * A JSON representation of the table's schema.
     * </pre>
     *
     * <code>optional string schema_json = 8;</code>
     */
    public java.lang.String getSchemaJson() {
      java.lang.Object ref = schemaJson_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        schemaJson_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A JSON representation of the table's schema.
     * </pre>
     *
     * <code>optional string schema_json = 8;</code>
     */
    public com.google.protobuf.ByteString
        getSchemaJsonBytes() {
      java.lang.Object ref = schemaJson_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        schemaJson_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A JSON representation of the table's schema.
     * </pre>
     *
     * <code>optional string schema_json = 8;</code>
     */
    public Builder setSchemaJson(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      schemaJson_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A JSON representation of the table's schema.
     * </pre>
     *
     * <code>optional string schema_json = 8;</code>
     */
    public Builder clearSchemaJson() {
      
      schemaJson_ = getDefaultInstance().getSchemaJson();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A JSON representation of the table's schema.
     * </pre>
     *
     * <code>optional string schema_json = 8;</code>
     */
    public Builder setSchemaJsonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      schemaJson_ = value;
      onChanged();
      return this;
    }

    private com.google.cloud.bigquery.logging.v1.TableViewDefinition view_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.TableViewDefinition, com.google.cloud.bigquery.logging.v1.TableViewDefinition.Builder, com.google.cloud.bigquery.logging.v1.TableViewDefinitionOrBuilder> viewBuilder_;
    /**
     * <pre>
     * If present, this is a virtual table defined by a SQL query.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     */
    public boolean hasView() {
      return viewBuilder_ != null || view_ != null;
    }
    /**
     * <pre>
     * If present, this is a virtual table defined by a SQL query.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableViewDefinition getView() {
      if (viewBuilder_ == null) {
        return view_ == null ? com.google.cloud.bigquery.logging.v1.TableViewDefinition.getDefaultInstance() : view_;
      } else {
        return viewBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If present, this is a virtual table defined by a SQL query.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     */
    public Builder setView(com.google.cloud.bigquery.logging.v1.TableViewDefinition value) {
      if (viewBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        view_ = value;
        onChanged();
      } else {
        viewBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * If present, this is a virtual table defined by a SQL query.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     */
    public Builder setView(
        com.google.cloud.bigquery.logging.v1.TableViewDefinition.Builder builderForValue) {
      if (viewBuilder_ == null) {
        view_ = builderForValue.build();
        onChanged();
      } else {
        viewBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * If present, this is a virtual table defined by a SQL query.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     */
    public Builder mergeView(com.google.cloud.bigquery.logging.v1.TableViewDefinition value) {
      if (viewBuilder_ == null) {
        if (view_ != null) {
          view_ =
            com.google.cloud.bigquery.logging.v1.TableViewDefinition.newBuilder(view_).mergeFrom(value).buildPartial();
        } else {
          view_ = value;
        }
        onChanged();
      } else {
        viewBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * If present, this is a virtual table defined by a SQL query.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     */
    public Builder clearView() {
      if (viewBuilder_ == null) {
        view_ = null;
        onChanged();
      } else {
        view_ = null;
        viewBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * If present, this is a virtual table defined by a SQL query.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableViewDefinition.Builder getViewBuilder() {
      
      onChanged();
      return getViewFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If present, this is a virtual table defined by a SQL query.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableViewDefinitionOrBuilder getViewOrBuilder() {
      if (viewBuilder_ != null) {
        return viewBuilder_.getMessageOrBuilder();
      } else {
        return view_ == null ?
            com.google.cloud.bigquery.logging.v1.TableViewDefinition.getDefaultInstance() : view_;
      }
    }
    /**
     * <pre>
     * If present, this is a virtual table defined by a SQL query.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.TableViewDefinition, com.google.cloud.bigquery.logging.v1.TableViewDefinition.Builder, com.google.cloud.bigquery.logging.v1.TableViewDefinitionOrBuilder> 
        getViewFieldBuilder() {
      if (viewBuilder_ == null) {
        viewBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.TableViewDefinition, com.google.cloud.bigquery.logging.v1.TableViewDefinition.Builder, com.google.cloud.bigquery.logging.v1.TableViewDefinitionOrBuilder>(
                getView(),
                getParentForChildren(),
                isClean());
        view_ = null;
      }
      return viewBuilder_;
    }

    private com.google.protobuf.Timestamp expireTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> expireTimeBuilder_;
    /**
     * <pre>
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
     */
    public boolean hasExpireTime() {
      return expireTimeBuilder_ != null || expireTime_ != null;
    }
    /**
     * <pre>
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
     */
    public com.google.protobuf.Timestamp getExpireTime() {
      if (expireTimeBuilder_ == null) {
        return expireTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expireTime_;
      } else {
        return expireTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
     */
    public Builder setExpireTime(com.google.protobuf.Timestamp value) {
      if (expireTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expireTime_ = value;
        onChanged();
      } else {
        expireTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
     */
    public Builder setExpireTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (expireTimeBuilder_ == null) {
        expireTime_ = builderForValue.build();
        onChanged();
      } else {
        expireTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
     */
    public Builder mergeExpireTime(com.google.protobuf.Timestamp value) {
      if (expireTimeBuilder_ == null) {
        if (expireTime_ != null) {
          expireTime_ =
            com.google.protobuf.Timestamp.newBuilder(expireTime_).mergeFrom(value).buildPartial();
        } else {
          expireTime_ = value;
        }
        onChanged();
      } else {
        expireTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
     */
    public Builder clearExpireTime() {
      if (expireTimeBuilder_ == null) {
        expireTime_ = null;
        onChanged();
      } else {
        expireTime_ = null;
        expireTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
     */
    public com.google.protobuf.Timestamp.Builder getExpireTimeBuilder() {
      
      onChanged();
      return getExpireTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getExpireTimeOrBuilder() {
      if (expireTimeBuilder_ != null) {
        return expireTimeBuilder_.getMessageOrBuilder();
      } else {
        return expireTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : expireTime_;
      }
    }
    /**
     * <pre>
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getExpireTimeFieldBuilder() {
      if (expireTimeBuilder_ == null) {
        expireTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getExpireTime(),
                getParentForChildren(),
                isClean());
        expireTime_ = null;
      }
      return expireTimeBuilder_;
    }

    private com.google.protobuf.Timestamp createTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createTimeBuilder_;
    /**
     * <pre>
     * The time the table was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
     */
    public boolean hasCreateTime() {
      return createTimeBuilder_ != null || createTime_ != null;
    }
    /**
     * <pre>
     * The time the table was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
     */
    public com.google.protobuf.Timestamp getCreateTime() {
      if (createTimeBuilder_ == null) {
        return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      } else {
        return createTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The time the table was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createTime_ = value;
        onChanged();
      } else {
        createTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time the table was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (createTimeBuilder_ == null) {
        createTime_ = builderForValue.build();
        onChanged();
      } else {
        createTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The time the table was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (createTime_ != null) {
          createTime_ =
            com.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
        } else {
          createTime_ = value;
        }
        onChanged();
      } else {
        createTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time the table was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
     */
    public Builder clearCreateTime() {
      if (createTimeBuilder_ == null) {
        createTime_ = null;
        onChanged();
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The time the table was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
     */
    public com.google.protobuf.Timestamp.Builder getCreateTimeBuilder() {
      
      onChanged();
      return getCreateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The time the table was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
      if (createTimeBuilder_ != null) {
        return createTimeBuilder_.getMessageOrBuilder();
      } else {
        return createTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      }
    }
    /**
     * <pre>
     * The time the table was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getCreateTimeFieldBuilder() {
      if (createTimeBuilder_ == null) {
        createTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getCreateTime(),
                getParentForChildren(),
                isClean());
        createTime_ = null;
      }
      return createTimeBuilder_;
    }

    private com.google.protobuf.Timestamp truncateTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> truncateTimeBuilder_;
    /**
     * <pre>
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
     */
    public boolean hasTruncateTime() {
      return truncateTimeBuilder_ != null || truncateTime_ != null;
    }
    /**
     * <pre>
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
     */
    public com.google.protobuf.Timestamp getTruncateTime() {
      if (truncateTimeBuilder_ == null) {
        return truncateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : truncateTime_;
      } else {
        return truncateTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
     */
    public Builder setTruncateTime(com.google.protobuf.Timestamp value) {
      if (truncateTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        truncateTime_ = value;
        onChanged();
      } else {
        truncateTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
     */
    public Builder setTruncateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (truncateTimeBuilder_ == null) {
        truncateTime_ = builderForValue.build();
        onChanged();
      } else {
        truncateTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
     */
    public Builder mergeTruncateTime(com.google.protobuf.Timestamp value) {
      if (truncateTimeBuilder_ == null) {
        if (truncateTime_ != null) {
          truncateTime_ =
            com.google.protobuf.Timestamp.newBuilder(truncateTime_).mergeFrom(value).buildPartial();
        } else {
          truncateTime_ = value;
        }
        onChanged();
      } else {
        truncateTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
     */
    public Builder clearTruncateTime() {
      if (truncateTimeBuilder_ == null) {
        truncateTime_ = null;
        onChanged();
      } else {
        truncateTime_ = null;
        truncateTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
     */
    public com.google.protobuf.Timestamp.Builder getTruncateTimeBuilder() {
      
      onChanged();
      return getTruncateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTruncateTimeOrBuilder() {
      if (truncateTimeBuilder_ != null) {
        return truncateTimeBuilder_.getMessageOrBuilder();
      } else {
        return truncateTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : truncateTime_;
      }
    }
    /**
     * <pre>
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getTruncateTimeFieldBuilder() {
      if (truncateTimeBuilder_ == null) {
        truncateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getTruncateTime(),
                getParentForChildren(),
                isClean());
        truncateTime_ = null;
      }
      return truncateTimeBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.logging.v1.Table)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.logging.v1.Table)
  private static final com.google.cloud.bigquery.logging.v1.Table DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.bigquery.logging.v1.Table();
  }

  public static com.google.cloud.bigquery.logging.v1.Table getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Table>
      PARSER = new com.google.protobuf.AbstractParser<Table>() {
    public Table parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Table(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Table> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Table> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.bigquery.logging.v1.Table getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

