// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/logging/v1/audit_data.proto

package com.google.cloud.bigquery.logging.v1;

public interface TableOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.logging.v1.Table)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
   */
  boolean hasTableName();
  /**
   * <pre>
   * The name of the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
   */
  com.google.cloud.bigquery.logging.v1.TableName getTableName();
  /**
   * <pre>
   * The name of the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
   */
  com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getTableNameOrBuilder();

  /**
   * <pre>
   * User-provided metadata for the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
   */
  boolean hasInfo();
  /**
   * <pre>
   * User-provided metadata for the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
   */
  com.google.cloud.bigquery.logging.v1.TableInfo getInfo();
  /**
   * <pre>
   * User-provided metadata for the table.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
   */
  com.google.cloud.bigquery.logging.v1.TableInfoOrBuilder getInfoOrBuilder();

  /**
   * <pre>
   * A JSON representation of the table's schema.
   * </pre>
   *
   * <code>optional string schema_json = 8;</code>
   */
  java.lang.String getSchemaJson();
  /**
   * <pre>
   * A JSON representation of the table's schema.
   * </pre>
   *
   * <code>optional string schema_json = 8;</code>
   */
  com.google.protobuf.ByteString
      getSchemaJsonBytes();

  /**
   * <pre>
   * If present, this is a virtual table defined by a SQL query.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
   */
  boolean hasView();
  /**
   * <pre>
   * If present, this is a virtual table defined by a SQL query.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
   */
  com.google.cloud.bigquery.logging.v1.TableViewDefinition getView();
  /**
   * <pre>
   * If present, this is a virtual table defined by a SQL query.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
   */
  com.google.cloud.bigquery.logging.v1.TableViewDefinitionOrBuilder getViewOrBuilder();

  /**
   * <pre>
   * The expiration date for the table, after which the table
   * is deleted and the storage reclaimed.
   * If not present, the table persists indefinitely.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
   */
  boolean hasExpireTime();
  /**
   * <pre>
   * The expiration date for the table, after which the table
   * is deleted and the storage reclaimed.
   * If not present, the table persists indefinitely.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
   */
  com.google.protobuf.Timestamp getExpireTime();
  /**
   * <pre>
   * The expiration date for the table, after which the table
   * is deleted and the storage reclaimed.
   * If not present, the table persists indefinitely.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp expire_time = 5;</code>
   */
  com.google.protobuf.TimestampOrBuilder getExpireTimeOrBuilder();

  /**
   * <pre>
   * The time the table was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
   */
  boolean hasCreateTime();
  /**
   * <pre>
   * The time the table was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
   */
  com.google.protobuf.Timestamp getCreateTime();
  /**
   * <pre>
   * The time the table was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 6;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   * <pre>
   * The time the table was last truncated
   * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
   */
  boolean hasTruncateTime();
  /**
   * <pre>
   * The time the table was last truncated
   * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
   */
  com.google.protobuf.Timestamp getTruncateTime();
  /**
   * <pre>
   * The time the table was last truncated
   * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp truncate_time = 7;</code>
   */
  com.google.protobuf.TimestampOrBuilder getTruncateTimeOrBuilder();
}
