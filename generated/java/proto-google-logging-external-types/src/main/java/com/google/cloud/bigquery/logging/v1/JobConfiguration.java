// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/logging/v1/audit_data.proto

package com.google.cloud.bigquery.logging.v1;

/**
 * <pre>
 * Job configuration information.
 * See the [Jobs](/bigquery/docs/reference/v2/jobs) API resource
 * for more details on individual fields.
 * </pre>
 *
 * Protobuf type {@code google.cloud.bigquery.logging.v1.JobConfiguration}
 */
public  final class JobConfiguration extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.bigquery.logging.v1.JobConfiguration)
    JobConfigurationOrBuilder {
  // Use JobConfiguration.newBuilder() to construct.
  private JobConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private JobConfiguration() {
    dryRun_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private JobConfiguration(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 42: {
            com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.Builder subBuilder = null;
            if (configurationCase_ == 5) {
              subBuilder = ((com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) configuration_).toBuilder();
            }
            configuration_ =
                input.readMessage(com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) configuration_);
              configuration_ = subBuilder.buildPartial();
            }
            configurationCase_ = 5;
            break;
          }
          case 50: {
            com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.Builder subBuilder = null;
            if (configurationCase_ == 6) {
              subBuilder = ((com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) configuration_).toBuilder();
            }
            configuration_ =
                input.readMessage(com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) configuration_);
              configuration_ = subBuilder.buildPartial();
            }
            configurationCase_ = 6;
            break;
          }
          case 58: {
            com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.Builder subBuilder = null;
            if (configurationCase_ == 7) {
              subBuilder = ((com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) configuration_).toBuilder();
            }
            configuration_ =
                input.readMessage(com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) configuration_);
              configuration_ = subBuilder.buildPartial();
            }
            configurationCase_ = 7;
            break;
          }
          case 66: {
            com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.Builder subBuilder = null;
            if (configurationCase_ == 8) {
              subBuilder = ((com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) configuration_).toBuilder();
            }
            configuration_ =
                input.readMessage(com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) configuration_);
              configuration_ = subBuilder.buildPartial();
            }
            configurationCase_ = 8;
            break;
          }
          case 72: {

            dryRun_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.bigquery.logging.v1.JobConfiguration.class, com.google.cloud.bigquery.logging.v1.JobConfiguration.Builder.class);
  }

  public interface QueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The SQL query to run.
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    java.lang.String getQuery();
    /**
     * <pre>
     * The SQL query to run.
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    com.google.protobuf.ByteString
        getQueryBytes();

    /**
     * <pre>
     * The table where results are written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    boolean hasDestinationTable();
    /**
     * <pre>
     * The table where results are written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableName getDestinationTable();
    /**
     * <pre>
     * The table where results are written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getDestinationTableOrBuilder();

    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 3;</code>
     */
    java.lang.String getCreateDisposition();
    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 3;</code>
     */
    com.google.protobuf.ByteString
        getCreateDispositionBytes();

    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 4;</code>
     */
    java.lang.String getWriteDisposition();
    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 4;</code>
     */
    com.google.protobuf.ByteString
        getWriteDispositionBytes();

    /**
     * <pre>
     * If a table name is specified without a dataset in a query,
     * this dataset will be added to table name.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
     */
    boolean hasDefaultDataset();
    /**
     * <pre>
     * If a table name is specified without a dataset in a query,
     * this dataset will be added to table name.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
     */
    com.google.cloud.bigquery.logging.v1.DatasetName getDefaultDataset();
    /**
     * <pre>
     * If a table name is specified without a dataset in a query,
     * this dataset will be added to table name.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
     */
    com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder getDefaultDatasetOrBuilder();

    /**
     * <pre>
     * Describes data sources outside BigQuery, if needed.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
     */
    java.util.List<com.google.cloud.bigquery.logging.v1.TableDefinition> 
        getTableDefinitionsList();
    /**
     * <pre>
     * Describes data sources outside BigQuery, if needed.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableDefinition getTableDefinitions(int index);
    /**
     * <pre>
     * Describes data sources outside BigQuery, if needed.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
     */
    int getTableDefinitionsCount();
    /**
     * <pre>
     * Describes data sources outside BigQuery, if needed.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
     */
    java.util.List<? extends com.google.cloud.bigquery.logging.v1.TableDefinitionOrBuilder> 
        getTableDefinitionsOrBuilderList();
    /**
     * <pre>
     * Describes data sources outside BigQuery, if needed.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableDefinitionOrBuilder getTableDefinitionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Describes a query job, which executes a SQL-like query.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.logging.v1.JobConfiguration.Query}
   */
  public  static final class Query extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
      QueryOrBuilder {
    // Use Query.newBuilder() to construct.
    private Query(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Query() {
      query_ = "";
      createDisposition_ = "";
      writeDisposition_ = "";
      tableDefinitions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Query(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              query_ = s;
              break;
            }
            case 18: {
              com.google.cloud.bigquery.logging.v1.TableName.Builder subBuilder = null;
              if (destinationTable_ != null) {
                subBuilder = destinationTable_.toBuilder();
              }
              destinationTable_ = input.readMessage(com.google.cloud.bigquery.logging.v1.TableName.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(destinationTable_);
                destinationTable_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              createDisposition_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              writeDisposition_ = s;
              break;
            }
            case 42: {
              com.google.cloud.bigquery.logging.v1.DatasetName.Builder subBuilder = null;
              if (defaultDataset_ != null) {
                subBuilder = defaultDataset_.toBuilder();
              }
              defaultDataset_ = input.readMessage(com.google.cloud.bigquery.logging.v1.DatasetName.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultDataset_);
                defaultDataset_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                tableDefinitions_ = new java.util.ArrayList<com.google.cloud.bigquery.logging.v1.TableDefinition>();
                mutable_bitField0_ |= 0x00000020;
              }
              tableDefinitions_.add(
                  input.readMessage(com.google.cloud.bigquery.logging.v1.TableDefinition.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          tableDefinitions_ = java.util.Collections.unmodifiableList(tableDefinitions_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Query_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Query_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.class, com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.Builder.class);
    }

    private int bitField0_;
    public static final int QUERY_FIELD_NUMBER = 1;
    private volatile java.lang.Object query_;
    /**
     * <pre>
     * The SQL query to run.
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    public java.lang.String getQuery() {
      java.lang.Object ref = query_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        query_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The SQL query to run.
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    public com.google.protobuf.ByteString
        getQueryBytes() {
      java.lang.Object ref = query_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        query_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESTINATION_TABLE_FIELD_NUMBER = 2;
    private com.google.cloud.bigquery.logging.v1.TableName destinationTable_;
    /**
     * <pre>
     * The table where results are written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    public boolean hasDestinationTable() {
      return destinationTable_ != null;
    }
    /**
     * <pre>
     * The table where results are written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName getDestinationTable() {
      return destinationTable_ == null ? com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : destinationTable_;
    }
    /**
     * <pre>
     * The table where results are written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getDestinationTableOrBuilder() {
      return getDestinationTable();
    }

    public static final int CREATE_DISPOSITION_FIELD_NUMBER = 3;
    private volatile java.lang.Object createDisposition_;
    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 3;</code>
     */
    public java.lang.String getCreateDisposition() {
      java.lang.Object ref = createDisposition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        createDisposition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCreateDispositionBytes() {
      java.lang.Object ref = createDisposition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createDisposition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WRITE_DISPOSITION_FIELD_NUMBER = 4;
    private volatile java.lang.Object writeDisposition_;
    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 4;</code>
     */
    public java.lang.String getWriteDisposition() {
      java.lang.Object ref = writeDisposition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        writeDisposition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 4;</code>
     */
    public com.google.protobuf.ByteString
        getWriteDispositionBytes() {
      java.lang.Object ref = writeDisposition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        writeDisposition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEFAULT_DATASET_FIELD_NUMBER = 5;
    private com.google.cloud.bigquery.logging.v1.DatasetName defaultDataset_;
    /**
     * <pre>
     * If a table name is specified without a dataset in a query,
     * this dataset will be added to table name.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
     */
    public boolean hasDefaultDataset() {
      return defaultDataset_ != null;
    }
    /**
     * <pre>
     * If a table name is specified without a dataset in a query,
     * this dataset will be added to table name.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
     */
    public com.google.cloud.bigquery.logging.v1.DatasetName getDefaultDataset() {
      return defaultDataset_ == null ? com.google.cloud.bigquery.logging.v1.DatasetName.getDefaultInstance() : defaultDataset_;
    }
    /**
     * <pre>
     * If a table name is specified without a dataset in a query,
     * this dataset will be added to table name.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
     */
    public com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder getDefaultDatasetOrBuilder() {
      return getDefaultDataset();
    }

    public static final int TABLE_DEFINITIONS_FIELD_NUMBER = 6;
    private java.util.List<com.google.cloud.bigquery.logging.v1.TableDefinition> tableDefinitions_;
    /**
     * <pre>
     * Describes data sources outside BigQuery, if needed.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
     */
    public java.util.List<com.google.cloud.bigquery.logging.v1.TableDefinition> getTableDefinitionsList() {
      return tableDefinitions_;
    }
    /**
     * <pre>
     * Describes data sources outside BigQuery, if needed.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
     */
    public java.util.List<? extends com.google.cloud.bigquery.logging.v1.TableDefinitionOrBuilder> 
        getTableDefinitionsOrBuilderList() {
      return tableDefinitions_;
    }
    /**
     * <pre>
     * Describes data sources outside BigQuery, if needed.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
     */
    public int getTableDefinitionsCount() {
      return tableDefinitions_.size();
    }
    /**
     * <pre>
     * Describes data sources outside BigQuery, if needed.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableDefinition getTableDefinitions(int index) {
      return tableDefinitions_.get(index);
    }
    /**
     * <pre>
     * Describes data sources outside BigQuery, if needed.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableDefinitionOrBuilder getTableDefinitionsOrBuilder(
        int index) {
      return tableDefinitions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getQueryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, query_);
      }
      if (destinationTable_ != null) {
        output.writeMessage(2, getDestinationTable());
      }
      if (!getCreateDispositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, createDisposition_);
      }
      if (!getWriteDispositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, writeDisposition_);
      }
      if (defaultDataset_ != null) {
        output.writeMessage(5, getDefaultDataset());
      }
      for (int i = 0; i < tableDefinitions_.size(); i++) {
        output.writeMessage(6, tableDefinitions_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getQueryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, query_);
      }
      if (destinationTable_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDestinationTable());
      }
      if (!getCreateDispositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, createDisposition_);
      }
      if (!getWriteDispositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, writeDisposition_);
      }
      if (defaultDataset_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getDefaultDataset());
      }
      for (int i = 0; i < tableDefinitions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, tableDefinitions_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.bigquery.logging.v1.JobConfiguration.Query)) {
        return super.equals(obj);
      }
      com.google.cloud.bigquery.logging.v1.JobConfiguration.Query other = (com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) obj;

      boolean result = true;
      result = result && getQuery()
          .equals(other.getQuery());
      result = result && (hasDestinationTable() == other.hasDestinationTable());
      if (hasDestinationTable()) {
        result = result && getDestinationTable()
            .equals(other.getDestinationTable());
      }
      result = result && getCreateDisposition()
          .equals(other.getCreateDisposition());
      result = result && getWriteDisposition()
          .equals(other.getWriteDisposition());
      result = result && (hasDefaultDataset() == other.hasDefaultDataset());
      if (hasDefaultDataset()) {
        result = result && getDefaultDataset()
            .equals(other.getDefaultDataset());
      }
      result = result && getTableDefinitionsList()
          .equals(other.getTableDefinitionsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + QUERY_FIELD_NUMBER;
      hash = (53 * hash) + getQuery().hashCode();
      if (hasDestinationTable()) {
        hash = (37 * hash) + DESTINATION_TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getDestinationTable().hashCode();
      }
      hash = (37 * hash) + CREATE_DISPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getCreateDisposition().hashCode();
      hash = (37 * hash) + WRITE_DISPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getWriteDisposition().hashCode();
      if (hasDefaultDataset()) {
        hash = (37 * hash) + DEFAULT_DATASET_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultDataset().hashCode();
      }
      if (getTableDefinitionsCount() > 0) {
        hash = (37 * hash) + TABLE_DEFINITIONS_FIELD_NUMBER;
        hash = (53 * hash) + getTableDefinitionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Query parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Query parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Query parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Query parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Query parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Query parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Query parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Query parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Query parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Query parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.bigquery.logging.v1.JobConfiguration.Query prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a query job, which executes a SQL-like query.
     * </pre>
     *
     * Protobuf type {@code google.cloud.bigquery.logging.v1.JobConfiguration.Query}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
        com.google.cloud.bigquery.logging.v1.JobConfiguration.QueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Query_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Query_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.class, com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.Builder.class);
      }

      // Construct using com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTableDefinitionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        query_ = "";

        if (destinationTableBuilder_ == null) {
          destinationTable_ = null;
        } else {
          destinationTable_ = null;
          destinationTableBuilder_ = null;
        }
        createDisposition_ = "";

        writeDisposition_ = "";

        if (defaultDatasetBuilder_ == null) {
          defaultDataset_ = null;
        } else {
          defaultDataset_ = null;
          defaultDatasetBuilder_ = null;
        }
        if (tableDefinitionsBuilder_ == null) {
          tableDefinitions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          tableDefinitionsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Query_descriptor;
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.Query getDefaultInstanceForType() {
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.getDefaultInstance();
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.Query build() {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Query result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.Query buildPartial() {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Query result = new com.google.cloud.bigquery.logging.v1.JobConfiguration.Query(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.query_ = query_;
        if (destinationTableBuilder_ == null) {
          result.destinationTable_ = destinationTable_;
        } else {
          result.destinationTable_ = destinationTableBuilder_.build();
        }
        result.createDisposition_ = createDisposition_;
        result.writeDisposition_ = writeDisposition_;
        if (defaultDatasetBuilder_ == null) {
          result.defaultDataset_ = defaultDataset_;
        } else {
          result.defaultDataset_ = defaultDatasetBuilder_.build();
        }
        if (tableDefinitionsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            tableDefinitions_ = java.util.Collections.unmodifiableList(tableDefinitions_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.tableDefinitions_ = tableDefinitions_;
        } else {
          result.tableDefinitions_ = tableDefinitionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) {
          return mergeFrom((com.google.cloud.bigquery.logging.v1.JobConfiguration.Query)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.bigquery.logging.v1.JobConfiguration.Query other) {
        if (other == com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.getDefaultInstance()) return this;
        if (!other.getQuery().isEmpty()) {
          query_ = other.query_;
          onChanged();
        }
        if (other.hasDestinationTable()) {
          mergeDestinationTable(other.getDestinationTable());
        }
        if (!other.getCreateDisposition().isEmpty()) {
          createDisposition_ = other.createDisposition_;
          onChanged();
        }
        if (!other.getWriteDisposition().isEmpty()) {
          writeDisposition_ = other.writeDisposition_;
          onChanged();
        }
        if (other.hasDefaultDataset()) {
          mergeDefaultDataset(other.getDefaultDataset());
        }
        if (tableDefinitionsBuilder_ == null) {
          if (!other.tableDefinitions_.isEmpty()) {
            if (tableDefinitions_.isEmpty()) {
              tableDefinitions_ = other.tableDefinitions_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureTableDefinitionsIsMutable();
              tableDefinitions_.addAll(other.tableDefinitions_);
            }
            onChanged();
          }
        } else {
          if (!other.tableDefinitions_.isEmpty()) {
            if (tableDefinitionsBuilder_.isEmpty()) {
              tableDefinitionsBuilder_.dispose();
              tableDefinitionsBuilder_ = null;
              tableDefinitions_ = other.tableDefinitions_;
              bitField0_ = (bitField0_ & ~0x00000020);
              tableDefinitionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTableDefinitionsFieldBuilder() : null;
            } else {
              tableDefinitionsBuilder_.addAllMessages(other.tableDefinitions_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Query parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object query_ = "";
      /**
       * <pre>
       * The SQL query to run.
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public java.lang.String getQuery() {
        java.lang.Object ref = query_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          query_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The SQL query to run.
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public com.google.protobuf.ByteString
          getQueryBytes() {
        java.lang.Object ref = query_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          query_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The SQL query to run.
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder setQuery(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        query_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The SQL query to run.
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder clearQuery() {
        
        query_ = getDefaultInstance().getQuery();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The SQL query to run.
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder setQueryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        query_ = value;
        onChanged();
        return this;
      }

      private com.google.cloud.bigquery.logging.v1.TableName destinationTable_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> destinationTableBuilder_;
      /**
       * <pre>
       * The table where results are written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public boolean hasDestinationTable() {
        return destinationTableBuilder_ != null || destinationTable_ != null;
      }
      /**
       * <pre>
       * The table where results are written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName getDestinationTable() {
        if (destinationTableBuilder_ == null) {
          return destinationTable_ == null ? com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : destinationTable_;
        } else {
          return destinationTableBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The table where results are written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public Builder setDestinationTable(com.google.cloud.bigquery.logging.v1.TableName value) {
        if (destinationTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          destinationTable_ = value;
          onChanged();
        } else {
          destinationTableBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The table where results are written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public Builder setDestinationTable(
          com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
        if (destinationTableBuilder_ == null) {
          destinationTable_ = builderForValue.build();
          onChanged();
        } else {
          destinationTableBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The table where results are written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public Builder mergeDestinationTable(com.google.cloud.bigquery.logging.v1.TableName value) {
        if (destinationTableBuilder_ == null) {
          if (destinationTable_ != null) {
            destinationTable_ =
              com.google.cloud.bigquery.logging.v1.TableName.newBuilder(destinationTable_).mergeFrom(value).buildPartial();
          } else {
            destinationTable_ = value;
          }
          onChanged();
        } else {
          destinationTableBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The table where results are written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public Builder clearDestinationTable() {
        if (destinationTableBuilder_ == null) {
          destinationTable_ = null;
          onChanged();
        } else {
          destinationTable_ = null;
          destinationTableBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The table where results are written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName.Builder getDestinationTableBuilder() {
        
        onChanged();
        return getDestinationTableFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The table where results are written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getDestinationTableOrBuilder() {
        if (destinationTableBuilder_ != null) {
          return destinationTableBuilder_.getMessageOrBuilder();
        } else {
          return destinationTable_ == null ?
              com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : destinationTable_;
        }
      }
      /**
       * <pre>
       * The table where results are written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
          getDestinationTableFieldBuilder() {
        if (destinationTableBuilder_ == null) {
          destinationTableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder>(
                  getDestinationTable(),
                  getParentForChildren(),
                  isClean());
          destinationTable_ = null;
        }
        return destinationTableBuilder_;
      }

      private java.lang.Object createDisposition_ = "";
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 3;</code>
       */
      public java.lang.String getCreateDisposition() {
        java.lang.Object ref = createDisposition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          createDisposition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCreateDispositionBytes() {
        java.lang.Object ref = createDisposition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createDisposition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 3;</code>
       */
      public Builder setCreateDisposition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        createDisposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 3;</code>
       */
      public Builder clearCreateDisposition() {
        
        createDisposition_ = getDefaultInstance().getCreateDisposition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 3;</code>
       */
      public Builder setCreateDispositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        createDisposition_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object writeDisposition_ = "";
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 4;</code>
       */
      public java.lang.String getWriteDisposition() {
        java.lang.Object ref = writeDisposition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          writeDisposition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 4;</code>
       */
      public com.google.protobuf.ByteString
          getWriteDispositionBytes() {
        java.lang.Object ref = writeDisposition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          writeDisposition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 4;</code>
       */
      public Builder setWriteDisposition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        writeDisposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 4;</code>
       */
      public Builder clearWriteDisposition() {
        
        writeDisposition_ = getDefaultInstance().getWriteDisposition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 4;</code>
       */
      public Builder setWriteDispositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        writeDisposition_ = value;
        onChanged();
        return this;
      }

      private com.google.cloud.bigquery.logging.v1.DatasetName defaultDataset_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.DatasetName, com.google.cloud.bigquery.logging.v1.DatasetName.Builder, com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder> defaultDatasetBuilder_;
      /**
       * <pre>
       * If a table name is specified without a dataset in a query,
       * this dataset will be added to table name.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
       */
      public boolean hasDefaultDataset() {
        return defaultDatasetBuilder_ != null || defaultDataset_ != null;
      }
      /**
       * <pre>
       * If a table name is specified without a dataset in a query,
       * this dataset will be added to table name.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
       */
      public com.google.cloud.bigquery.logging.v1.DatasetName getDefaultDataset() {
        if (defaultDatasetBuilder_ == null) {
          return defaultDataset_ == null ? com.google.cloud.bigquery.logging.v1.DatasetName.getDefaultInstance() : defaultDataset_;
        } else {
          return defaultDatasetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If a table name is specified without a dataset in a query,
       * this dataset will be added to table name.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
       */
      public Builder setDefaultDataset(com.google.cloud.bigquery.logging.v1.DatasetName value) {
        if (defaultDatasetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultDataset_ = value;
          onChanged();
        } else {
          defaultDatasetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * If a table name is specified without a dataset in a query,
       * this dataset will be added to table name.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
       */
      public Builder setDefaultDataset(
          com.google.cloud.bigquery.logging.v1.DatasetName.Builder builderForValue) {
        if (defaultDatasetBuilder_ == null) {
          defaultDataset_ = builderForValue.build();
          onChanged();
        } else {
          defaultDatasetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * If a table name is specified without a dataset in a query,
       * this dataset will be added to table name.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
       */
      public Builder mergeDefaultDataset(com.google.cloud.bigquery.logging.v1.DatasetName value) {
        if (defaultDatasetBuilder_ == null) {
          if (defaultDataset_ != null) {
            defaultDataset_ =
              com.google.cloud.bigquery.logging.v1.DatasetName.newBuilder(defaultDataset_).mergeFrom(value).buildPartial();
          } else {
            defaultDataset_ = value;
          }
          onChanged();
        } else {
          defaultDatasetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * If a table name is specified without a dataset in a query,
       * this dataset will be added to table name.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
       */
      public Builder clearDefaultDataset() {
        if (defaultDatasetBuilder_ == null) {
          defaultDataset_ = null;
          onChanged();
        } else {
          defaultDataset_ = null;
          defaultDatasetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * If a table name is specified without a dataset in a query,
       * this dataset will be added to table name.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
       */
      public com.google.cloud.bigquery.logging.v1.DatasetName.Builder getDefaultDatasetBuilder() {
        
        onChanged();
        return getDefaultDatasetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If a table name is specified without a dataset in a query,
       * this dataset will be added to table name.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
       */
      public com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder getDefaultDatasetOrBuilder() {
        if (defaultDatasetBuilder_ != null) {
          return defaultDatasetBuilder_.getMessageOrBuilder();
        } else {
          return defaultDataset_ == null ?
              com.google.cloud.bigquery.logging.v1.DatasetName.getDefaultInstance() : defaultDataset_;
        }
      }
      /**
       * <pre>
       * If a table name is specified without a dataset in a query,
       * this dataset will be added to table name.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.DatasetName default_dataset = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.DatasetName, com.google.cloud.bigquery.logging.v1.DatasetName.Builder, com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder> 
          getDefaultDatasetFieldBuilder() {
        if (defaultDatasetBuilder_ == null) {
          defaultDatasetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.bigquery.logging.v1.DatasetName, com.google.cloud.bigquery.logging.v1.DatasetName.Builder, com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder>(
                  getDefaultDataset(),
                  getParentForChildren(),
                  isClean());
          defaultDataset_ = null;
        }
        return defaultDatasetBuilder_;
      }

      private java.util.List<com.google.cloud.bigquery.logging.v1.TableDefinition> tableDefinitions_ =
        java.util.Collections.emptyList();
      private void ensureTableDefinitionsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          tableDefinitions_ = new java.util.ArrayList<com.google.cloud.bigquery.logging.v1.TableDefinition>(tableDefinitions_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableDefinition, com.google.cloud.bigquery.logging.v1.TableDefinition.Builder, com.google.cloud.bigquery.logging.v1.TableDefinitionOrBuilder> tableDefinitionsBuilder_;

      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public java.util.List<com.google.cloud.bigquery.logging.v1.TableDefinition> getTableDefinitionsList() {
        if (tableDefinitionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tableDefinitions_);
        } else {
          return tableDefinitionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public int getTableDefinitionsCount() {
        if (tableDefinitionsBuilder_ == null) {
          return tableDefinitions_.size();
        } else {
          return tableDefinitionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableDefinition getTableDefinitions(int index) {
        if (tableDefinitionsBuilder_ == null) {
          return tableDefinitions_.get(index);
        } else {
          return tableDefinitionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public Builder setTableDefinitions(
          int index, com.google.cloud.bigquery.logging.v1.TableDefinition value) {
        if (tableDefinitionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableDefinitionsIsMutable();
          tableDefinitions_.set(index, value);
          onChanged();
        } else {
          tableDefinitionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public Builder setTableDefinitions(
          int index, com.google.cloud.bigquery.logging.v1.TableDefinition.Builder builderForValue) {
        if (tableDefinitionsBuilder_ == null) {
          ensureTableDefinitionsIsMutable();
          tableDefinitions_.set(index, builderForValue.build());
          onChanged();
        } else {
          tableDefinitionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public Builder addTableDefinitions(com.google.cloud.bigquery.logging.v1.TableDefinition value) {
        if (tableDefinitionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableDefinitionsIsMutable();
          tableDefinitions_.add(value);
          onChanged();
        } else {
          tableDefinitionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public Builder addTableDefinitions(
          int index, com.google.cloud.bigquery.logging.v1.TableDefinition value) {
        if (tableDefinitionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableDefinitionsIsMutable();
          tableDefinitions_.add(index, value);
          onChanged();
        } else {
          tableDefinitionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public Builder addTableDefinitions(
          com.google.cloud.bigquery.logging.v1.TableDefinition.Builder builderForValue) {
        if (tableDefinitionsBuilder_ == null) {
          ensureTableDefinitionsIsMutable();
          tableDefinitions_.add(builderForValue.build());
          onChanged();
        } else {
          tableDefinitionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public Builder addTableDefinitions(
          int index, com.google.cloud.bigquery.logging.v1.TableDefinition.Builder builderForValue) {
        if (tableDefinitionsBuilder_ == null) {
          ensureTableDefinitionsIsMutable();
          tableDefinitions_.add(index, builderForValue.build());
          onChanged();
        } else {
          tableDefinitionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public Builder addAllTableDefinitions(
          java.lang.Iterable<? extends com.google.cloud.bigquery.logging.v1.TableDefinition> values) {
        if (tableDefinitionsBuilder_ == null) {
          ensureTableDefinitionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tableDefinitions_);
          onChanged();
        } else {
          tableDefinitionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public Builder clearTableDefinitions() {
        if (tableDefinitionsBuilder_ == null) {
          tableDefinitions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          tableDefinitionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public Builder removeTableDefinitions(int index) {
        if (tableDefinitionsBuilder_ == null) {
          ensureTableDefinitionsIsMutable();
          tableDefinitions_.remove(index);
          onChanged();
        } else {
          tableDefinitionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableDefinition.Builder getTableDefinitionsBuilder(
          int index) {
        return getTableDefinitionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableDefinitionOrBuilder getTableDefinitionsOrBuilder(
          int index) {
        if (tableDefinitionsBuilder_ == null) {
          return tableDefinitions_.get(index);  } else {
          return tableDefinitionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public java.util.List<? extends com.google.cloud.bigquery.logging.v1.TableDefinitionOrBuilder> 
           getTableDefinitionsOrBuilderList() {
        if (tableDefinitionsBuilder_ != null) {
          return tableDefinitionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tableDefinitions_);
        }
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableDefinition.Builder addTableDefinitionsBuilder() {
        return getTableDefinitionsFieldBuilder().addBuilder(
            com.google.cloud.bigquery.logging.v1.TableDefinition.getDefaultInstance());
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableDefinition.Builder addTableDefinitionsBuilder(
          int index) {
        return getTableDefinitionsFieldBuilder().addBuilder(
            index, com.google.cloud.bigquery.logging.v1.TableDefinition.getDefaultInstance());
      }
      /**
       * <pre>
       * Describes data sources outside BigQuery, if needed.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableDefinition table_definitions = 6;</code>
       */
      public java.util.List<com.google.cloud.bigquery.logging.v1.TableDefinition.Builder> 
           getTableDefinitionsBuilderList() {
        return getTableDefinitionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableDefinition, com.google.cloud.bigquery.logging.v1.TableDefinition.Builder, com.google.cloud.bigquery.logging.v1.TableDefinitionOrBuilder> 
          getTableDefinitionsFieldBuilder() {
        if (tableDefinitionsBuilder_ == null) {
          tableDefinitionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.cloud.bigquery.logging.v1.TableDefinition, com.google.cloud.bigquery.logging.v1.TableDefinition.Builder, com.google.cloud.bigquery.logging.v1.TableDefinitionOrBuilder>(
                  tableDefinitions_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          tableDefinitions_ = null;
        }
        return tableDefinitionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.bigquery.logging.v1.JobConfiguration.Query)
    private static final com.google.cloud.bigquery.logging.v1.JobConfiguration.Query DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.bigquery.logging.v1.JobConfiguration.Query();
    }

    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Query getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Query>
        PARSER = new com.google.protobuf.AbstractParser<Query>() {
      public Query parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Query(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Query> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Query> getParserForType() {
      return PARSER;
    }

    public com.google.cloud.bigquery.logging.v1.JobConfiguration.Query getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LoadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * URIs for the data to be imported. Only Google Cloud Storage URIs are
     * supported.
     * </pre>
     *
     * <code>repeated string source_uris = 1;</code>
     */
    java.util.List<java.lang.String>
        getSourceUrisList();
    /**
     * <pre>
     * URIs for the data to be imported. Only Google Cloud Storage URIs are
     * supported.
     * </pre>
     *
     * <code>repeated string source_uris = 1;</code>
     */
    int getSourceUrisCount();
    /**
     * <pre>
     * URIs for the data to be imported. Only Google Cloud Storage URIs are
     * supported.
     * </pre>
     *
     * <code>repeated string source_uris = 1;</code>
     */
    java.lang.String getSourceUris(int index);
    /**
     * <pre>
     * URIs for the data to be imported. Only Google Cloud Storage URIs are
     * supported.
     * </pre>
     *
     * <code>repeated string source_uris = 1;</code>
     */
    com.google.protobuf.ByteString
        getSourceUrisBytes(int index);

    /**
     * <pre>
     * The table schema in JSON format representation of a TableSchema.
     * </pre>
     *
     * <code>optional string schema_json = 6;</code>
     */
    java.lang.String getSchemaJson();
    /**
     * <pre>
     * The table schema in JSON format representation of a TableSchema.
     * </pre>
     *
     * <code>optional string schema_json = 6;</code>
     */
    com.google.protobuf.ByteString
        getSchemaJsonBytes();

    /**
     * <pre>
     * The table where the imported data is written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
     */
    boolean hasDestinationTable();
    /**
     * <pre>
     * The table where the imported data is written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableName getDestinationTable();
    /**
     * <pre>
     * The table where the imported data is written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getDestinationTableOrBuilder();

    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 4;</code>
     */
    java.lang.String getCreateDisposition();
    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 4;</code>
     */
    com.google.protobuf.ByteString
        getCreateDispositionBytes();

    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 5;</code>
     */
    java.lang.String getWriteDisposition();
    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 5;</code>
     */
    com.google.protobuf.ByteString
        getWriteDispositionBytes();
  }
  /**
   * <pre>
   * Describes a load job, which loads data from an external source via
   * the  import pipeline.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.logging.v1.JobConfiguration.Load}
   */
  public  static final class Load extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
      LoadOrBuilder {
    // Use Load.newBuilder() to construct.
    private Load(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Load() {
      sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      schemaJson_ = "";
      createDisposition_ = "";
      writeDisposition_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Load(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                sourceUris_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              sourceUris_.add(s);
              break;
            }
            case 26: {
              com.google.cloud.bigquery.logging.v1.TableName.Builder subBuilder = null;
              if (destinationTable_ != null) {
                subBuilder = destinationTable_.toBuilder();
              }
              destinationTable_ = input.readMessage(com.google.cloud.bigquery.logging.v1.TableName.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(destinationTable_);
                destinationTable_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              createDisposition_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              writeDisposition_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              schemaJson_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          sourceUris_ = sourceUris_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Load_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Load_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.class, com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.Builder.class);
    }

    private int bitField0_;
    public static final int SOURCE_URIS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList sourceUris_;
    /**
     * <pre>
     * URIs for the data to be imported. Only Google Cloud Storage URIs are
     * supported.
     * </pre>
     *
     * <code>repeated string source_uris = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getSourceUrisList() {
      return sourceUris_;
    }
    /**
     * <pre>
     * URIs for the data to be imported. Only Google Cloud Storage URIs are
     * supported.
     * </pre>
     *
     * <code>repeated string source_uris = 1;</code>
     */
    public int getSourceUrisCount() {
      return sourceUris_.size();
    }
    /**
     * <pre>
     * URIs for the data to be imported. Only Google Cloud Storage URIs are
     * supported.
     * </pre>
     *
     * <code>repeated string source_uris = 1;</code>
     */
    public java.lang.String getSourceUris(int index) {
      return sourceUris_.get(index);
    }
    /**
     * <pre>
     * URIs for the data to be imported. Only Google Cloud Storage URIs are
     * supported.
     * </pre>
     *
     * <code>repeated string source_uris = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSourceUrisBytes(int index) {
      return sourceUris_.getByteString(index);
    }

    public static final int SCHEMA_JSON_FIELD_NUMBER = 6;
    private volatile java.lang.Object schemaJson_;
    /**
     * <pre>
     * The table schema in JSON format representation of a TableSchema.
     * </pre>
     *
     * <code>optional string schema_json = 6;</code>
     */
    public java.lang.String getSchemaJson() {
      java.lang.Object ref = schemaJson_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        schemaJson_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The table schema in JSON format representation of a TableSchema.
     * </pre>
     *
     * <code>optional string schema_json = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSchemaJsonBytes() {
      java.lang.Object ref = schemaJson_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        schemaJson_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESTINATION_TABLE_FIELD_NUMBER = 3;
    private com.google.cloud.bigquery.logging.v1.TableName destinationTable_;
    /**
     * <pre>
     * The table where the imported data is written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
     */
    public boolean hasDestinationTable() {
      return destinationTable_ != null;
    }
    /**
     * <pre>
     * The table where the imported data is written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName getDestinationTable() {
      return destinationTable_ == null ? com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : destinationTable_;
    }
    /**
     * <pre>
     * The table where the imported data is written.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getDestinationTableOrBuilder() {
      return getDestinationTable();
    }

    public static final int CREATE_DISPOSITION_FIELD_NUMBER = 4;
    private volatile java.lang.Object createDisposition_;
    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 4;</code>
     */
    public java.lang.String getCreateDisposition() {
      java.lang.Object ref = createDisposition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        createDisposition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 4;</code>
     */
    public com.google.protobuf.ByteString
        getCreateDispositionBytes() {
      java.lang.Object ref = createDisposition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createDisposition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WRITE_DISPOSITION_FIELD_NUMBER = 5;
    private volatile java.lang.Object writeDisposition_;
    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 5;</code>
     */
    public java.lang.String getWriteDisposition() {
      java.lang.Object ref = writeDisposition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        writeDisposition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 5;</code>
     */
    public com.google.protobuf.ByteString
        getWriteDispositionBytes() {
      java.lang.Object ref = writeDisposition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        writeDisposition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < sourceUris_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sourceUris_.getRaw(i));
      }
      if (destinationTable_ != null) {
        output.writeMessage(3, getDestinationTable());
      }
      if (!getCreateDispositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, createDisposition_);
      }
      if (!getWriteDispositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, writeDisposition_);
      }
      if (!getSchemaJsonBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, schemaJson_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < sourceUris_.size(); i++) {
          dataSize += computeStringSizeNoTag(sourceUris_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSourceUrisList().size();
      }
      if (destinationTable_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDestinationTable());
      }
      if (!getCreateDispositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, createDisposition_);
      }
      if (!getWriteDispositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, writeDisposition_);
      }
      if (!getSchemaJsonBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, schemaJson_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.bigquery.logging.v1.JobConfiguration.Load)) {
        return super.equals(obj);
      }
      com.google.cloud.bigquery.logging.v1.JobConfiguration.Load other = (com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) obj;

      boolean result = true;
      result = result && getSourceUrisList()
          .equals(other.getSourceUrisList());
      result = result && getSchemaJson()
          .equals(other.getSchemaJson());
      result = result && (hasDestinationTable() == other.hasDestinationTable());
      if (hasDestinationTable()) {
        result = result && getDestinationTable()
            .equals(other.getDestinationTable());
      }
      result = result && getCreateDisposition()
          .equals(other.getCreateDisposition());
      result = result && getWriteDisposition()
          .equals(other.getWriteDisposition());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getSourceUrisCount() > 0) {
        hash = (37 * hash) + SOURCE_URIS_FIELD_NUMBER;
        hash = (53 * hash) + getSourceUrisList().hashCode();
      }
      hash = (37 * hash) + SCHEMA_JSON_FIELD_NUMBER;
      hash = (53 * hash) + getSchemaJson().hashCode();
      if (hasDestinationTable()) {
        hash = (37 * hash) + DESTINATION_TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getDestinationTable().hashCode();
      }
      hash = (37 * hash) + CREATE_DISPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getCreateDisposition().hashCode();
      hash = (37 * hash) + WRITE_DISPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getWriteDisposition().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Load parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Load parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Load parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Load parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Load parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Load parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Load parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Load parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Load parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Load parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.bigquery.logging.v1.JobConfiguration.Load prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a load job, which loads data from an external source via
     * the  import pipeline.
     * </pre>
     *
     * Protobuf type {@code google.cloud.bigquery.logging.v1.JobConfiguration.Load}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
        com.google.cloud.bigquery.logging.v1.JobConfiguration.LoadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Load_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Load_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.class, com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.Builder.class);
      }

      // Construct using com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        schemaJson_ = "";

        if (destinationTableBuilder_ == null) {
          destinationTable_ = null;
        } else {
          destinationTable_ = null;
          destinationTableBuilder_ = null;
        }
        createDisposition_ = "";

        writeDisposition_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Load_descriptor;
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.Load getDefaultInstanceForType() {
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.getDefaultInstance();
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.Load build() {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Load result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.Load buildPartial() {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Load result = new com.google.cloud.bigquery.logging.v1.JobConfiguration.Load(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          sourceUris_ = sourceUris_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.sourceUris_ = sourceUris_;
        result.schemaJson_ = schemaJson_;
        if (destinationTableBuilder_ == null) {
          result.destinationTable_ = destinationTable_;
        } else {
          result.destinationTable_ = destinationTableBuilder_.build();
        }
        result.createDisposition_ = createDisposition_;
        result.writeDisposition_ = writeDisposition_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) {
          return mergeFrom((com.google.cloud.bigquery.logging.v1.JobConfiguration.Load)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.bigquery.logging.v1.JobConfiguration.Load other) {
        if (other == com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.getDefaultInstance()) return this;
        if (!other.sourceUris_.isEmpty()) {
          if (sourceUris_.isEmpty()) {
            sourceUris_ = other.sourceUris_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSourceUrisIsMutable();
            sourceUris_.addAll(other.sourceUris_);
          }
          onChanged();
        }
        if (!other.getSchemaJson().isEmpty()) {
          schemaJson_ = other.schemaJson_;
          onChanged();
        }
        if (other.hasDestinationTable()) {
          mergeDestinationTable(other.getDestinationTable());
        }
        if (!other.getCreateDisposition().isEmpty()) {
          createDisposition_ = other.createDisposition_;
          onChanged();
        }
        if (!other.getWriteDisposition().isEmpty()) {
          writeDisposition_ = other.writeDisposition_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Load parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSourceUrisIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          sourceUris_ = new com.google.protobuf.LazyStringArrayList(sourceUris_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * URIs for the data to be imported. Only Google Cloud Storage URIs are
       * supported.
       * </pre>
       *
       * <code>repeated string source_uris = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getSourceUrisList() {
        return sourceUris_.getUnmodifiableView();
      }
      /**
       * <pre>
       * URIs for the data to be imported. Only Google Cloud Storage URIs are
       * supported.
       * </pre>
       *
       * <code>repeated string source_uris = 1;</code>
       */
      public int getSourceUrisCount() {
        return sourceUris_.size();
      }
      /**
       * <pre>
       * URIs for the data to be imported. Only Google Cloud Storage URIs are
       * supported.
       * </pre>
       *
       * <code>repeated string source_uris = 1;</code>
       */
      public java.lang.String getSourceUris(int index) {
        return sourceUris_.get(index);
      }
      /**
       * <pre>
       * URIs for the data to be imported. Only Google Cloud Storage URIs are
       * supported.
       * </pre>
       *
       * <code>repeated string source_uris = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSourceUrisBytes(int index) {
        return sourceUris_.getByteString(index);
      }
      /**
       * <pre>
       * URIs for the data to be imported. Only Google Cloud Storage URIs are
       * supported.
       * </pre>
       *
       * <code>repeated string source_uris = 1;</code>
       */
      public Builder setSourceUris(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSourceUrisIsMutable();
        sourceUris_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * URIs for the data to be imported. Only Google Cloud Storage URIs are
       * supported.
       * </pre>
       *
       * <code>repeated string source_uris = 1;</code>
       */
      public Builder addSourceUris(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSourceUrisIsMutable();
        sourceUris_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * URIs for the data to be imported. Only Google Cloud Storage URIs are
       * supported.
       * </pre>
       *
       * <code>repeated string source_uris = 1;</code>
       */
      public Builder addAllSourceUris(
          java.lang.Iterable<java.lang.String> values) {
        ensureSourceUrisIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sourceUris_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * URIs for the data to be imported. Only Google Cloud Storage URIs are
       * supported.
       * </pre>
       *
       * <code>repeated string source_uris = 1;</code>
       */
      public Builder clearSourceUris() {
        sourceUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * URIs for the data to be imported. Only Google Cloud Storage URIs are
       * supported.
       * </pre>
       *
       * <code>repeated string source_uris = 1;</code>
       */
      public Builder addSourceUrisBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSourceUrisIsMutable();
        sourceUris_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object schemaJson_ = "";
      /**
       * <pre>
       * The table schema in JSON format representation of a TableSchema.
       * </pre>
       *
       * <code>optional string schema_json = 6;</code>
       */
      public java.lang.String getSchemaJson() {
        java.lang.Object ref = schemaJson_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          schemaJson_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The table schema in JSON format representation of a TableSchema.
       * </pre>
       *
       * <code>optional string schema_json = 6;</code>
       */
      public com.google.protobuf.ByteString
          getSchemaJsonBytes() {
        java.lang.Object ref = schemaJson_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          schemaJson_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The table schema in JSON format representation of a TableSchema.
       * </pre>
       *
       * <code>optional string schema_json = 6;</code>
       */
      public Builder setSchemaJson(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        schemaJson_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The table schema in JSON format representation of a TableSchema.
       * </pre>
       *
       * <code>optional string schema_json = 6;</code>
       */
      public Builder clearSchemaJson() {
        
        schemaJson_ = getDefaultInstance().getSchemaJson();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The table schema in JSON format representation of a TableSchema.
       * </pre>
       *
       * <code>optional string schema_json = 6;</code>
       */
      public Builder setSchemaJsonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        schemaJson_ = value;
        onChanged();
        return this;
      }

      private com.google.cloud.bigquery.logging.v1.TableName destinationTable_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> destinationTableBuilder_;
      /**
       * <pre>
       * The table where the imported data is written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
       */
      public boolean hasDestinationTable() {
        return destinationTableBuilder_ != null || destinationTable_ != null;
      }
      /**
       * <pre>
       * The table where the imported data is written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName getDestinationTable() {
        if (destinationTableBuilder_ == null) {
          return destinationTable_ == null ? com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : destinationTable_;
        } else {
          return destinationTableBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The table where the imported data is written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
       */
      public Builder setDestinationTable(com.google.cloud.bigquery.logging.v1.TableName value) {
        if (destinationTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          destinationTable_ = value;
          onChanged();
        } else {
          destinationTableBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The table where the imported data is written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
       */
      public Builder setDestinationTable(
          com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
        if (destinationTableBuilder_ == null) {
          destinationTable_ = builderForValue.build();
          onChanged();
        } else {
          destinationTableBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The table where the imported data is written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
       */
      public Builder mergeDestinationTable(com.google.cloud.bigquery.logging.v1.TableName value) {
        if (destinationTableBuilder_ == null) {
          if (destinationTable_ != null) {
            destinationTable_ =
              com.google.cloud.bigquery.logging.v1.TableName.newBuilder(destinationTable_).mergeFrom(value).buildPartial();
          } else {
            destinationTable_ = value;
          }
          onChanged();
        } else {
          destinationTableBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The table where the imported data is written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
       */
      public Builder clearDestinationTable() {
        if (destinationTableBuilder_ == null) {
          destinationTable_ = null;
          onChanged();
        } else {
          destinationTable_ = null;
          destinationTableBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The table where the imported data is written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName.Builder getDestinationTableBuilder() {
        
        onChanged();
        return getDestinationTableFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The table where the imported data is written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getDestinationTableOrBuilder() {
        if (destinationTableBuilder_ != null) {
          return destinationTableBuilder_.getMessageOrBuilder();
        } else {
          return destinationTable_ == null ?
              com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : destinationTable_;
        }
      }
      /**
       * <pre>
       * The table where the imported data is written.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
          getDestinationTableFieldBuilder() {
        if (destinationTableBuilder_ == null) {
          destinationTableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder>(
                  getDestinationTable(),
                  getParentForChildren(),
                  isClean());
          destinationTable_ = null;
        }
        return destinationTableBuilder_;
      }

      private java.lang.Object createDisposition_ = "";
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 4;</code>
       */
      public java.lang.String getCreateDisposition() {
        java.lang.Object ref = createDisposition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          createDisposition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 4;</code>
       */
      public com.google.protobuf.ByteString
          getCreateDispositionBytes() {
        java.lang.Object ref = createDisposition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createDisposition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 4;</code>
       */
      public Builder setCreateDisposition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        createDisposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 4;</code>
       */
      public Builder clearCreateDisposition() {
        
        createDisposition_ = getDefaultInstance().getCreateDisposition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 4;</code>
       */
      public Builder setCreateDispositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        createDisposition_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object writeDisposition_ = "";
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 5;</code>
       */
      public java.lang.String getWriteDisposition() {
        java.lang.Object ref = writeDisposition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          writeDisposition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 5;</code>
       */
      public com.google.protobuf.ByteString
          getWriteDispositionBytes() {
        java.lang.Object ref = writeDisposition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          writeDisposition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 5;</code>
       */
      public Builder setWriteDisposition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        writeDisposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 5;</code>
       */
      public Builder clearWriteDisposition() {
        
        writeDisposition_ = getDefaultInstance().getWriteDisposition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 5;</code>
       */
      public Builder setWriteDispositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        writeDisposition_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.bigquery.logging.v1.JobConfiguration.Load)
    private static final com.google.cloud.bigquery.logging.v1.JobConfiguration.Load DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.bigquery.logging.v1.JobConfiguration.Load();
    }

    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Load getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Load>
        PARSER = new com.google.protobuf.AbstractParser<Load>() {
      public Load parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Load(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Load> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Load> getParserForType() {
      return PARSER;
    }

    public com.google.cloud.bigquery.logging.v1.JobConfiguration.Load getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExtractOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Google Cloud Storage URIs where extracted data should be written.
     * </pre>
     *
     * <code>repeated string destination_uris = 1;</code>
     */
    java.util.List<java.lang.String>
        getDestinationUrisList();
    /**
     * <pre>
     * Google Cloud Storage URIs where extracted data should be written.
     * </pre>
     *
     * <code>repeated string destination_uris = 1;</code>
     */
    int getDestinationUrisCount();
    /**
     * <pre>
     * Google Cloud Storage URIs where extracted data should be written.
     * </pre>
     *
     * <code>repeated string destination_uris = 1;</code>
     */
    java.lang.String getDestinationUris(int index);
    /**
     * <pre>
     * Google Cloud Storage URIs where extracted data should be written.
     * </pre>
     *
     * <code>repeated string destination_uris = 1;</code>
     */
    com.google.protobuf.ByteString
        getDestinationUrisBytes(int index);

    /**
     * <pre>
     * The source table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
     */
    boolean hasSourceTable();
    /**
     * <pre>
     * The source table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableName getSourceTable();
    /**
     * <pre>
     * The source table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getSourceTableOrBuilder();
  }
  /**
   * <pre>
   * Describes an extract job, which exports data to an external source
   * via the  export pipeline.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.logging.v1.JobConfiguration.Extract}
   */
  public  static final class Extract extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
      ExtractOrBuilder {
    // Use Extract.newBuilder() to construct.
    private Extract(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Extract() {
      destinationUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Extract(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                destinationUris_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              destinationUris_.add(s);
              break;
            }
            case 18: {
              com.google.cloud.bigquery.logging.v1.TableName.Builder subBuilder = null;
              if (sourceTable_ != null) {
                subBuilder = sourceTable_.toBuilder();
              }
              sourceTable_ = input.readMessage(com.google.cloud.bigquery.logging.v1.TableName.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sourceTable_);
                sourceTable_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          destinationUris_ = destinationUris_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Extract_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Extract_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.class, com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.Builder.class);
    }

    private int bitField0_;
    public static final int DESTINATION_URIS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList destinationUris_;
    /**
     * <pre>
     * Google Cloud Storage URIs where extracted data should be written.
     * </pre>
     *
     * <code>repeated string destination_uris = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getDestinationUrisList() {
      return destinationUris_;
    }
    /**
     * <pre>
     * Google Cloud Storage URIs where extracted data should be written.
     * </pre>
     *
     * <code>repeated string destination_uris = 1;</code>
     */
    public int getDestinationUrisCount() {
      return destinationUris_.size();
    }
    /**
     * <pre>
     * Google Cloud Storage URIs where extracted data should be written.
     * </pre>
     *
     * <code>repeated string destination_uris = 1;</code>
     */
    public java.lang.String getDestinationUris(int index) {
      return destinationUris_.get(index);
    }
    /**
     * <pre>
     * Google Cloud Storage URIs where extracted data should be written.
     * </pre>
     *
     * <code>repeated string destination_uris = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDestinationUrisBytes(int index) {
      return destinationUris_.getByteString(index);
    }

    public static final int SOURCE_TABLE_FIELD_NUMBER = 2;
    private com.google.cloud.bigquery.logging.v1.TableName sourceTable_;
    /**
     * <pre>
     * The source table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
     */
    public boolean hasSourceTable() {
      return sourceTable_ != null;
    }
    /**
     * <pre>
     * The source table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName getSourceTable() {
      return sourceTable_ == null ? com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : sourceTable_;
    }
    /**
     * <pre>
     * The source table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getSourceTableOrBuilder() {
      return getSourceTable();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < destinationUris_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, destinationUris_.getRaw(i));
      }
      if (sourceTable_ != null) {
        output.writeMessage(2, getSourceTable());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < destinationUris_.size(); i++) {
          dataSize += computeStringSizeNoTag(destinationUris_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getDestinationUrisList().size();
      }
      if (sourceTable_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSourceTable());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract)) {
        return super.equals(obj);
      }
      com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract other = (com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) obj;

      boolean result = true;
      result = result && getDestinationUrisList()
          .equals(other.getDestinationUrisList());
      result = result && (hasSourceTable() == other.hasSourceTable());
      if (hasSourceTable()) {
        result = result && getSourceTable()
            .equals(other.getSourceTable());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getDestinationUrisCount() > 0) {
        hash = (37 * hash) + DESTINATION_URIS_FIELD_NUMBER;
        hash = (53 * hash) + getDestinationUrisList().hashCode();
      }
      if (hasSourceTable()) {
        hash = (37 * hash) + SOURCE_TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getSourceTable().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes an extract job, which exports data to an external source
     * via the  export pipeline.
     * </pre>
     *
     * Protobuf type {@code google.cloud.bigquery.logging.v1.JobConfiguration.Extract}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
        com.google.cloud.bigquery.logging.v1.JobConfiguration.ExtractOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Extract_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Extract_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.class, com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.Builder.class);
      }

      // Construct using com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        destinationUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sourceTableBuilder_ == null) {
          sourceTable_ = null;
        } else {
          sourceTable_ = null;
          sourceTableBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_Extract_descriptor;
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract getDefaultInstanceForType() {
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.getDefaultInstance();
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract build() {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract buildPartial() {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract result = new com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          destinationUris_ = destinationUris_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.destinationUris_ = destinationUris_;
        if (sourceTableBuilder_ == null) {
          result.sourceTable_ = sourceTable_;
        } else {
          result.sourceTable_ = sourceTableBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) {
          return mergeFrom((com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract other) {
        if (other == com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.getDefaultInstance()) return this;
        if (!other.destinationUris_.isEmpty()) {
          if (destinationUris_.isEmpty()) {
            destinationUris_ = other.destinationUris_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDestinationUrisIsMutable();
            destinationUris_.addAll(other.destinationUris_);
          }
          onChanged();
        }
        if (other.hasSourceTable()) {
          mergeSourceTable(other.getSourceTable());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList destinationUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDestinationUrisIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          destinationUris_ = new com.google.protobuf.LazyStringArrayList(destinationUris_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Google Cloud Storage URIs where extracted data should be written.
       * </pre>
       *
       * <code>repeated string destination_uris = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getDestinationUrisList() {
        return destinationUris_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Google Cloud Storage URIs where extracted data should be written.
       * </pre>
       *
       * <code>repeated string destination_uris = 1;</code>
       */
      public int getDestinationUrisCount() {
        return destinationUris_.size();
      }
      /**
       * <pre>
       * Google Cloud Storage URIs where extracted data should be written.
       * </pre>
       *
       * <code>repeated string destination_uris = 1;</code>
       */
      public java.lang.String getDestinationUris(int index) {
        return destinationUris_.get(index);
      }
      /**
       * <pre>
       * Google Cloud Storage URIs where extracted data should be written.
       * </pre>
       *
       * <code>repeated string destination_uris = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDestinationUrisBytes(int index) {
        return destinationUris_.getByteString(index);
      }
      /**
       * <pre>
       * Google Cloud Storage URIs where extracted data should be written.
       * </pre>
       *
       * <code>repeated string destination_uris = 1;</code>
       */
      public Builder setDestinationUris(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDestinationUrisIsMutable();
        destinationUris_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Google Cloud Storage URIs where extracted data should be written.
       * </pre>
       *
       * <code>repeated string destination_uris = 1;</code>
       */
      public Builder addDestinationUris(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDestinationUrisIsMutable();
        destinationUris_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Google Cloud Storage URIs where extracted data should be written.
       * </pre>
       *
       * <code>repeated string destination_uris = 1;</code>
       */
      public Builder addAllDestinationUris(
          java.lang.Iterable<java.lang.String> values) {
        ensureDestinationUrisIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, destinationUris_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Google Cloud Storage URIs where extracted data should be written.
       * </pre>
       *
       * <code>repeated string destination_uris = 1;</code>
       */
      public Builder clearDestinationUris() {
        destinationUris_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Google Cloud Storage URIs where extracted data should be written.
       * </pre>
       *
       * <code>repeated string destination_uris = 1;</code>
       */
      public Builder addDestinationUrisBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureDestinationUrisIsMutable();
        destinationUris_.add(value);
        onChanged();
        return this;
      }

      private com.google.cloud.bigquery.logging.v1.TableName sourceTable_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> sourceTableBuilder_;
      /**
       * <pre>
       * The source table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
       */
      public boolean hasSourceTable() {
        return sourceTableBuilder_ != null || sourceTable_ != null;
      }
      /**
       * <pre>
       * The source table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName getSourceTable() {
        if (sourceTableBuilder_ == null) {
          return sourceTable_ == null ? com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : sourceTable_;
        } else {
          return sourceTableBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The source table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
       */
      public Builder setSourceTable(com.google.cloud.bigquery.logging.v1.TableName value) {
        if (sourceTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sourceTable_ = value;
          onChanged();
        } else {
          sourceTableBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The source table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
       */
      public Builder setSourceTable(
          com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
        if (sourceTableBuilder_ == null) {
          sourceTable_ = builderForValue.build();
          onChanged();
        } else {
          sourceTableBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The source table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
       */
      public Builder mergeSourceTable(com.google.cloud.bigquery.logging.v1.TableName value) {
        if (sourceTableBuilder_ == null) {
          if (sourceTable_ != null) {
            sourceTable_ =
              com.google.cloud.bigquery.logging.v1.TableName.newBuilder(sourceTable_).mergeFrom(value).buildPartial();
          } else {
            sourceTable_ = value;
          }
          onChanged();
        } else {
          sourceTableBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The source table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
       */
      public Builder clearSourceTable() {
        if (sourceTableBuilder_ == null) {
          sourceTable_ = null;
          onChanged();
        } else {
          sourceTable_ = null;
          sourceTableBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The source table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName.Builder getSourceTableBuilder() {
        
        onChanged();
        return getSourceTableFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The source table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getSourceTableOrBuilder() {
        if (sourceTableBuilder_ != null) {
          return sourceTableBuilder_.getMessageOrBuilder();
        } else {
          return sourceTable_ == null ?
              com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : sourceTable_;
        }
      }
      /**
       * <pre>
       * The source table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName source_table = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
          getSourceTableFieldBuilder() {
        if (sourceTableBuilder_ == null) {
          sourceTableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder>(
                  getSourceTable(),
                  getParentForChildren(),
                  isClean());
          sourceTable_ = null;
        }
        return sourceTableBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.bigquery.logging.v1.JobConfiguration.Extract)
    private static final com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract();
    }

    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Extract>
        PARSER = new com.google.protobuf.AbstractParser<Extract>() {
      public Extract parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Extract(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Extract> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Extract> getParserForType() {
      return PARSER;
    }

    public com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TableCopyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Source tables.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
     */
    java.util.List<com.google.cloud.bigquery.logging.v1.TableName> 
        getSourceTablesList();
    /**
     * <pre>
     * Source tables.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableName getSourceTables(int index);
    /**
     * <pre>
     * Source tables.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
     */
    int getSourceTablesCount();
    /**
     * <pre>
     * Source tables.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
     */
    java.util.List<? extends com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
        getSourceTablesOrBuilderList();
    /**
     * <pre>
     * Source tables.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getSourceTablesOrBuilder(
        int index);

    /**
     * <pre>
     * Destination table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    boolean hasDestinationTable();
    /**
     * <pre>
     * Destination table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableName getDestinationTable();
    /**
     * <pre>
     * Destination table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getDestinationTableOrBuilder();

    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 3;</code>
     */
    java.lang.String getCreateDisposition();
    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 3;</code>
     */
    com.google.protobuf.ByteString
        getCreateDispositionBytes();

    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 4;</code>
     */
    java.lang.String getWriteDisposition();
    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 4;</code>
     */
    com.google.protobuf.ByteString
        getWriteDispositionBytes();
  }
  /**
   * <pre>
   * Describes a copy job, which copies an existing table to another table.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy}
   */
  public  static final class TableCopy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
      TableCopyOrBuilder {
    // Use TableCopy.newBuilder() to construct.
    private TableCopy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TableCopy() {
      sourceTables_ = java.util.Collections.emptyList();
      createDisposition_ = "";
      writeDisposition_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TableCopy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                sourceTables_ = new java.util.ArrayList<com.google.cloud.bigquery.logging.v1.TableName>();
                mutable_bitField0_ |= 0x00000001;
              }
              sourceTables_.add(
                  input.readMessage(com.google.cloud.bigquery.logging.v1.TableName.parser(), extensionRegistry));
              break;
            }
            case 18: {
              com.google.cloud.bigquery.logging.v1.TableName.Builder subBuilder = null;
              if (destinationTable_ != null) {
                subBuilder = destinationTable_.toBuilder();
              }
              destinationTable_ = input.readMessage(com.google.cloud.bigquery.logging.v1.TableName.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(destinationTable_);
                destinationTable_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              createDisposition_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              writeDisposition_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          sourceTables_ = java.util.Collections.unmodifiableList(sourceTables_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_TableCopy_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_TableCopy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.class, com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.Builder.class);
    }

    private int bitField0_;
    public static final int SOURCE_TABLES_FIELD_NUMBER = 1;
    private java.util.List<com.google.cloud.bigquery.logging.v1.TableName> sourceTables_;
    /**
     * <pre>
     * Source tables.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
     */
    public java.util.List<com.google.cloud.bigquery.logging.v1.TableName> getSourceTablesList() {
      return sourceTables_;
    }
    /**
     * <pre>
     * Source tables.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
     */
    public java.util.List<? extends com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
        getSourceTablesOrBuilderList() {
      return sourceTables_;
    }
    /**
     * <pre>
     * Source tables.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
     */
    public int getSourceTablesCount() {
      return sourceTables_.size();
    }
    /**
     * <pre>
     * Source tables.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName getSourceTables(int index) {
      return sourceTables_.get(index);
    }
    /**
     * <pre>
     * Source tables.
     * </pre>
     *
     * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getSourceTablesOrBuilder(
        int index) {
      return sourceTables_.get(index);
    }

    public static final int DESTINATION_TABLE_FIELD_NUMBER = 2;
    private com.google.cloud.bigquery.logging.v1.TableName destinationTable_;
    /**
     * <pre>
     * Destination table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    public boolean hasDestinationTable() {
      return destinationTable_ != null;
    }
    /**
     * <pre>
     * Destination table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableName getDestinationTable() {
      return destinationTable_ == null ? com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : destinationTable_;
    }
    /**
     * <pre>
     * Destination table.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getDestinationTableOrBuilder() {
      return getDestinationTable();
    }

    public static final int CREATE_DISPOSITION_FIELD_NUMBER = 3;
    private volatile java.lang.Object createDisposition_;
    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 3;</code>
     */
    public java.lang.String getCreateDisposition() {
      java.lang.Object ref = createDisposition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        createDisposition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Describes when a job is allowed to create a table:
     * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
     * </pre>
     *
     * <code>optional string create_disposition = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCreateDispositionBytes() {
      java.lang.Object ref = createDisposition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createDisposition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WRITE_DISPOSITION_FIELD_NUMBER = 4;
    private volatile java.lang.Object writeDisposition_;
    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 4;</code>
     */
    public java.lang.String getWriteDisposition() {
      java.lang.Object ref = writeDisposition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        writeDisposition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Describes how writes affect existing tables:
     * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
     * </pre>
     *
     * <code>optional string write_disposition = 4;</code>
     */
    public com.google.protobuf.ByteString
        getWriteDispositionBytes() {
      java.lang.Object ref = writeDisposition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        writeDisposition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < sourceTables_.size(); i++) {
        output.writeMessage(1, sourceTables_.get(i));
      }
      if (destinationTable_ != null) {
        output.writeMessage(2, getDestinationTable());
      }
      if (!getCreateDispositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, createDisposition_);
      }
      if (!getWriteDispositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, writeDisposition_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < sourceTables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, sourceTables_.get(i));
      }
      if (destinationTable_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDestinationTable());
      }
      if (!getCreateDispositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, createDisposition_);
      }
      if (!getWriteDispositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, writeDisposition_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)) {
        return super.equals(obj);
      }
      com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy other = (com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) obj;

      boolean result = true;
      result = result && getSourceTablesList()
          .equals(other.getSourceTablesList());
      result = result && (hasDestinationTable() == other.hasDestinationTable());
      if (hasDestinationTable()) {
        result = result && getDestinationTable()
            .equals(other.getDestinationTable());
      }
      result = result && getCreateDisposition()
          .equals(other.getCreateDisposition());
      result = result && getWriteDisposition()
          .equals(other.getWriteDisposition());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getSourceTablesCount() > 0) {
        hash = (37 * hash) + SOURCE_TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getSourceTablesList().hashCode();
      }
      if (hasDestinationTable()) {
        hash = (37 * hash) + DESTINATION_TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getDestinationTable().hashCode();
      }
      hash = (37 * hash) + CREATE_DISPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getCreateDisposition().hashCode();
      hash = (37 * hash) + WRITE_DISPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getWriteDisposition().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a copy job, which copies an existing table to another table.
     * </pre>
     *
     * Protobuf type {@code google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
        com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_TableCopy_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_TableCopy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.class, com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.Builder.class);
      }

      // Construct using com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSourceTablesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (sourceTablesBuilder_ == null) {
          sourceTables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          sourceTablesBuilder_.clear();
        }
        if (destinationTableBuilder_ == null) {
          destinationTable_ = null;
        } else {
          destinationTable_ = null;
          destinationTableBuilder_ = null;
        }
        createDisposition_ = "";

        writeDisposition_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_TableCopy_descriptor;
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy getDefaultInstanceForType() {
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.getDefaultInstance();
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy build() {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy buildPartial() {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy result = new com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (sourceTablesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            sourceTables_ = java.util.Collections.unmodifiableList(sourceTables_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.sourceTables_ = sourceTables_;
        } else {
          result.sourceTables_ = sourceTablesBuilder_.build();
        }
        if (destinationTableBuilder_ == null) {
          result.destinationTable_ = destinationTable_;
        } else {
          result.destinationTable_ = destinationTableBuilder_.build();
        }
        result.createDisposition_ = createDisposition_;
        result.writeDisposition_ = writeDisposition_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) {
          return mergeFrom((com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy other) {
        if (other == com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.getDefaultInstance()) return this;
        if (sourceTablesBuilder_ == null) {
          if (!other.sourceTables_.isEmpty()) {
            if (sourceTables_.isEmpty()) {
              sourceTables_ = other.sourceTables_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSourceTablesIsMutable();
              sourceTables_.addAll(other.sourceTables_);
            }
            onChanged();
          }
        } else {
          if (!other.sourceTables_.isEmpty()) {
            if (sourceTablesBuilder_.isEmpty()) {
              sourceTablesBuilder_.dispose();
              sourceTablesBuilder_ = null;
              sourceTables_ = other.sourceTables_;
              bitField0_ = (bitField0_ & ~0x00000001);
              sourceTablesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSourceTablesFieldBuilder() : null;
            } else {
              sourceTablesBuilder_.addAllMessages(other.sourceTables_);
            }
          }
        }
        if (other.hasDestinationTable()) {
          mergeDestinationTable(other.getDestinationTable());
        }
        if (!other.getCreateDisposition().isEmpty()) {
          createDisposition_ = other.createDisposition_;
          onChanged();
        }
        if (!other.getWriteDisposition().isEmpty()) {
          writeDisposition_ = other.writeDisposition_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.cloud.bigquery.logging.v1.TableName> sourceTables_ =
        java.util.Collections.emptyList();
      private void ensureSourceTablesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          sourceTables_ = new java.util.ArrayList<com.google.cloud.bigquery.logging.v1.TableName>(sourceTables_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> sourceTablesBuilder_;

      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public java.util.List<com.google.cloud.bigquery.logging.v1.TableName> getSourceTablesList() {
        if (sourceTablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sourceTables_);
        } else {
          return sourceTablesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public int getSourceTablesCount() {
        if (sourceTablesBuilder_ == null) {
          return sourceTables_.size();
        } else {
          return sourceTablesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName getSourceTables(int index) {
        if (sourceTablesBuilder_ == null) {
          return sourceTables_.get(index);
        } else {
          return sourceTablesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public Builder setSourceTables(
          int index, com.google.cloud.bigquery.logging.v1.TableName value) {
        if (sourceTablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourceTablesIsMutable();
          sourceTables_.set(index, value);
          onChanged();
        } else {
          sourceTablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public Builder setSourceTables(
          int index, com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
        if (sourceTablesBuilder_ == null) {
          ensureSourceTablesIsMutable();
          sourceTables_.set(index, builderForValue.build());
          onChanged();
        } else {
          sourceTablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public Builder addSourceTables(com.google.cloud.bigquery.logging.v1.TableName value) {
        if (sourceTablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourceTablesIsMutable();
          sourceTables_.add(value);
          onChanged();
        } else {
          sourceTablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public Builder addSourceTables(
          int index, com.google.cloud.bigquery.logging.v1.TableName value) {
        if (sourceTablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourceTablesIsMutable();
          sourceTables_.add(index, value);
          onChanged();
        } else {
          sourceTablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public Builder addSourceTables(
          com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
        if (sourceTablesBuilder_ == null) {
          ensureSourceTablesIsMutable();
          sourceTables_.add(builderForValue.build());
          onChanged();
        } else {
          sourceTablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public Builder addSourceTables(
          int index, com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
        if (sourceTablesBuilder_ == null) {
          ensureSourceTablesIsMutable();
          sourceTables_.add(index, builderForValue.build());
          onChanged();
        } else {
          sourceTablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public Builder addAllSourceTables(
          java.lang.Iterable<? extends com.google.cloud.bigquery.logging.v1.TableName> values) {
        if (sourceTablesBuilder_ == null) {
          ensureSourceTablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sourceTables_);
          onChanged();
        } else {
          sourceTablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public Builder clearSourceTables() {
        if (sourceTablesBuilder_ == null) {
          sourceTables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          sourceTablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public Builder removeSourceTables(int index) {
        if (sourceTablesBuilder_ == null) {
          ensureSourceTablesIsMutable();
          sourceTables_.remove(index);
          onChanged();
        } else {
          sourceTablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName.Builder getSourceTablesBuilder(
          int index) {
        return getSourceTablesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getSourceTablesOrBuilder(
          int index) {
        if (sourceTablesBuilder_ == null) {
          return sourceTables_.get(index);  } else {
          return sourceTablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public java.util.List<? extends com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
           getSourceTablesOrBuilderList() {
        if (sourceTablesBuilder_ != null) {
          return sourceTablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sourceTables_);
        }
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName.Builder addSourceTablesBuilder() {
        return getSourceTablesFieldBuilder().addBuilder(
            com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance());
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName.Builder addSourceTablesBuilder(
          int index) {
        return getSourceTablesFieldBuilder().addBuilder(
            index, com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance());
      }
      /**
       * <pre>
       * Source tables.
       * </pre>
       *
       * <code>repeated .google.cloud.bigquery.logging.v1.TableName source_tables = 1;</code>
       */
      public java.util.List<com.google.cloud.bigquery.logging.v1.TableName.Builder> 
           getSourceTablesBuilderList() {
        return getSourceTablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
          getSourceTablesFieldBuilder() {
        if (sourceTablesBuilder_ == null) {
          sourceTablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder>(
                  sourceTables_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          sourceTables_ = null;
        }
        return sourceTablesBuilder_;
      }

      private com.google.cloud.bigquery.logging.v1.TableName destinationTable_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> destinationTableBuilder_;
      /**
       * <pre>
       * Destination table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public boolean hasDestinationTable() {
        return destinationTableBuilder_ != null || destinationTable_ != null;
      }
      /**
       * <pre>
       * Destination table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName getDestinationTable() {
        if (destinationTableBuilder_ == null) {
          return destinationTable_ == null ? com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : destinationTable_;
        } else {
          return destinationTableBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Destination table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public Builder setDestinationTable(com.google.cloud.bigquery.logging.v1.TableName value) {
        if (destinationTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          destinationTable_ = value;
          onChanged();
        } else {
          destinationTableBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Destination table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public Builder setDestinationTable(
          com.google.cloud.bigquery.logging.v1.TableName.Builder builderForValue) {
        if (destinationTableBuilder_ == null) {
          destinationTable_ = builderForValue.build();
          onChanged();
        } else {
          destinationTableBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Destination table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public Builder mergeDestinationTable(com.google.cloud.bigquery.logging.v1.TableName value) {
        if (destinationTableBuilder_ == null) {
          if (destinationTable_ != null) {
            destinationTable_ =
              com.google.cloud.bigquery.logging.v1.TableName.newBuilder(destinationTable_).mergeFrom(value).buildPartial();
          } else {
            destinationTable_ = value;
          }
          onChanged();
        } else {
          destinationTableBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Destination table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public Builder clearDestinationTable() {
        if (destinationTableBuilder_ == null) {
          destinationTable_ = null;
          onChanged();
        } else {
          destinationTable_ = null;
          destinationTableBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Destination table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableName.Builder getDestinationTableBuilder() {
        
        onChanged();
        return getDestinationTableFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Destination table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      public com.google.cloud.bigquery.logging.v1.TableNameOrBuilder getDestinationTableOrBuilder() {
        if (destinationTableBuilder_ != null) {
          return destinationTableBuilder_.getMessageOrBuilder();
        } else {
          return destinationTable_ == null ?
              com.google.cloud.bigquery.logging.v1.TableName.getDefaultInstance() : destinationTable_;
        }
      }
      /**
       * <pre>
       * Destination table.
       * </pre>
       *
       * <code>optional .google.cloud.bigquery.logging.v1.TableName destination_table = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder> 
          getDestinationTableFieldBuilder() {
        if (destinationTableBuilder_ == null) {
          destinationTableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.bigquery.logging.v1.TableName, com.google.cloud.bigquery.logging.v1.TableName.Builder, com.google.cloud.bigquery.logging.v1.TableNameOrBuilder>(
                  getDestinationTable(),
                  getParentForChildren(),
                  isClean());
          destinationTable_ = null;
        }
        return destinationTableBuilder_;
      }

      private java.lang.Object createDisposition_ = "";
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 3;</code>
       */
      public java.lang.String getCreateDisposition() {
        java.lang.Object ref = createDisposition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          createDisposition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCreateDispositionBytes() {
        java.lang.Object ref = createDisposition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createDisposition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 3;</code>
       */
      public Builder setCreateDisposition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        createDisposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 3;</code>
       */
      public Builder clearCreateDisposition() {
        
        createDisposition_ = getDefaultInstance().getCreateDisposition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes when a job is allowed to create a table:
       * `CREATE_IF_NEEDED`, `CREATE_NEVER`.
       * </pre>
       *
       * <code>optional string create_disposition = 3;</code>
       */
      public Builder setCreateDispositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        createDisposition_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object writeDisposition_ = "";
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 4;</code>
       */
      public java.lang.String getWriteDisposition() {
        java.lang.Object ref = writeDisposition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          writeDisposition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 4;</code>
       */
      public com.google.protobuf.ByteString
          getWriteDispositionBytes() {
        java.lang.Object ref = writeDisposition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          writeDisposition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 4;</code>
       */
      public Builder setWriteDisposition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        writeDisposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 4;</code>
       */
      public Builder clearWriteDisposition() {
        
        writeDisposition_ = getDefaultInstance().getWriteDisposition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes how writes affect existing tables:
       * `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
       * </pre>
       *
       * <code>optional string write_disposition = 4;</code>
       */
      public Builder setWriteDispositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        writeDisposition_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy)
    private static final com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy();
    }

    public static com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TableCopy>
        PARSER = new com.google.protobuf.AbstractParser<TableCopy>() {
      public TableCopy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TableCopy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TableCopy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TableCopy> getParserForType() {
      return PARSER;
    }

    public com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int configurationCase_ = 0;
  private java.lang.Object configuration_;
  public enum ConfigurationCase
      implements com.google.protobuf.Internal.EnumLite {
    QUERY(5),
    LOAD(6),
    EXTRACT(7),
    TABLE_COPY(8),
    CONFIGURATION_NOT_SET(0);
    private final int value;
    private ConfigurationCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ConfigurationCase valueOf(int value) {
      return forNumber(value);
    }

    public static ConfigurationCase forNumber(int value) {
      switch (value) {
        case 5: return QUERY;
        case 6: return LOAD;
        case 7: return EXTRACT;
        case 8: return TABLE_COPY;
        case 0: return CONFIGURATION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ConfigurationCase
  getConfigurationCase() {
    return ConfigurationCase.forNumber(
        configurationCase_);
  }

  public static final int QUERY_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Query job information.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;</code>
   */
  public com.google.cloud.bigquery.logging.v1.JobConfiguration.Query getQuery() {
    if (configurationCase_ == 5) {
       return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) configuration_;
    }
    return com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.getDefaultInstance();
  }
  /**
   * <pre>
   * Query job information.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;</code>
   */
  public com.google.cloud.bigquery.logging.v1.JobConfiguration.QueryOrBuilder getQueryOrBuilder() {
    if (configurationCase_ == 5) {
       return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) configuration_;
    }
    return com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.getDefaultInstance();
  }

  public static final int LOAD_FIELD_NUMBER = 6;
  /**
   * <pre>
   * Load job information.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;</code>
   */
  public com.google.cloud.bigquery.logging.v1.JobConfiguration.Load getLoad() {
    if (configurationCase_ == 6) {
       return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) configuration_;
    }
    return com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.getDefaultInstance();
  }
  /**
   * <pre>
   * Load job information.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;</code>
   */
  public com.google.cloud.bigquery.logging.v1.JobConfiguration.LoadOrBuilder getLoadOrBuilder() {
    if (configurationCase_ == 6) {
       return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) configuration_;
    }
    return com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.getDefaultInstance();
  }

  public static final int EXTRACT_FIELD_NUMBER = 7;
  /**
   * <pre>
   * Extract job information.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;</code>
   */
  public com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract getExtract() {
    if (configurationCase_ == 7) {
       return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) configuration_;
    }
    return com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.getDefaultInstance();
  }
  /**
   * <pre>
   * Extract job information.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;</code>
   */
  public com.google.cloud.bigquery.logging.v1.JobConfiguration.ExtractOrBuilder getExtractOrBuilder() {
    if (configurationCase_ == 7) {
       return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) configuration_;
    }
    return com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.getDefaultInstance();
  }

  public static final int TABLE_COPY_FIELD_NUMBER = 8;
  /**
   * <pre>
   * TableCopy job information.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;</code>
   */
  public com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy getTableCopy() {
    if (configurationCase_ == 8) {
       return (com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) configuration_;
    }
    return com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.getDefaultInstance();
  }
  /**
   * <pre>
   * TableCopy job information.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;</code>
   */
  public com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopyOrBuilder getTableCopyOrBuilder() {
    if (configurationCase_ == 8) {
       return (com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) configuration_;
    }
    return com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.getDefaultInstance();
  }

  public static final int DRY_RUN_FIELD_NUMBER = 9;
  private boolean dryRun_;
  /**
   * <pre>
   * If true, don't actually run the job. Just check that it would run.
   * </pre>
   *
   * <code>optional bool dry_run = 9;</code>
   */
  public boolean getDryRun() {
    return dryRun_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (configurationCase_ == 5) {
      output.writeMessage(5, (com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) configuration_);
    }
    if (configurationCase_ == 6) {
      output.writeMessage(6, (com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) configuration_);
    }
    if (configurationCase_ == 7) {
      output.writeMessage(7, (com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) configuration_);
    }
    if (configurationCase_ == 8) {
      output.writeMessage(8, (com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) configuration_);
    }
    if (dryRun_ != false) {
      output.writeBool(9, dryRun_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (configurationCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) configuration_);
    }
    if (configurationCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) configuration_);
    }
    if (configurationCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) configuration_);
    }
    if (configurationCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) configuration_);
    }
    if (dryRun_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, dryRun_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.bigquery.logging.v1.JobConfiguration)) {
      return super.equals(obj);
    }
    com.google.cloud.bigquery.logging.v1.JobConfiguration other = (com.google.cloud.bigquery.logging.v1.JobConfiguration) obj;

    boolean result = true;
    result = result && (getDryRun()
        == other.getDryRun());
    result = result && getConfigurationCase().equals(
        other.getConfigurationCase());
    if (!result) return false;
    switch (configurationCase_) {
      case 5:
        result = result && getQuery()
            .equals(other.getQuery());
        break;
      case 6:
        result = result && getLoad()
            .equals(other.getLoad());
        break;
      case 7:
        result = result && getExtract()
            .equals(other.getExtract());
        break;
      case 8:
        result = result && getTableCopy()
            .equals(other.getTableCopy());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + DRY_RUN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDryRun());
    switch (configurationCase_) {
      case 5:
        hash = (37 * hash) + QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getQuery().hashCode();
        break;
      case 6:
        hash = (37 * hash) + LOAD_FIELD_NUMBER;
        hash = (53 * hash) + getLoad().hashCode();
        break;
      case 7:
        hash = (37 * hash) + EXTRACT_FIELD_NUMBER;
        hash = (53 * hash) + getExtract().hashCode();
        break;
      case 8:
        hash = (37 * hash) + TABLE_COPY_FIELD_NUMBER;
        hash = (53 * hash) + getTableCopy().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.bigquery.logging.v1.JobConfiguration parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.logging.v1.JobConfiguration parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.JobConfiguration parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.logging.v1.JobConfiguration parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.JobConfiguration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.JobConfiguration parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.JobConfiguration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.JobConfiguration parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.JobConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.JobConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.bigquery.logging.v1.JobConfiguration prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Job configuration information.
   * See the [Jobs](/bigquery/docs/reference/v2/jobs) API resource
   * for more details on individual fields.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.logging.v1.JobConfiguration}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.logging.v1.JobConfiguration)
      com.google.cloud.bigquery.logging.v1.JobConfigurationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.logging.v1.JobConfiguration.class, com.google.cloud.bigquery.logging.v1.JobConfiguration.Builder.class);
    }

    // Construct using com.google.cloud.bigquery.logging.v1.JobConfiguration.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      dryRun_ = false;

      configurationCase_ = 0;
      configuration_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_JobConfiguration_descriptor;
    }

    public com.google.cloud.bigquery.logging.v1.JobConfiguration getDefaultInstanceForType() {
      return com.google.cloud.bigquery.logging.v1.JobConfiguration.getDefaultInstance();
    }

    public com.google.cloud.bigquery.logging.v1.JobConfiguration build() {
      com.google.cloud.bigquery.logging.v1.JobConfiguration result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.bigquery.logging.v1.JobConfiguration buildPartial() {
      com.google.cloud.bigquery.logging.v1.JobConfiguration result = new com.google.cloud.bigquery.logging.v1.JobConfiguration(this);
      if (configurationCase_ == 5) {
        if (queryBuilder_ == null) {
          result.configuration_ = configuration_;
        } else {
          result.configuration_ = queryBuilder_.build();
        }
      }
      if (configurationCase_ == 6) {
        if (loadBuilder_ == null) {
          result.configuration_ = configuration_;
        } else {
          result.configuration_ = loadBuilder_.build();
        }
      }
      if (configurationCase_ == 7) {
        if (extractBuilder_ == null) {
          result.configuration_ = configuration_;
        } else {
          result.configuration_ = extractBuilder_.build();
        }
      }
      if (configurationCase_ == 8) {
        if (tableCopyBuilder_ == null) {
          result.configuration_ = configuration_;
        } else {
          result.configuration_ = tableCopyBuilder_.build();
        }
      }
      result.dryRun_ = dryRun_;
      result.configurationCase_ = configurationCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.bigquery.logging.v1.JobConfiguration) {
        return mergeFrom((com.google.cloud.bigquery.logging.v1.JobConfiguration)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.bigquery.logging.v1.JobConfiguration other) {
      if (other == com.google.cloud.bigquery.logging.v1.JobConfiguration.getDefaultInstance()) return this;
      if (other.getDryRun() != false) {
        setDryRun(other.getDryRun());
      }
      switch (other.getConfigurationCase()) {
        case QUERY: {
          mergeQuery(other.getQuery());
          break;
        }
        case LOAD: {
          mergeLoad(other.getLoad());
          break;
        }
        case EXTRACT: {
          mergeExtract(other.getExtract());
          break;
        }
        case TABLE_COPY: {
          mergeTableCopy(other.getTableCopy());
          break;
        }
        case CONFIGURATION_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.bigquery.logging.v1.JobConfiguration parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.bigquery.logging.v1.JobConfiguration) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int configurationCase_ = 0;
    private java.lang.Object configuration_;
    public ConfigurationCase
        getConfigurationCase() {
      return ConfigurationCase.forNumber(
          configurationCase_);
    }

    public Builder clearConfiguration() {
      configurationCase_ = 0;
      configuration_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Query, com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.QueryOrBuilder> queryBuilder_;
    /**
     * <pre>
     * Query job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.Query getQuery() {
      if (queryBuilder_ == null) {
        if (configurationCase_ == 5) {
          return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) configuration_;
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.getDefaultInstance();
      } else {
        if (configurationCase_ == 5) {
          return queryBuilder_.getMessage();
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Query job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;</code>
     */
    public Builder setQuery(com.google.cloud.bigquery.logging.v1.JobConfiguration.Query value) {
      if (queryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        configuration_ = value;
        onChanged();
      } else {
        queryBuilder_.setMessage(value);
      }
      configurationCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Query job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;</code>
     */
    public Builder setQuery(
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.Builder builderForValue) {
      if (queryBuilder_ == null) {
        configuration_ = builderForValue.build();
        onChanged();
      } else {
        queryBuilder_.setMessage(builderForValue.build());
      }
      configurationCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Query job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;</code>
     */
    public Builder mergeQuery(com.google.cloud.bigquery.logging.v1.JobConfiguration.Query value) {
      if (queryBuilder_ == null) {
        if (configurationCase_ == 5 &&
            configuration_ != com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.getDefaultInstance()) {
          configuration_ = com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.newBuilder((com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) configuration_)
              .mergeFrom(value).buildPartial();
        } else {
          configuration_ = value;
        }
        onChanged();
      } else {
        if (configurationCase_ == 5) {
          queryBuilder_.mergeFrom(value);
        }
        queryBuilder_.setMessage(value);
      }
      configurationCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Query job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;</code>
     */
    public Builder clearQuery() {
      if (queryBuilder_ == null) {
        if (configurationCase_ == 5) {
          configurationCase_ = 0;
          configuration_ = null;
          onChanged();
        }
      } else {
        if (configurationCase_ == 5) {
          configurationCase_ = 0;
          configuration_ = null;
        }
        queryBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Query job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.Builder getQueryBuilder() {
      return getQueryFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Query job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.QueryOrBuilder getQueryOrBuilder() {
      if ((configurationCase_ == 5) && (queryBuilder_ != null)) {
        return queryBuilder_.getMessageOrBuilder();
      } else {
        if (configurationCase_ == 5) {
          return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) configuration_;
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Query job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Query query = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Query, com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.QueryOrBuilder> 
        getQueryFieldBuilder() {
      if (queryBuilder_ == null) {
        if (!(configurationCase_ == 5)) {
          configuration_ = com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.getDefaultInstance();
        }
        queryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.JobConfiguration.Query, com.google.cloud.bigquery.logging.v1.JobConfiguration.Query.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.QueryOrBuilder>(
                (com.google.cloud.bigquery.logging.v1.JobConfiguration.Query) configuration_,
                getParentForChildren(),
                isClean());
        configuration_ = null;
      }
      configurationCase_ = 5;
      onChanged();;
      return queryBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Load, com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.LoadOrBuilder> loadBuilder_;
    /**
     * <pre>
     * Load job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.Load getLoad() {
      if (loadBuilder_ == null) {
        if (configurationCase_ == 6) {
          return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) configuration_;
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.getDefaultInstance();
      } else {
        if (configurationCase_ == 6) {
          return loadBuilder_.getMessage();
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Load job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;</code>
     */
    public Builder setLoad(com.google.cloud.bigquery.logging.v1.JobConfiguration.Load value) {
      if (loadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        configuration_ = value;
        onChanged();
      } else {
        loadBuilder_.setMessage(value);
      }
      configurationCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Load job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;</code>
     */
    public Builder setLoad(
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.Builder builderForValue) {
      if (loadBuilder_ == null) {
        configuration_ = builderForValue.build();
        onChanged();
      } else {
        loadBuilder_.setMessage(builderForValue.build());
      }
      configurationCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Load job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;</code>
     */
    public Builder mergeLoad(com.google.cloud.bigquery.logging.v1.JobConfiguration.Load value) {
      if (loadBuilder_ == null) {
        if (configurationCase_ == 6 &&
            configuration_ != com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.getDefaultInstance()) {
          configuration_ = com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.newBuilder((com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) configuration_)
              .mergeFrom(value).buildPartial();
        } else {
          configuration_ = value;
        }
        onChanged();
      } else {
        if (configurationCase_ == 6) {
          loadBuilder_.mergeFrom(value);
        }
        loadBuilder_.setMessage(value);
      }
      configurationCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Load job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;</code>
     */
    public Builder clearLoad() {
      if (loadBuilder_ == null) {
        if (configurationCase_ == 6) {
          configurationCase_ = 0;
          configuration_ = null;
          onChanged();
        }
      } else {
        if (configurationCase_ == 6) {
          configurationCase_ = 0;
          configuration_ = null;
        }
        loadBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Load job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.Builder getLoadBuilder() {
      return getLoadFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Load job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.LoadOrBuilder getLoadOrBuilder() {
      if ((configurationCase_ == 6) && (loadBuilder_ != null)) {
        return loadBuilder_.getMessageOrBuilder();
      } else {
        if (configurationCase_ == 6) {
          return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) configuration_;
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Load job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Load load = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Load, com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.LoadOrBuilder> 
        getLoadFieldBuilder() {
      if (loadBuilder_ == null) {
        if (!(configurationCase_ == 6)) {
          configuration_ = com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.getDefaultInstance();
        }
        loadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.JobConfiguration.Load, com.google.cloud.bigquery.logging.v1.JobConfiguration.Load.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.LoadOrBuilder>(
                (com.google.cloud.bigquery.logging.v1.JobConfiguration.Load) configuration_,
                getParentForChildren(),
                isClean());
        configuration_ = null;
      }
      configurationCase_ = 6;
      onChanged();;
      return loadBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract, com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.ExtractOrBuilder> extractBuilder_;
    /**
     * <pre>
     * Extract job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract getExtract() {
      if (extractBuilder_ == null) {
        if (configurationCase_ == 7) {
          return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) configuration_;
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.getDefaultInstance();
      } else {
        if (configurationCase_ == 7) {
          return extractBuilder_.getMessage();
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Extract job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;</code>
     */
    public Builder setExtract(com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract value) {
      if (extractBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        configuration_ = value;
        onChanged();
      } else {
        extractBuilder_.setMessage(value);
      }
      configurationCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Extract job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;</code>
     */
    public Builder setExtract(
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.Builder builderForValue) {
      if (extractBuilder_ == null) {
        configuration_ = builderForValue.build();
        onChanged();
      } else {
        extractBuilder_.setMessage(builderForValue.build());
      }
      configurationCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Extract job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;</code>
     */
    public Builder mergeExtract(com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract value) {
      if (extractBuilder_ == null) {
        if (configurationCase_ == 7 &&
            configuration_ != com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.getDefaultInstance()) {
          configuration_ = com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.newBuilder((com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) configuration_)
              .mergeFrom(value).buildPartial();
        } else {
          configuration_ = value;
        }
        onChanged();
      } else {
        if (configurationCase_ == 7) {
          extractBuilder_.mergeFrom(value);
        }
        extractBuilder_.setMessage(value);
      }
      configurationCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Extract job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;</code>
     */
    public Builder clearExtract() {
      if (extractBuilder_ == null) {
        if (configurationCase_ == 7) {
          configurationCase_ = 0;
          configuration_ = null;
          onChanged();
        }
      } else {
        if (configurationCase_ == 7) {
          configurationCase_ = 0;
          configuration_ = null;
        }
        extractBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Extract job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.Builder getExtractBuilder() {
      return getExtractFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Extract job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.ExtractOrBuilder getExtractOrBuilder() {
      if ((configurationCase_ == 7) && (extractBuilder_ != null)) {
        return extractBuilder_.getMessageOrBuilder();
      } else {
        if (configurationCase_ == 7) {
          return (com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) configuration_;
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Extract job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.Extract extract = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract, com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.ExtractOrBuilder> 
        getExtractFieldBuilder() {
      if (extractBuilder_ == null) {
        if (!(configurationCase_ == 7)) {
          configuration_ = com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.getDefaultInstance();
        }
        extractBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract, com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.ExtractOrBuilder>(
                (com.google.cloud.bigquery.logging.v1.JobConfiguration.Extract) configuration_,
                getParentForChildren(),
                isClean());
        configuration_ = null;
      }
      configurationCase_ = 7;
      onChanged();;
      return extractBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy, com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopyOrBuilder> tableCopyBuilder_;
    /**
     * <pre>
     * TableCopy job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy getTableCopy() {
      if (tableCopyBuilder_ == null) {
        if (configurationCase_ == 8) {
          return (com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) configuration_;
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.getDefaultInstance();
      } else {
        if (configurationCase_ == 8) {
          return tableCopyBuilder_.getMessage();
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * TableCopy job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;</code>
     */
    public Builder setTableCopy(com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy value) {
      if (tableCopyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        configuration_ = value;
        onChanged();
      } else {
        tableCopyBuilder_.setMessage(value);
      }
      configurationCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * TableCopy job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;</code>
     */
    public Builder setTableCopy(
        com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.Builder builderForValue) {
      if (tableCopyBuilder_ == null) {
        configuration_ = builderForValue.build();
        onChanged();
      } else {
        tableCopyBuilder_.setMessage(builderForValue.build());
      }
      configurationCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * TableCopy job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;</code>
     */
    public Builder mergeTableCopy(com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy value) {
      if (tableCopyBuilder_ == null) {
        if (configurationCase_ == 8 &&
            configuration_ != com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.getDefaultInstance()) {
          configuration_ = com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.newBuilder((com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) configuration_)
              .mergeFrom(value).buildPartial();
        } else {
          configuration_ = value;
        }
        onChanged();
      } else {
        if (configurationCase_ == 8) {
          tableCopyBuilder_.mergeFrom(value);
        }
        tableCopyBuilder_.setMessage(value);
      }
      configurationCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * TableCopy job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;</code>
     */
    public Builder clearTableCopy() {
      if (tableCopyBuilder_ == null) {
        if (configurationCase_ == 8) {
          configurationCase_ = 0;
          configuration_ = null;
          onChanged();
        }
      } else {
        if (configurationCase_ == 8) {
          configurationCase_ = 0;
          configuration_ = null;
        }
        tableCopyBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * TableCopy job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.Builder getTableCopyBuilder() {
      return getTableCopyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * TableCopy job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;</code>
     */
    public com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopyOrBuilder getTableCopyOrBuilder() {
      if ((configurationCase_ == 8) && (tableCopyBuilder_ != null)) {
        return tableCopyBuilder_.getMessageOrBuilder();
      } else {
        if (configurationCase_ == 8) {
          return (com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) configuration_;
        }
        return com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * TableCopy job information.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy table_copy = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy, com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopyOrBuilder> 
        getTableCopyFieldBuilder() {
      if (tableCopyBuilder_ == null) {
        if (!(configurationCase_ == 8)) {
          configuration_ = com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.getDefaultInstance();
        }
        tableCopyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy, com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy.Builder, com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopyOrBuilder>(
                (com.google.cloud.bigquery.logging.v1.JobConfiguration.TableCopy) configuration_,
                getParentForChildren(),
                isClean());
        configuration_ = null;
      }
      configurationCase_ = 8;
      onChanged();;
      return tableCopyBuilder_;
    }

    private boolean dryRun_ ;
    /**
     * <pre>
     * If true, don't actually run the job. Just check that it would run.
     * </pre>
     *
     * <code>optional bool dry_run = 9;</code>
     */
    public boolean getDryRun() {
      return dryRun_;
    }
    /**
     * <pre>
     * If true, don't actually run the job. Just check that it would run.
     * </pre>
     *
     * <code>optional bool dry_run = 9;</code>
     */
    public Builder setDryRun(boolean value) {
      
      dryRun_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, don't actually run the job. Just check that it would run.
     * </pre>
     *
     * <code>optional bool dry_run = 9;</code>
     */
    public Builder clearDryRun() {
      
      dryRun_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.logging.v1.JobConfiguration)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.logging.v1.JobConfiguration)
  private static final com.google.cloud.bigquery.logging.v1.JobConfiguration DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.bigquery.logging.v1.JobConfiguration();
  }

  public static com.google.cloud.bigquery.logging.v1.JobConfiguration getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<JobConfiguration>
      PARSER = new com.google.protobuf.AbstractParser<JobConfiguration>() {
    public JobConfiguration parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new JobConfiguration(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<JobConfiguration> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<JobConfiguration> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.bigquery.logging.v1.JobConfiguration getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

