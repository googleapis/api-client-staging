// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/logging/v1/audit_data.proto

package com.google.cloud.bigquery.logging.v1;

/**
 * <pre>
 * BigQuery dataset information.
 * See the [Dataset](/bigquery/docs/reference/v2/datasets) API resource
 * for more details on individual fields.
 * </pre>
 *
 * Protobuf type {@code google.cloud.bigquery.logging.v1.Dataset}
 */
public  final class Dataset extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.bigquery.logging.v1.Dataset)
    DatasetOrBuilder {
  // Use Dataset.newBuilder() to construct.
  private Dataset(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Dataset() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Dataset(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.cloud.bigquery.logging.v1.DatasetName.Builder subBuilder = null;
            if (datasetName_ != null) {
              subBuilder = datasetName_.toBuilder();
            }
            datasetName_ = input.readMessage(com.google.cloud.bigquery.logging.v1.DatasetName.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(datasetName_);
              datasetName_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.cloud.bigquery.logging.v1.DatasetInfo.Builder subBuilder = null;
            if (info_ != null) {
              subBuilder = info_.toBuilder();
            }
            info_ = input.readMessage(com.google.cloud.bigquery.logging.v1.DatasetInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(info_);
              info_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (createTime_ != null) {
              subBuilder = createTime_.toBuilder();
            }
            createTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(createTime_);
              createTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (updateTime_ != null) {
              subBuilder = updateTime_.toBuilder();
            }
            updateTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(updateTime_);
              updateTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            com.google.cloud.bigquery.logging.v1.BigQueryAcl.Builder subBuilder = null;
            if (acl_ != null) {
              subBuilder = acl_.toBuilder();
            }
            acl_ = input.readMessage(com.google.cloud.bigquery.logging.v1.BigQueryAcl.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(acl_);
              acl_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (defaultTableExpireDuration_ != null) {
              subBuilder = defaultTableExpireDuration_.toBuilder();
            }
            defaultTableExpireDuration_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(defaultTableExpireDuration_);
              defaultTableExpireDuration_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_Dataset_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_Dataset_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.bigquery.logging.v1.Dataset.class, com.google.cloud.bigquery.logging.v1.Dataset.Builder.class);
  }

  public static final int DATASET_NAME_FIELD_NUMBER = 1;
  private com.google.cloud.bigquery.logging.v1.DatasetName datasetName_;
  /**
   * <pre>
   * The name of the dataset.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
   */
  public boolean hasDatasetName() {
    return datasetName_ != null;
  }
  /**
   * <pre>
   * The name of the dataset.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
   */
  public com.google.cloud.bigquery.logging.v1.DatasetName getDatasetName() {
    return datasetName_ == null ? com.google.cloud.bigquery.logging.v1.DatasetName.getDefaultInstance() : datasetName_;
  }
  /**
   * <pre>
   * The name of the dataset.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
   */
  public com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder getDatasetNameOrBuilder() {
    return getDatasetName();
  }

  public static final int INFO_FIELD_NUMBER = 2;
  private com.google.cloud.bigquery.logging.v1.DatasetInfo info_;
  /**
   * <pre>
   * User-provided metadata for the dataset.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
   */
  public boolean hasInfo() {
    return info_ != null;
  }
  /**
   * <pre>
   * User-provided metadata for the dataset.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
   */
  public com.google.cloud.bigquery.logging.v1.DatasetInfo getInfo() {
    return info_ == null ? com.google.cloud.bigquery.logging.v1.DatasetInfo.getDefaultInstance() : info_;
  }
  /**
   * <pre>
   * User-provided metadata for the dataset.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
   */
  public com.google.cloud.bigquery.logging.v1.DatasetInfoOrBuilder getInfoOrBuilder() {
    return getInfo();
  }

  public static final int CREATE_TIME_FIELD_NUMBER = 4;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * The time the dataset was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
   */
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <pre>
   * The time the dataset was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
   */
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * The time the dataset was created.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
   */
  public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
    return getCreateTime();
  }

  public static final int UPDATE_TIME_FIELD_NUMBER = 5;
  private com.google.protobuf.Timestamp updateTime_;
  /**
   * <pre>
   * The time the dataset was last modified.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
   */
  public boolean hasUpdateTime() {
    return updateTime_ != null;
  }
  /**
   * <pre>
   * The time the dataset was last modified.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
   */
  public com.google.protobuf.Timestamp getUpdateTime() {
    return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
  }
  /**
   * <pre>
   * The time the dataset was last modified.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
   */
  public com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder() {
    return getUpdateTime();
  }

  public static final int ACL_FIELD_NUMBER = 6;
  private com.google.cloud.bigquery.logging.v1.BigQueryAcl acl_;
  /**
   * <pre>
   * The access control list for the dataset.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
   */
  public boolean hasAcl() {
    return acl_ != null;
  }
  /**
   * <pre>
   * The access control list for the dataset.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
   */
  public com.google.cloud.bigquery.logging.v1.BigQueryAcl getAcl() {
    return acl_ == null ? com.google.cloud.bigquery.logging.v1.BigQueryAcl.getDefaultInstance() : acl_;
  }
  /**
   * <pre>
   * The access control list for the dataset.
   * </pre>
   *
   * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
   */
  public com.google.cloud.bigquery.logging.v1.BigQueryAclOrBuilder getAclOrBuilder() {
    return getAcl();
  }

  public static final int DEFAULT_TABLE_EXPIRE_DURATION_FIELD_NUMBER = 8;
  private com.google.protobuf.Duration defaultTableExpireDuration_;
  /**
   * <pre>
   * If this field is present, each table that does not specify an
   * expiration time is assigned an expiration time by adding this
   * duration to the table's `createTime`.  If this field is empty,
   * there is no default table expiration time.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
   */
  public boolean hasDefaultTableExpireDuration() {
    return defaultTableExpireDuration_ != null;
  }
  /**
   * <pre>
   * If this field is present, each table that does not specify an
   * expiration time is assigned an expiration time by adding this
   * duration to the table's `createTime`.  If this field is empty,
   * there is no default table expiration time.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
   */
  public com.google.protobuf.Duration getDefaultTableExpireDuration() {
    return defaultTableExpireDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : defaultTableExpireDuration_;
  }
  /**
   * <pre>
   * If this field is present, each table that does not specify an
   * expiration time is assigned an expiration time by adding this
   * duration to the table's `createTime`.  If this field is empty,
   * there is no default table expiration time.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
   */
  public com.google.protobuf.DurationOrBuilder getDefaultTableExpireDurationOrBuilder() {
    return getDefaultTableExpireDuration();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (datasetName_ != null) {
      output.writeMessage(1, getDatasetName());
    }
    if (info_ != null) {
      output.writeMessage(2, getInfo());
    }
    if (createTime_ != null) {
      output.writeMessage(4, getCreateTime());
    }
    if (updateTime_ != null) {
      output.writeMessage(5, getUpdateTime());
    }
    if (acl_ != null) {
      output.writeMessage(6, getAcl());
    }
    if (defaultTableExpireDuration_ != null) {
      output.writeMessage(8, getDefaultTableExpireDuration());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (datasetName_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDatasetName());
    }
    if (info_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getInfo());
    }
    if (createTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getCreateTime());
    }
    if (updateTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getUpdateTime());
    }
    if (acl_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getAcl());
    }
    if (defaultTableExpireDuration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getDefaultTableExpireDuration());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.bigquery.logging.v1.Dataset)) {
      return super.equals(obj);
    }
    com.google.cloud.bigquery.logging.v1.Dataset other = (com.google.cloud.bigquery.logging.v1.Dataset) obj;

    boolean result = true;
    result = result && (hasDatasetName() == other.hasDatasetName());
    if (hasDatasetName()) {
      result = result && getDatasetName()
          .equals(other.getDatasetName());
    }
    result = result && (hasInfo() == other.hasInfo());
    if (hasInfo()) {
      result = result && getInfo()
          .equals(other.getInfo());
    }
    result = result && (hasCreateTime() == other.hasCreateTime());
    if (hasCreateTime()) {
      result = result && getCreateTime()
          .equals(other.getCreateTime());
    }
    result = result && (hasUpdateTime() == other.hasUpdateTime());
    if (hasUpdateTime()) {
      result = result && getUpdateTime()
          .equals(other.getUpdateTime());
    }
    result = result && (hasAcl() == other.hasAcl());
    if (hasAcl()) {
      result = result && getAcl()
          .equals(other.getAcl());
    }
    result = result && (hasDefaultTableExpireDuration() == other.hasDefaultTableExpireDuration());
    if (hasDefaultTableExpireDuration()) {
      result = result && getDefaultTableExpireDuration()
          .equals(other.getDefaultTableExpireDuration());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasDatasetName()) {
      hash = (37 * hash) + DATASET_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDatasetName().hashCode();
    }
    if (hasInfo()) {
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + getInfo().hashCode();
    }
    if (hasCreateTime()) {
      hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCreateTime().hashCode();
    }
    if (hasUpdateTime()) {
      hash = (37 * hash) + UPDATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateTime().hashCode();
    }
    if (hasAcl()) {
      hash = (37 * hash) + ACL_FIELD_NUMBER;
      hash = (53 * hash) + getAcl().hashCode();
    }
    if (hasDefaultTableExpireDuration()) {
      hash = (37 * hash) + DEFAULT_TABLE_EXPIRE_DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultTableExpireDuration().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.bigquery.logging.v1.Dataset parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.logging.v1.Dataset parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.Dataset parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.bigquery.logging.v1.Dataset parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.Dataset parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.Dataset parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.Dataset parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.Dataset parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.bigquery.logging.v1.Dataset parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.bigquery.logging.v1.Dataset parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.bigquery.logging.v1.Dataset prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * BigQuery dataset information.
   * See the [Dataset](/bigquery/docs/reference/v2/datasets) API resource
   * for more details on individual fields.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.logging.v1.Dataset}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.logging.v1.Dataset)
      com.google.cloud.bigquery.logging.v1.DatasetOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_Dataset_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_Dataset_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.logging.v1.Dataset.class, com.google.cloud.bigquery.logging.v1.Dataset.Builder.class);
    }

    // Construct using com.google.cloud.bigquery.logging.v1.Dataset.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (datasetNameBuilder_ == null) {
        datasetName_ = null;
      } else {
        datasetName_ = null;
        datasetNameBuilder_ = null;
      }
      if (infoBuilder_ == null) {
        info_ = null;
      } else {
        info_ = null;
        infoBuilder_ = null;
      }
      if (createTimeBuilder_ == null) {
        createTime_ = null;
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }
      if (updateTimeBuilder_ == null) {
        updateTime_ = null;
      } else {
        updateTime_ = null;
        updateTimeBuilder_ = null;
      }
      if (aclBuilder_ == null) {
        acl_ = null;
      } else {
        acl_ = null;
        aclBuilder_ = null;
      }
      if (defaultTableExpireDurationBuilder_ == null) {
        defaultTableExpireDuration_ = null;
      } else {
        defaultTableExpireDuration_ = null;
        defaultTableExpireDurationBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.bigquery.logging.v1.AuditDataProto.internal_static_google_cloud_bigquery_logging_v1_Dataset_descriptor;
    }

    public com.google.cloud.bigquery.logging.v1.Dataset getDefaultInstanceForType() {
      return com.google.cloud.bigquery.logging.v1.Dataset.getDefaultInstance();
    }

    public com.google.cloud.bigquery.logging.v1.Dataset build() {
      com.google.cloud.bigquery.logging.v1.Dataset result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.bigquery.logging.v1.Dataset buildPartial() {
      com.google.cloud.bigquery.logging.v1.Dataset result = new com.google.cloud.bigquery.logging.v1.Dataset(this);
      if (datasetNameBuilder_ == null) {
        result.datasetName_ = datasetName_;
      } else {
        result.datasetName_ = datasetNameBuilder_.build();
      }
      if (infoBuilder_ == null) {
        result.info_ = info_;
      } else {
        result.info_ = infoBuilder_.build();
      }
      if (createTimeBuilder_ == null) {
        result.createTime_ = createTime_;
      } else {
        result.createTime_ = createTimeBuilder_.build();
      }
      if (updateTimeBuilder_ == null) {
        result.updateTime_ = updateTime_;
      } else {
        result.updateTime_ = updateTimeBuilder_.build();
      }
      if (aclBuilder_ == null) {
        result.acl_ = acl_;
      } else {
        result.acl_ = aclBuilder_.build();
      }
      if (defaultTableExpireDurationBuilder_ == null) {
        result.defaultTableExpireDuration_ = defaultTableExpireDuration_;
      } else {
        result.defaultTableExpireDuration_ = defaultTableExpireDurationBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.bigquery.logging.v1.Dataset) {
        return mergeFrom((com.google.cloud.bigquery.logging.v1.Dataset)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.bigquery.logging.v1.Dataset other) {
      if (other == com.google.cloud.bigquery.logging.v1.Dataset.getDefaultInstance()) return this;
      if (other.hasDatasetName()) {
        mergeDatasetName(other.getDatasetName());
      }
      if (other.hasInfo()) {
        mergeInfo(other.getInfo());
      }
      if (other.hasCreateTime()) {
        mergeCreateTime(other.getCreateTime());
      }
      if (other.hasUpdateTime()) {
        mergeUpdateTime(other.getUpdateTime());
      }
      if (other.hasAcl()) {
        mergeAcl(other.getAcl());
      }
      if (other.hasDefaultTableExpireDuration()) {
        mergeDefaultTableExpireDuration(other.getDefaultTableExpireDuration());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.bigquery.logging.v1.Dataset parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.bigquery.logging.v1.Dataset) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.cloud.bigquery.logging.v1.DatasetName datasetName_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.DatasetName, com.google.cloud.bigquery.logging.v1.DatasetName.Builder, com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder> datasetNameBuilder_;
    /**
     * <pre>
     * The name of the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
     */
    public boolean hasDatasetName() {
      return datasetNameBuilder_ != null || datasetName_ != null;
    }
    /**
     * <pre>
     * The name of the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
     */
    public com.google.cloud.bigquery.logging.v1.DatasetName getDatasetName() {
      if (datasetNameBuilder_ == null) {
        return datasetName_ == null ? com.google.cloud.bigquery.logging.v1.DatasetName.getDefaultInstance() : datasetName_;
      } else {
        return datasetNameBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The name of the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
     */
    public Builder setDatasetName(com.google.cloud.bigquery.logging.v1.DatasetName value) {
      if (datasetNameBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        datasetName_ = value;
        onChanged();
      } else {
        datasetNameBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The name of the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
     */
    public Builder setDatasetName(
        com.google.cloud.bigquery.logging.v1.DatasetName.Builder builderForValue) {
      if (datasetNameBuilder_ == null) {
        datasetName_ = builderForValue.build();
        onChanged();
      } else {
        datasetNameBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The name of the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
     */
    public Builder mergeDatasetName(com.google.cloud.bigquery.logging.v1.DatasetName value) {
      if (datasetNameBuilder_ == null) {
        if (datasetName_ != null) {
          datasetName_ =
            com.google.cloud.bigquery.logging.v1.DatasetName.newBuilder(datasetName_).mergeFrom(value).buildPartial();
        } else {
          datasetName_ = value;
        }
        onChanged();
      } else {
        datasetNameBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The name of the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
     */
    public Builder clearDatasetName() {
      if (datasetNameBuilder_ == null) {
        datasetName_ = null;
        onChanged();
      } else {
        datasetName_ = null;
        datasetNameBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The name of the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
     */
    public com.google.cloud.bigquery.logging.v1.DatasetName.Builder getDatasetNameBuilder() {
      
      onChanged();
      return getDatasetNameFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The name of the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
     */
    public com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder getDatasetNameOrBuilder() {
      if (datasetNameBuilder_ != null) {
        return datasetNameBuilder_.getMessageOrBuilder();
      } else {
        return datasetName_ == null ?
            com.google.cloud.bigquery.logging.v1.DatasetName.getDefaultInstance() : datasetName_;
      }
    }
    /**
     * <pre>
     * The name of the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetName dataset_name = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.DatasetName, com.google.cloud.bigquery.logging.v1.DatasetName.Builder, com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder> 
        getDatasetNameFieldBuilder() {
      if (datasetNameBuilder_ == null) {
        datasetNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.DatasetName, com.google.cloud.bigquery.logging.v1.DatasetName.Builder, com.google.cloud.bigquery.logging.v1.DatasetNameOrBuilder>(
                getDatasetName(),
                getParentForChildren(),
                isClean());
        datasetName_ = null;
      }
      return datasetNameBuilder_;
    }

    private com.google.cloud.bigquery.logging.v1.DatasetInfo info_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.DatasetInfo, com.google.cloud.bigquery.logging.v1.DatasetInfo.Builder, com.google.cloud.bigquery.logging.v1.DatasetInfoOrBuilder> infoBuilder_;
    /**
     * <pre>
     * User-provided metadata for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
     */
    public boolean hasInfo() {
      return infoBuilder_ != null || info_ != null;
    }
    /**
     * <pre>
     * User-provided metadata for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.DatasetInfo getInfo() {
      if (infoBuilder_ == null) {
        return info_ == null ? com.google.cloud.bigquery.logging.v1.DatasetInfo.getDefaultInstance() : info_;
      } else {
        return infoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * User-provided metadata for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
     */
    public Builder setInfo(com.google.cloud.bigquery.logging.v1.DatasetInfo value) {
      if (infoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        info_ = value;
        onChanged();
      } else {
        infoBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * User-provided metadata for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
     */
    public Builder setInfo(
        com.google.cloud.bigquery.logging.v1.DatasetInfo.Builder builderForValue) {
      if (infoBuilder_ == null) {
        info_ = builderForValue.build();
        onChanged();
      } else {
        infoBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * User-provided metadata for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
     */
    public Builder mergeInfo(com.google.cloud.bigquery.logging.v1.DatasetInfo value) {
      if (infoBuilder_ == null) {
        if (info_ != null) {
          info_ =
            com.google.cloud.bigquery.logging.v1.DatasetInfo.newBuilder(info_).mergeFrom(value).buildPartial();
        } else {
          info_ = value;
        }
        onChanged();
      } else {
        infoBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * User-provided metadata for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
     */
    public Builder clearInfo() {
      if (infoBuilder_ == null) {
        info_ = null;
        onChanged();
      } else {
        info_ = null;
        infoBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * User-provided metadata for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.DatasetInfo.Builder getInfoBuilder() {
      
      onChanged();
      return getInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * User-provided metadata for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
     */
    public com.google.cloud.bigquery.logging.v1.DatasetInfoOrBuilder getInfoOrBuilder() {
      if (infoBuilder_ != null) {
        return infoBuilder_.getMessageOrBuilder();
      } else {
        return info_ == null ?
            com.google.cloud.bigquery.logging.v1.DatasetInfo.getDefaultInstance() : info_;
      }
    }
    /**
     * <pre>
     * User-provided metadata for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.DatasetInfo info = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.DatasetInfo, com.google.cloud.bigquery.logging.v1.DatasetInfo.Builder, com.google.cloud.bigquery.logging.v1.DatasetInfoOrBuilder> 
        getInfoFieldBuilder() {
      if (infoBuilder_ == null) {
        infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.DatasetInfo, com.google.cloud.bigquery.logging.v1.DatasetInfo.Builder, com.google.cloud.bigquery.logging.v1.DatasetInfoOrBuilder>(
                getInfo(),
                getParentForChildren(),
                isClean());
        info_ = null;
      }
      return infoBuilder_;
    }

    private com.google.protobuf.Timestamp createTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createTimeBuilder_;
    /**
     * <pre>
     * The time the dataset was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     */
    public boolean hasCreateTime() {
      return createTimeBuilder_ != null || createTime_ != null;
    }
    /**
     * <pre>
     * The time the dataset was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     */
    public com.google.protobuf.Timestamp getCreateTime() {
      if (createTimeBuilder_ == null) {
        return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      } else {
        return createTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The time the dataset was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createTime_ = value;
        onChanged();
      } else {
        createTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time the dataset was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (createTimeBuilder_ == null) {
        createTime_ = builderForValue.build();
        onChanged();
      } else {
        createTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The time the dataset was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (createTime_ != null) {
          createTime_ =
            com.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
        } else {
          createTime_ = value;
        }
        onChanged();
      } else {
        createTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time the dataset was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     */
    public Builder clearCreateTime() {
      if (createTimeBuilder_ == null) {
        createTime_ = null;
        onChanged();
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The time the dataset was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     */
    public com.google.protobuf.Timestamp.Builder getCreateTimeBuilder() {
      
      onChanged();
      return getCreateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The time the dataset was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
      if (createTimeBuilder_ != null) {
        return createTimeBuilder_.getMessageOrBuilder();
      } else {
        return createTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      }
    }
    /**
     * <pre>
     * The time the dataset was created.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getCreateTimeFieldBuilder() {
      if (createTimeBuilder_ == null) {
        createTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getCreateTime(),
                getParentForChildren(),
                isClean());
        createTime_ = null;
      }
      return createTimeBuilder_;
    }

    private com.google.protobuf.Timestamp updateTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> updateTimeBuilder_;
    /**
     * <pre>
     * The time the dataset was last modified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
     */
    public boolean hasUpdateTime() {
      return updateTimeBuilder_ != null || updateTime_ != null;
    }
    /**
     * <pre>
     * The time the dataset was last modified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
     */
    public com.google.protobuf.Timestamp getUpdateTime() {
      if (updateTimeBuilder_ == null) {
        return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
      } else {
        return updateTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The time the dataset was last modified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
     */
    public Builder setUpdateTime(com.google.protobuf.Timestamp value) {
      if (updateTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        updateTime_ = value;
        onChanged();
      } else {
        updateTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time the dataset was last modified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
     */
    public Builder setUpdateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (updateTimeBuilder_ == null) {
        updateTime_ = builderForValue.build();
        onChanged();
      } else {
        updateTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The time the dataset was last modified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
     */
    public Builder mergeUpdateTime(com.google.protobuf.Timestamp value) {
      if (updateTimeBuilder_ == null) {
        if (updateTime_ != null) {
          updateTime_ =
            com.google.protobuf.Timestamp.newBuilder(updateTime_).mergeFrom(value).buildPartial();
        } else {
          updateTime_ = value;
        }
        onChanged();
      } else {
        updateTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time the dataset was last modified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
     */
    public Builder clearUpdateTime() {
      if (updateTimeBuilder_ == null) {
        updateTime_ = null;
        onChanged();
      } else {
        updateTime_ = null;
        updateTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The time the dataset was last modified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
     */
    public com.google.protobuf.Timestamp.Builder getUpdateTimeBuilder() {
      
      onChanged();
      return getUpdateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The time the dataset was last modified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder() {
      if (updateTimeBuilder_ != null) {
        return updateTimeBuilder_.getMessageOrBuilder();
      } else {
        return updateTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
      }
    }
    /**
     * <pre>
     * The time the dataset was last modified.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp update_time = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getUpdateTimeFieldBuilder() {
      if (updateTimeBuilder_ == null) {
        updateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getUpdateTime(),
                getParentForChildren(),
                isClean());
        updateTime_ = null;
      }
      return updateTimeBuilder_;
    }

    private com.google.cloud.bigquery.logging.v1.BigQueryAcl acl_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.BigQueryAcl, com.google.cloud.bigquery.logging.v1.BigQueryAcl.Builder, com.google.cloud.bigquery.logging.v1.BigQueryAclOrBuilder> aclBuilder_;
    /**
     * <pre>
     * The access control list for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
     */
    public boolean hasAcl() {
      return aclBuilder_ != null || acl_ != null;
    }
    /**
     * <pre>
     * The access control list for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
     */
    public com.google.cloud.bigquery.logging.v1.BigQueryAcl getAcl() {
      if (aclBuilder_ == null) {
        return acl_ == null ? com.google.cloud.bigquery.logging.v1.BigQueryAcl.getDefaultInstance() : acl_;
      } else {
        return aclBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The access control list for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
     */
    public Builder setAcl(com.google.cloud.bigquery.logging.v1.BigQueryAcl value) {
      if (aclBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        acl_ = value;
        onChanged();
      } else {
        aclBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The access control list for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
     */
    public Builder setAcl(
        com.google.cloud.bigquery.logging.v1.BigQueryAcl.Builder builderForValue) {
      if (aclBuilder_ == null) {
        acl_ = builderForValue.build();
        onChanged();
      } else {
        aclBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The access control list for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
     */
    public Builder mergeAcl(com.google.cloud.bigquery.logging.v1.BigQueryAcl value) {
      if (aclBuilder_ == null) {
        if (acl_ != null) {
          acl_ =
            com.google.cloud.bigquery.logging.v1.BigQueryAcl.newBuilder(acl_).mergeFrom(value).buildPartial();
        } else {
          acl_ = value;
        }
        onChanged();
      } else {
        aclBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The access control list for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
     */
    public Builder clearAcl() {
      if (aclBuilder_ == null) {
        acl_ = null;
        onChanged();
      } else {
        acl_ = null;
        aclBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The access control list for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
     */
    public com.google.cloud.bigquery.logging.v1.BigQueryAcl.Builder getAclBuilder() {
      
      onChanged();
      return getAclFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The access control list for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
     */
    public com.google.cloud.bigquery.logging.v1.BigQueryAclOrBuilder getAclOrBuilder() {
      if (aclBuilder_ != null) {
        return aclBuilder_.getMessageOrBuilder();
      } else {
        return acl_ == null ?
            com.google.cloud.bigquery.logging.v1.BigQueryAcl.getDefaultInstance() : acl_;
      }
    }
    /**
     * <pre>
     * The access control list for the dataset.
     * </pre>
     *
     * <code>optional .google.cloud.bigquery.logging.v1.BigQueryAcl acl = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.bigquery.logging.v1.BigQueryAcl, com.google.cloud.bigquery.logging.v1.BigQueryAcl.Builder, com.google.cloud.bigquery.logging.v1.BigQueryAclOrBuilder> 
        getAclFieldBuilder() {
      if (aclBuilder_ == null) {
        aclBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.logging.v1.BigQueryAcl, com.google.cloud.bigquery.logging.v1.BigQueryAcl.Builder, com.google.cloud.bigquery.logging.v1.BigQueryAclOrBuilder>(
                getAcl(),
                getParentForChildren(),
                isClean());
        acl_ = null;
      }
      return aclBuilder_;
    }

    private com.google.protobuf.Duration defaultTableExpireDuration_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> defaultTableExpireDurationBuilder_;
    /**
     * <pre>
     * If this field is present, each table that does not specify an
     * expiration time is assigned an expiration time by adding this
     * duration to the table's `createTime`.  If this field is empty,
     * there is no default table expiration time.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
     */
    public boolean hasDefaultTableExpireDuration() {
      return defaultTableExpireDurationBuilder_ != null || defaultTableExpireDuration_ != null;
    }
    /**
     * <pre>
     * If this field is present, each table that does not specify an
     * expiration time is assigned an expiration time by adding this
     * duration to the table's `createTime`.  If this field is empty,
     * there is no default table expiration time.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
     */
    public com.google.protobuf.Duration getDefaultTableExpireDuration() {
      if (defaultTableExpireDurationBuilder_ == null) {
        return defaultTableExpireDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : defaultTableExpireDuration_;
      } else {
        return defaultTableExpireDurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If this field is present, each table that does not specify an
     * expiration time is assigned an expiration time by adding this
     * duration to the table's `createTime`.  If this field is empty,
     * there is no default table expiration time.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
     */
    public Builder setDefaultTableExpireDuration(com.google.protobuf.Duration value) {
      if (defaultTableExpireDurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        defaultTableExpireDuration_ = value;
        onChanged();
      } else {
        defaultTableExpireDurationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * If this field is present, each table that does not specify an
     * expiration time is assigned an expiration time by adding this
     * duration to the table's `createTime`.  If this field is empty,
     * there is no default table expiration time.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
     */
    public Builder setDefaultTableExpireDuration(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (defaultTableExpireDurationBuilder_ == null) {
        defaultTableExpireDuration_ = builderForValue.build();
        onChanged();
      } else {
        defaultTableExpireDurationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * If this field is present, each table that does not specify an
     * expiration time is assigned an expiration time by adding this
     * duration to the table's `createTime`.  If this field is empty,
     * there is no default table expiration time.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
     */
    public Builder mergeDefaultTableExpireDuration(com.google.protobuf.Duration value) {
      if (defaultTableExpireDurationBuilder_ == null) {
        if (defaultTableExpireDuration_ != null) {
          defaultTableExpireDuration_ =
            com.google.protobuf.Duration.newBuilder(defaultTableExpireDuration_).mergeFrom(value).buildPartial();
        } else {
          defaultTableExpireDuration_ = value;
        }
        onChanged();
      } else {
        defaultTableExpireDurationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * If this field is present, each table that does not specify an
     * expiration time is assigned an expiration time by adding this
     * duration to the table's `createTime`.  If this field is empty,
     * there is no default table expiration time.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
     */
    public Builder clearDefaultTableExpireDuration() {
      if (defaultTableExpireDurationBuilder_ == null) {
        defaultTableExpireDuration_ = null;
        onChanged();
      } else {
        defaultTableExpireDuration_ = null;
        defaultTableExpireDurationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * If this field is present, each table that does not specify an
     * expiration time is assigned an expiration time by adding this
     * duration to the table's `createTime`.  If this field is empty,
     * there is no default table expiration time.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
     */
    public com.google.protobuf.Duration.Builder getDefaultTableExpireDurationBuilder() {
      
      onChanged();
      return getDefaultTableExpireDurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If this field is present, each table that does not specify an
     * expiration time is assigned an expiration time by adding this
     * duration to the table's `createTime`.  If this field is empty,
     * there is no default table expiration time.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
     */
    public com.google.protobuf.DurationOrBuilder getDefaultTableExpireDurationOrBuilder() {
      if (defaultTableExpireDurationBuilder_ != null) {
        return defaultTableExpireDurationBuilder_.getMessageOrBuilder();
      } else {
        return defaultTableExpireDuration_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : defaultTableExpireDuration_;
      }
    }
    /**
     * <pre>
     * If this field is present, each table that does not specify an
     * expiration time is assigned an expiration time by adding this
     * duration to the table's `createTime`.  If this field is empty,
     * there is no default table expiration time.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration default_table_expire_duration = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getDefaultTableExpireDurationFieldBuilder() {
      if (defaultTableExpireDurationBuilder_ == null) {
        defaultTableExpireDurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getDefaultTableExpireDuration(),
                getParentForChildren(),
                isClean());
        defaultTableExpireDuration_ = null;
      }
      return defaultTableExpireDurationBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.logging.v1.Dataset)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.logging.v1.Dataset)
  private static final com.google.cloud.bigquery.logging.v1.Dataset DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.bigquery.logging.v1.Dataset();
  }

  public static com.google.cloud.bigquery.logging.v1.Dataset getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Dataset>
      PARSER = new com.google.protobuf.AbstractParser<Dataset>() {
    public Dataset parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Dataset(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Dataset> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Dataset> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.bigquery.logging.v1.Dataset getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

