// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/compute/v1/compute_instances.proto

package com.google.cloud.compute.v1;

/**
 * <pre>
 * A set of instance tags.
 * </pre>
 *
 * Protobuf type {@code google.compute.v1.Tags}
 */
public  final class Tags extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.compute.v1.Tags)
    TagsOrBuilder {
  // Use Tags.newBuilder() to construct.
  private Tags(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Tags() {
    items_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    fingerprint_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Tags(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              items_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            items_.add(s);
            break;
          }
          case 18: {

            fingerprint_ = input.readBytes();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        items_ = items_.getUnmodifiableView();
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.compute.v1.ComputeInstances.internal_static_google_compute_v1_Tags_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.compute.v1.ComputeInstances.internal_static_google_compute_v1_Tags_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.compute.v1.Tags.class, com.google.cloud.compute.v1.Tags.Builder.class);
  }

  private int bitField0_;
  public static final int ITEMS_FIELD_NUMBER = 1;
  private com.google.protobuf.LazyStringList items_;
  /**
   * <pre>
   * An array of tags. Each tag must be 1-63 characters long, and comply
   * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
   * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
   * </pre>
   *
   * <code>repeated string items = 1;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getItemsList() {
    return items_;
  }
  /**
   * <pre>
   * An array of tags. Each tag must be 1-63 characters long, and comply
   * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
   * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
   * </pre>
   *
   * <code>repeated string items = 1;</code>
   */
  public int getItemsCount() {
    return items_.size();
  }
  /**
   * <pre>
   * An array of tags. Each tag must be 1-63 characters long, and comply
   * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
   * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
   * </pre>
   *
   * <code>repeated string items = 1;</code>
   */
  public java.lang.String getItems(int index) {
    return items_.get(index);
  }
  /**
   * <pre>
   * An array of tags. Each tag must be 1-63 characters long, and comply
   * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
   * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
   * </pre>
   *
   * <code>repeated string items = 1;</code>
   */
  public com.google.protobuf.ByteString
      getItemsBytes(int index) {
    return items_.getByteString(index);
  }

  public static final int FINGERPRINT_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString fingerprint_;
  /**
   * <pre>
   * Specifies a fingerprint for this request, which is essentially a hash of
   * the metadata's contents and used for optimistic locking. The
   * fingerprint is initially generated by Compute Engine and changes after
   * every request to modify or update metadata. You must always provide an
   * up-to-date fingerprint hash in order to update or change metadata.
   * To see the latest fingerprint, make &lt;code&gt;get()&lt;/code&gt; request to the
   * instance.
   * </pre>
   *
   * <code>optional bytes fingerprint = 2;</code>
   */
  public com.google.protobuf.ByteString getFingerprint() {
    return fingerprint_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < items_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, items_.getRaw(i));
    }
    if (!fingerprint_.isEmpty()) {
      output.writeBytes(2, fingerprint_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < items_.size(); i++) {
        dataSize += computeStringSizeNoTag(items_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getItemsList().size();
    }
    if (!fingerprint_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, fingerprint_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.compute.v1.Tags)) {
      return super.equals(obj);
    }
    com.google.cloud.compute.v1.Tags other = (com.google.cloud.compute.v1.Tags) obj;

    boolean result = true;
    result = result && getItemsList()
        .equals(other.getItemsList());
    result = result && getFingerprint()
        .equals(other.getFingerprint());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (getItemsCount() > 0) {
      hash = (37 * hash) + ITEMS_FIELD_NUMBER;
      hash = (53 * hash) + getItemsList().hashCode();
    }
    hash = (37 * hash) + FINGERPRINT_FIELD_NUMBER;
    hash = (53 * hash) + getFingerprint().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.compute.v1.Tags parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.compute.v1.Tags parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.compute.v1.Tags parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.compute.v1.Tags parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.compute.v1.Tags parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.compute.v1.Tags parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.compute.v1.Tags parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.compute.v1.Tags parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.compute.v1.Tags parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.compute.v1.Tags parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.compute.v1.Tags prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A set of instance tags.
   * </pre>
   *
   * Protobuf type {@code google.compute.v1.Tags}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.compute.v1.Tags)
      com.google.cloud.compute.v1.TagsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.compute.v1.ComputeInstances.internal_static_google_compute_v1_Tags_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.compute.v1.ComputeInstances.internal_static_google_compute_v1_Tags_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.compute.v1.Tags.class, com.google.cloud.compute.v1.Tags.Builder.class);
    }

    // Construct using com.google.cloud.compute.v1.Tags.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      items_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      fingerprint_ = com.google.protobuf.ByteString.EMPTY;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.compute.v1.ComputeInstances.internal_static_google_compute_v1_Tags_descriptor;
    }

    public com.google.cloud.compute.v1.Tags getDefaultInstanceForType() {
      return com.google.cloud.compute.v1.Tags.getDefaultInstance();
    }

    public com.google.cloud.compute.v1.Tags build() {
      com.google.cloud.compute.v1.Tags result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.compute.v1.Tags buildPartial() {
      com.google.cloud.compute.v1.Tags result = new com.google.cloud.compute.v1.Tags(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        items_ = items_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.items_ = items_;
      result.fingerprint_ = fingerprint_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.compute.v1.Tags) {
        return mergeFrom((com.google.cloud.compute.v1.Tags)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.compute.v1.Tags other) {
      if (other == com.google.cloud.compute.v1.Tags.getDefaultInstance()) return this;
      if (!other.items_.isEmpty()) {
        if (items_.isEmpty()) {
          items_ = other.items_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureItemsIsMutable();
          items_.addAll(other.items_);
        }
        onChanged();
      }
      if (other.getFingerprint() != com.google.protobuf.ByteString.EMPTY) {
        setFingerprint(other.getFingerprint());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.compute.v1.Tags parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.compute.v1.Tags) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList items_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureItemsIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        items_ = new com.google.protobuf.LazyStringArrayList(items_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * An array of tags. Each tag must be 1-63 characters long, and comply
     * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
     * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
     * </pre>
     *
     * <code>repeated string items = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getItemsList() {
      return items_.getUnmodifiableView();
    }
    /**
     * <pre>
     * An array of tags. Each tag must be 1-63 characters long, and comply
     * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
     * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
     * </pre>
     *
     * <code>repeated string items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <pre>
     * An array of tags. Each tag must be 1-63 characters long, and comply
     * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
     * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
     * </pre>
     *
     * <code>repeated string items = 1;</code>
     */
    public java.lang.String getItems(int index) {
      return items_.get(index);
    }
    /**
     * <pre>
     * An array of tags. Each tag must be 1-63 characters long, and comply
     * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
     * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
     * </pre>
     *
     * <code>repeated string items = 1;</code>
     */
    public com.google.protobuf.ByteString
        getItemsBytes(int index) {
      return items_.getByteString(index);
    }
    /**
     * <pre>
     * An array of tags. Each tag must be 1-63 characters long, and comply
     * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
     * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
     * </pre>
     *
     * <code>repeated string items = 1;</code>
     */
    public Builder setItems(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureItemsIsMutable();
      items_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An array of tags. Each tag must be 1-63 characters long, and comply
     * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
     * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
     * </pre>
     *
     * <code>repeated string items = 1;</code>
     */
    public Builder addItems(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureItemsIsMutable();
      items_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An array of tags. Each tag must be 1-63 characters long, and comply
     * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
     * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
     * </pre>
     *
     * <code>repeated string items = 1;</code>
     */
    public Builder addAllItems(
        java.lang.Iterable<java.lang.String> values) {
      ensureItemsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, items_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An array of tags. Each tag must be 1-63 characters long, and comply
     * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
     * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
     * </pre>
     *
     * <code>repeated string items = 1;</code>
     */
    public Builder clearItems() {
      items_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An array of tags. Each tag must be 1-63 characters long, and comply
     * with &lt;a href="https://www.ietf.org/rfc/rfc1035.txt"&gt;RFC1035&lt;/a&gt;.
     * &#64;pattern [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?
     * </pre>
     *
     * <code>repeated string items = 1;</code>
     */
    public Builder addItemsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureItemsIsMutable();
      items_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString fingerprint_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Specifies a fingerprint for this request, which is essentially a hash of
     * the metadata's contents and used for optimistic locking. The
     * fingerprint is initially generated by Compute Engine and changes after
     * every request to modify or update metadata. You must always provide an
     * up-to-date fingerprint hash in order to update or change metadata.
     * To see the latest fingerprint, make &lt;code&gt;get()&lt;/code&gt; request to the
     * instance.
     * </pre>
     *
     * <code>optional bytes fingerprint = 2;</code>
     */
    public com.google.protobuf.ByteString getFingerprint() {
      return fingerprint_;
    }
    /**
     * <pre>
     * Specifies a fingerprint for this request, which is essentially a hash of
     * the metadata's contents and used for optimistic locking. The
     * fingerprint is initially generated by Compute Engine and changes after
     * every request to modify or update metadata. You must always provide an
     * up-to-date fingerprint hash in order to update or change metadata.
     * To see the latest fingerprint, make &lt;code&gt;get()&lt;/code&gt; request to the
     * instance.
     * </pre>
     *
     * <code>optional bytes fingerprint = 2;</code>
     */
    public Builder setFingerprint(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fingerprint_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies a fingerprint for this request, which is essentially a hash of
     * the metadata's contents and used for optimistic locking. The
     * fingerprint is initially generated by Compute Engine and changes after
     * every request to modify or update metadata. You must always provide an
     * up-to-date fingerprint hash in order to update or change metadata.
     * To see the latest fingerprint, make &lt;code&gt;get()&lt;/code&gt; request to the
     * instance.
     * </pre>
     *
     * <code>optional bytes fingerprint = 2;</code>
     */
    public Builder clearFingerprint() {
      
      fingerprint_ = getDefaultInstance().getFingerprint();
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.compute.v1.Tags)
  }

  // @@protoc_insertion_point(class_scope:google.compute.v1.Tags)
  private static final com.google.cloud.compute.v1.Tags DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.compute.v1.Tags();
  }

  public static com.google.cloud.compute.v1.Tags getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Tags>
      PARSER = new com.google.protobuf.AbstractParser<Tags>() {
    public Tags parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Tags(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Tags> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Tags> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.compute.v1.Tags getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

