// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/compute/v1/compute_instances.proto

package com.google.cloud.compute.v1;

public interface AttachedDiskOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.compute.v1.AttachedDisk)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * [Output Only] Type of the resource. Always
   * &lt;code&gt;compute#attachedDisk&lt;/code&gt; for attached disks.
   * </pre>
   *
   * <code>optional string kind = 1000;</code>
   */
  java.lang.String getKind();
  /**
   * <pre>
   * [Output Only] Type of the resource. Always
   * &lt;code&gt;compute#attachedDisk&lt;/code&gt; for attached disks.
   * </pre>
   *
   * <code>optional string kind = 1000;</code>
   */
  com.google.protobuf.ByteString
      getKindBytes();

  /**
   * <pre>
   * Specifies the type of the disk, either &lt;code&gt;SCRATCH&lt;/code&gt; or
   * &lt;code&gt;PERSISTENT&lt;/code&gt;. If not specified, the default is
   * &lt;code&gt;PERSISTENT&lt;/code&gt;.
   * </pre>
   *
   * <code>optional .google.compute.v1.AttachedDisk.DiskType type = 1;</code>
   */
  int getTypeValue();
  /**
   * <pre>
   * Specifies the type of the disk, either &lt;code&gt;SCRATCH&lt;/code&gt; or
   * &lt;code&gt;PERSISTENT&lt;/code&gt;. If not specified, the default is
   * &lt;code&gt;PERSISTENT&lt;/code&gt;.
   * </pre>
   *
   * <code>optional .google.compute.v1.AttachedDisk.DiskType type = 1;</code>
   */
  com.google.cloud.compute.v1.AttachedDisk.DiskType getType();

  /**
   * <pre>
   * The mode in which to attach this disk, either &lt;code&gt;READ_WRITE&lt;/code&gt; or
   * &lt;code&gt;READ_ONLY&lt;/code&gt;. If not specified, the default is to attach the disk
   * in &lt;code&gt;READ_WRITE&lt;/code&gt; mode.
   * </pre>
   *
   * <code>optional .google.compute.v1.AttachedDisk.DiskMode mode = 2;</code>
   */
  int getModeValue();
  /**
   * <pre>
   * The mode in which to attach this disk, either &lt;code&gt;READ_WRITE&lt;/code&gt; or
   * &lt;code&gt;READ_ONLY&lt;/code&gt;. If not specified, the default is to attach the disk
   * in &lt;code&gt;READ_WRITE&lt;/code&gt; mode.
   * </pre>
   *
   * <code>optional .google.compute.v1.AttachedDisk.DiskMode mode = 2;</code>
   */
  com.google.cloud.compute.v1.AttachedDisk.DiskMode getMode();

  /**
   * <pre>
   * Specifies a valid partial or full URL to an existing Persistent Disk
   * resource. When creating a new instance, one of
   * &lt;code&gt;initializeParams.sourceImage&lt;/code&gt; or
   * &lt;code&gt;disks.source&lt;/code&gt; is required.
   * If desired, you can also attach existing non-root persistent disks using
   * this property. This field is only applicable for persistent disks.
   * Note that for InstanceTemplate, specify the disk name, not the URL for the
   * disk.
   * </pre>
   *
   * <code>optional string source = 3;</code>
   */
  java.lang.String getSource();
  /**
   * <pre>
   * Specifies a valid partial or full URL to an existing Persistent Disk
   * resource. When creating a new instance, one of
   * &lt;code&gt;initializeParams.sourceImage&lt;/code&gt; or
   * &lt;code&gt;disks.source&lt;/code&gt; is required.
   * If desired, you can also attach existing non-root persistent disks using
   * this property. This field is only applicable for persistent disks.
   * Note that for InstanceTemplate, specify the disk name, not the URL for the
   * disk.
   * </pre>
   *
   * <code>optional string source = 3;</code>
   */
  com.google.protobuf.ByteString
      getSourceBytes();

  /**
   * <pre>
   * Specifies a unique device name of your choice that is reflected into the
   * &lt;code&gt;/dev/disk/by-id/google-*&lt;/code&gt; tree of a Linux operating system
   * running within the instance. This name can be used to reference the device
   * for mounting, resizing, and so on, from within the instance.
   * If not specified, the server chooses a default device name to apply to this
   * disk, in the form &lt;code&gt;persistent-disks-x&lt;/code&gt;, where x is a number
   * assigned by Google Compute Engine. This field is only applicable for
   * persistent disks.
   * </pre>
   *
   * <code>optional string device_name = 4;</code>
   */
  java.lang.String getDeviceName();
  /**
   * <pre>
   * Specifies a unique device name of your choice that is reflected into the
   * &lt;code&gt;/dev/disk/by-id/google-*&lt;/code&gt; tree of a Linux operating system
   * running within the instance. This name can be used to reference the device
   * for mounting, resizing, and so on, from within the instance.
   * If not specified, the server chooses a default device name to apply to this
   * disk, in the form &lt;code&gt;persistent-disks-x&lt;/code&gt;, where x is a number
   * assigned by Google Compute Engine. This field is only applicable for
   * persistent disks.
   * </pre>
   *
   * <code>optional string device_name = 4;</code>
   */
  com.google.protobuf.ByteString
      getDeviceNameBytes();

  /**
   * <pre>
   * Assigns a zero-based index to this disk, where 0 is reserved for the boot
   * disk. For example, if you have many disks attached to an instance, each
   * disk would have a unique index number. If not specified, the server will
   * choose an appropriate value.
   * </pre>
   *
   * <code>optional int32 index = 5;</code>
   */
  int getIndex();

  /**
   * <pre>
   * Indicates that this is a boot disk. The virtual machine will use the first
   * partition of the disk for its root filesystem.
   * </pre>
   *
   * <code>optional bool boot = 6;</code>
   */
  boolean getBoot();

  /**
   * <pre>
   * [Input Only] Specifies the parameters for a new disk that will be created
   * alongside the new instance. Use initialization parameters to create boot
   * disks or local SSDs attached to the new instance.
   * This property is mutually exclusive with the &lt;code&gt;source&lt;/code&gt; property;
   * you can only define one or the other, but not both.
   * </pre>
   *
   * <code>optional .google.compute.v1.AttachedDisk.InitializeParams initialize_params = 7;</code>
   */
  boolean hasInitializeParams();
  /**
   * <pre>
   * [Input Only] Specifies the parameters for a new disk that will be created
   * alongside the new instance. Use initialization parameters to create boot
   * disks or local SSDs attached to the new instance.
   * This property is mutually exclusive with the &lt;code&gt;source&lt;/code&gt; property;
   * you can only define one or the other, but not both.
   * </pre>
   *
   * <code>optional .google.compute.v1.AttachedDisk.InitializeParams initialize_params = 7;</code>
   */
  com.google.cloud.compute.v1.AttachedDisk.InitializeParams getInitializeParams();
  /**
   * <pre>
   * [Input Only] Specifies the parameters for a new disk that will be created
   * alongside the new instance. Use initialization parameters to create boot
   * disks or local SSDs attached to the new instance.
   * This property is mutually exclusive with the &lt;code&gt;source&lt;/code&gt; property;
   * you can only define one or the other, but not both.
   * </pre>
   *
   * <code>optional .google.compute.v1.AttachedDisk.InitializeParams initialize_params = 7;</code>
   */
  com.google.cloud.compute.v1.AttachedDisk.InitializeParamsOrBuilder getInitializeParamsOrBuilder();

  /**
   * <pre>
   * Specifies whether the disk will be auto-deleted when the instance is deleted
   * (but not when the disk is detached from the instance).
   * </pre>
   *
   * <code>optional bool auto_delete = 8;</code>
   */
  boolean getAutoDelete();

  /**
   * <pre>
   * [Output Only] Any valid publicly visible licenses.
   * </pre>
   *
   * <code>repeated string licenses = 9;</code>
   */
  java.util.List<java.lang.String>
      getLicensesList();
  /**
   * <pre>
   * [Output Only] Any valid publicly visible licenses.
   * </pre>
   *
   * <code>repeated string licenses = 9;</code>
   */
  int getLicensesCount();
  /**
   * <pre>
   * [Output Only] Any valid publicly visible licenses.
   * </pre>
   *
   * <code>repeated string licenses = 9;</code>
   */
  java.lang.String getLicenses(int index);
  /**
   * <pre>
   * [Output Only] Any valid publicly visible licenses.
   * </pre>
   *
   * <code>repeated string licenses = 9;</code>
   */
  com.google.protobuf.ByteString
      getLicensesBytes(int index);

  /**
   * <pre>
   * Specifies the disk interface to use for attaching this disk, which is
   * either &lt;code&gt;SCSI&lt;/code&gt; or &lt;code&gt;NVME&lt;/code&gt;. The default is
   * &lt;code&gt;SCSI&lt;/code&gt;. Persistent disks must always use SCSI and the request
   * will fail if you attempt to attach a persistent disk in any other format
   * than SCSI. Local SSDs can use either NVME or SCSI. For performance
   * characteristics of SCSI over NVMe, see
   * &lt;a href="/compute/docs/disks#localssds"&gt;Local SSD performance&lt;/a&gt;.
   * </pre>
   *
   * <code>optional .google.compute.v1.AttachedDisk.DiskInterface interface = 10;</code>
   */
  int getInterfaceValue();
  /**
   * <pre>
   * Specifies the disk interface to use for attaching this disk, which is
   * either &lt;code&gt;SCSI&lt;/code&gt; or &lt;code&gt;NVME&lt;/code&gt;. The default is
   * &lt;code&gt;SCSI&lt;/code&gt;. Persistent disks must always use SCSI and the request
   * will fail if you attempt to attach a persistent disk in any other format
   * than SCSI. Local SSDs can use either NVME or SCSI. For performance
   * characteristics of SCSI over NVMe, see
   * &lt;a href="/compute/docs/disks#localssds"&gt;Local SSD performance&lt;/a&gt;.
   * </pre>
   *
   * <code>optional .google.compute.v1.AttachedDisk.DiskInterface interface = 10;</code>
   */
  com.google.cloud.compute.v1.AttachedDisk.DiskInterface getInterface();
}
