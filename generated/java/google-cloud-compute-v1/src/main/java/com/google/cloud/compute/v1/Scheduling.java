// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/compute/v1/compute_instances.proto

package com.google.cloud.compute.v1;

/**
 * <pre>
 * Sets the scheduling options for an Instance.
 * </pre>
 *
 * Protobuf type {@code google.compute.v1.Scheduling}
 */
public  final class Scheduling extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.compute.v1.Scheduling)
    SchedulingOrBuilder {
  // Use Scheduling.newBuilder() to construct.
  private Scheduling(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Scheduling() {
    onHostMaintenance_ = 0;
    automaticRestart_ = false;
    preemptible_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Scheduling(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            onHostMaintenance_ = rawValue;
            break;
          }
          case 16: {

            automaticRestart_ = input.readBool();
            break;
          }
          case 24: {

            preemptible_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.compute.v1.ComputeInstances.internal_static_google_compute_v1_Scheduling_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.compute.v1.ComputeInstances.internal_static_google_compute_v1_Scheduling_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.compute.v1.Scheduling.class, com.google.cloud.compute.v1.Scheduling.Builder.class);
  }

  /**
   * <pre>
   * Defines the maintenance behavior for this instance, either
   * &lt;code&gt;TERMINATE&lt;/code&gt; or &lt;code&gt;MIGRATE&lt;/code&gt;. For standard instances, the
   * default behavior is &lt;code&gt;MIGRATE&lt;/code&gt;. For
   * &lt;a href="/compute/docs/instances/preemptible"&gt;preemptible instances&lt;/a&gt;,
   * the default, and only possible behavior, is &lt;code&gt;TERMINATE&lt;/code&gt;. For
   * more information, see
   * &lt;a href="/compute/docs/instances/setting-instance-scheduling-options"&gt;Setting Instance Scheduling Options&lt;/a&gt;.
   * </pre>
   *
   * Protobuf enum {@code google.compute.v1.Scheduling.OnHostMaintenance}
   */
  public enum OnHostMaintenance
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * &lt;b&gt;[Default]&lt;/b&gt; Allows Compute Engine to automatically migrate instances
     * out of the way of maintenance events.
     * </pre>
     *
     * <code>TERMINATE = 0;</code>
     */
    TERMINATE(0),
    /**
     * <pre>
     * Tells Compute Engine to terminate and (optionally) restart the instance
     * away from the maintenance activity. If you would like your instance to be
     * restarted, set the &lt;code&gt;automaticRestart&lt;/code&gt; flag to true. Your
     * instance may be restarted more than once, and it may be restarted outside
     * the window of maintenance events.
     * </pre>
     *
     * <code>MIGRATE = 1000;</code>
     */
    MIGRATE(1000),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * &lt;b&gt;[Default]&lt;/b&gt; Allows Compute Engine to automatically migrate instances
     * out of the way of maintenance events.
     * </pre>
     *
     * <code>TERMINATE = 0;</code>
     */
    public static final int TERMINATE_VALUE = 0;
    /**
     * <pre>
     * Tells Compute Engine to terminate and (optionally) restart the instance
     * away from the maintenance activity. If you would like your instance to be
     * restarted, set the &lt;code&gt;automaticRestart&lt;/code&gt; flag to true. Your
     * instance may be restarted more than once, and it may be restarted outside
     * the window of maintenance events.
     * </pre>
     *
     * <code>MIGRATE = 1000;</code>
     */
    public static final int MIGRATE_VALUE = 1000;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OnHostMaintenance valueOf(int value) {
      return forNumber(value);
    }

    public static OnHostMaintenance forNumber(int value) {
      switch (value) {
        case 0: return TERMINATE;
        case 1000: return MIGRATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OnHostMaintenance>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OnHostMaintenance> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OnHostMaintenance>() {
            public OnHostMaintenance findValueByNumber(int number) {
              return OnHostMaintenance.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.cloud.compute.v1.Scheduling.getDescriptor().getEnumTypes().get(0);
    }

    private static final OnHostMaintenance[] VALUES = values();

    public static OnHostMaintenance valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OnHostMaintenance(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.compute.v1.Scheduling.OnHostMaintenance)
  }

  public static final int ON_HOST_MAINTENANCE_FIELD_NUMBER = 1;
  private int onHostMaintenance_;
  /**
   * <pre>
   * Defines the maintenance behavior for this instance. For standard instances,
   * the default behavior is &lt;code&gt;MIGRATE&lt;/code&gt;. For
   * &lt;a href="/compute/docs/instances/preemptible"&gt;preemptible instances&lt;/a&gt;,
   * the default and only possible behavior is &lt;code&gt;TERMINATE&lt;/code&gt;. For more
   * information, see
   *  &lt;a href="/compute/docs/instances/setting-instance-scheduling-options"&gt;Setting Instance Scheduling Options&lt;/a&gt;.
   * </pre>
   *
   * <code>optional .google.compute.v1.Scheduling.OnHostMaintenance on_host_maintenance = 1;</code>
   */
  public int getOnHostMaintenanceValue() {
    return onHostMaintenance_;
  }
  /**
   * <pre>
   * Defines the maintenance behavior for this instance. For standard instances,
   * the default behavior is &lt;code&gt;MIGRATE&lt;/code&gt;. For
   * &lt;a href="/compute/docs/instances/preemptible"&gt;preemptible instances&lt;/a&gt;,
   * the default and only possible behavior is &lt;code&gt;TERMINATE&lt;/code&gt;. For more
   * information, see
   *  &lt;a href="/compute/docs/instances/setting-instance-scheduling-options"&gt;Setting Instance Scheduling Options&lt;/a&gt;.
   * </pre>
   *
   * <code>optional .google.compute.v1.Scheduling.OnHostMaintenance on_host_maintenance = 1;</code>
   */
  public com.google.cloud.compute.v1.Scheduling.OnHostMaintenance getOnHostMaintenance() {
    com.google.cloud.compute.v1.Scheduling.OnHostMaintenance result = com.google.cloud.compute.v1.Scheduling.OnHostMaintenance.valueOf(onHostMaintenance_);
    return result == null ? com.google.cloud.compute.v1.Scheduling.OnHostMaintenance.UNRECOGNIZED : result;
  }

  public static final int AUTOMATIC_RESTART_FIELD_NUMBER = 2;
  private boolean automaticRestart_;
  /**
   * <pre>
   * Specifies whether the instance should be automatically restarted if it is
   * terminated by Compute Engine (not terminated by a user). You can only set
   * the automatic restart option for standard instances.
   * &lt;a href="/compute/docs/instances/preemptible"&gt;Preemptible instances&lt;/a&gt;
   * cannot be automatically restarted.
   * By default, this is set to &lt;code&gt;true&lt;/code&gt; so an instance is
   * automatically restarted if it is terminated by Compute Engine.
   * </pre>
   *
   * <code>optional bool automatic_restart = 2;</code>
   */
  public boolean getAutomaticRestart() {
    return automaticRestart_;
  }

  public static final int PREEMPTIBLE_FIELD_NUMBER = 3;
  private boolean preemptible_;
  /**
   * <pre>
   * Defines whether the instance is preemptible. This can only be set during
   * instance creation, it cannot be set or changed after the instance has
   * been created.
   * </pre>
   *
   * <code>optional bool preemptible = 3;</code>
   */
  public boolean getPreemptible() {
    return preemptible_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (onHostMaintenance_ != com.google.cloud.compute.v1.Scheduling.OnHostMaintenance.TERMINATE.getNumber()) {
      output.writeEnum(1, onHostMaintenance_);
    }
    if (automaticRestart_ != false) {
      output.writeBool(2, automaticRestart_);
    }
    if (preemptible_ != false) {
      output.writeBool(3, preemptible_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (onHostMaintenance_ != com.google.cloud.compute.v1.Scheduling.OnHostMaintenance.TERMINATE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, onHostMaintenance_);
    }
    if (automaticRestart_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, automaticRestart_);
    }
    if (preemptible_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, preemptible_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.compute.v1.Scheduling)) {
      return super.equals(obj);
    }
    com.google.cloud.compute.v1.Scheduling other = (com.google.cloud.compute.v1.Scheduling) obj;

    boolean result = true;
    result = result && onHostMaintenance_ == other.onHostMaintenance_;
    result = result && (getAutomaticRestart()
        == other.getAutomaticRestart());
    result = result && (getPreemptible()
        == other.getPreemptible());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + ON_HOST_MAINTENANCE_FIELD_NUMBER;
    hash = (53 * hash) + onHostMaintenance_;
    hash = (37 * hash) + AUTOMATIC_RESTART_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAutomaticRestart());
    hash = (37 * hash) + PREEMPTIBLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPreemptible());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.compute.v1.Scheduling parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.compute.v1.Scheduling parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.compute.v1.Scheduling parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.compute.v1.Scheduling parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.compute.v1.Scheduling parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.compute.v1.Scheduling parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.compute.v1.Scheduling parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.compute.v1.Scheduling parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.compute.v1.Scheduling parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.compute.v1.Scheduling parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.compute.v1.Scheduling prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Sets the scheduling options for an Instance.
   * </pre>
   *
   * Protobuf type {@code google.compute.v1.Scheduling}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.compute.v1.Scheduling)
      com.google.cloud.compute.v1.SchedulingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.compute.v1.ComputeInstances.internal_static_google_compute_v1_Scheduling_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.compute.v1.ComputeInstances.internal_static_google_compute_v1_Scheduling_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.compute.v1.Scheduling.class, com.google.cloud.compute.v1.Scheduling.Builder.class);
    }

    // Construct using com.google.cloud.compute.v1.Scheduling.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      onHostMaintenance_ = 0;

      automaticRestart_ = false;

      preemptible_ = false;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.compute.v1.ComputeInstances.internal_static_google_compute_v1_Scheduling_descriptor;
    }

    public com.google.cloud.compute.v1.Scheduling getDefaultInstanceForType() {
      return com.google.cloud.compute.v1.Scheduling.getDefaultInstance();
    }

    public com.google.cloud.compute.v1.Scheduling build() {
      com.google.cloud.compute.v1.Scheduling result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.compute.v1.Scheduling buildPartial() {
      com.google.cloud.compute.v1.Scheduling result = new com.google.cloud.compute.v1.Scheduling(this);
      result.onHostMaintenance_ = onHostMaintenance_;
      result.automaticRestart_ = automaticRestart_;
      result.preemptible_ = preemptible_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.compute.v1.Scheduling) {
        return mergeFrom((com.google.cloud.compute.v1.Scheduling)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.compute.v1.Scheduling other) {
      if (other == com.google.cloud.compute.v1.Scheduling.getDefaultInstance()) return this;
      if (other.onHostMaintenance_ != 0) {
        setOnHostMaintenanceValue(other.getOnHostMaintenanceValue());
      }
      if (other.getAutomaticRestart() != false) {
        setAutomaticRestart(other.getAutomaticRestart());
      }
      if (other.getPreemptible() != false) {
        setPreemptible(other.getPreemptible());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.compute.v1.Scheduling parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.compute.v1.Scheduling) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int onHostMaintenance_ = 0;
    /**
     * <pre>
     * Defines the maintenance behavior for this instance. For standard instances,
     * the default behavior is &lt;code&gt;MIGRATE&lt;/code&gt;. For
     * &lt;a href="/compute/docs/instances/preemptible"&gt;preemptible instances&lt;/a&gt;,
     * the default and only possible behavior is &lt;code&gt;TERMINATE&lt;/code&gt;. For more
     * information, see
     *  &lt;a href="/compute/docs/instances/setting-instance-scheduling-options"&gt;Setting Instance Scheduling Options&lt;/a&gt;.
     * </pre>
     *
     * <code>optional .google.compute.v1.Scheduling.OnHostMaintenance on_host_maintenance = 1;</code>
     */
    public int getOnHostMaintenanceValue() {
      return onHostMaintenance_;
    }
    /**
     * <pre>
     * Defines the maintenance behavior for this instance. For standard instances,
     * the default behavior is &lt;code&gt;MIGRATE&lt;/code&gt;. For
     * &lt;a href="/compute/docs/instances/preemptible"&gt;preemptible instances&lt;/a&gt;,
     * the default and only possible behavior is &lt;code&gt;TERMINATE&lt;/code&gt;. For more
     * information, see
     *  &lt;a href="/compute/docs/instances/setting-instance-scheduling-options"&gt;Setting Instance Scheduling Options&lt;/a&gt;.
     * </pre>
     *
     * <code>optional .google.compute.v1.Scheduling.OnHostMaintenance on_host_maintenance = 1;</code>
     */
    public Builder setOnHostMaintenanceValue(int value) {
      onHostMaintenance_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines the maintenance behavior for this instance. For standard instances,
     * the default behavior is &lt;code&gt;MIGRATE&lt;/code&gt;. For
     * &lt;a href="/compute/docs/instances/preemptible"&gt;preemptible instances&lt;/a&gt;,
     * the default and only possible behavior is &lt;code&gt;TERMINATE&lt;/code&gt;. For more
     * information, see
     *  &lt;a href="/compute/docs/instances/setting-instance-scheduling-options"&gt;Setting Instance Scheduling Options&lt;/a&gt;.
     * </pre>
     *
     * <code>optional .google.compute.v1.Scheduling.OnHostMaintenance on_host_maintenance = 1;</code>
     */
    public com.google.cloud.compute.v1.Scheduling.OnHostMaintenance getOnHostMaintenance() {
      com.google.cloud.compute.v1.Scheduling.OnHostMaintenance result = com.google.cloud.compute.v1.Scheduling.OnHostMaintenance.valueOf(onHostMaintenance_);
      return result == null ? com.google.cloud.compute.v1.Scheduling.OnHostMaintenance.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Defines the maintenance behavior for this instance. For standard instances,
     * the default behavior is &lt;code&gt;MIGRATE&lt;/code&gt;. For
     * &lt;a href="/compute/docs/instances/preemptible"&gt;preemptible instances&lt;/a&gt;,
     * the default and only possible behavior is &lt;code&gt;TERMINATE&lt;/code&gt;. For more
     * information, see
     *  &lt;a href="/compute/docs/instances/setting-instance-scheduling-options"&gt;Setting Instance Scheduling Options&lt;/a&gt;.
     * </pre>
     *
     * <code>optional .google.compute.v1.Scheduling.OnHostMaintenance on_host_maintenance = 1;</code>
     */
    public Builder setOnHostMaintenance(com.google.cloud.compute.v1.Scheduling.OnHostMaintenance value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      onHostMaintenance_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines the maintenance behavior for this instance. For standard instances,
     * the default behavior is &lt;code&gt;MIGRATE&lt;/code&gt;. For
     * &lt;a href="/compute/docs/instances/preemptible"&gt;preemptible instances&lt;/a&gt;,
     * the default and only possible behavior is &lt;code&gt;TERMINATE&lt;/code&gt;. For more
     * information, see
     *  &lt;a href="/compute/docs/instances/setting-instance-scheduling-options"&gt;Setting Instance Scheduling Options&lt;/a&gt;.
     * </pre>
     *
     * <code>optional .google.compute.v1.Scheduling.OnHostMaintenance on_host_maintenance = 1;</code>
     */
    public Builder clearOnHostMaintenance() {
      
      onHostMaintenance_ = 0;
      onChanged();
      return this;
    }

    private boolean automaticRestart_ ;
    /**
     * <pre>
     * Specifies whether the instance should be automatically restarted if it is
     * terminated by Compute Engine (not terminated by a user). You can only set
     * the automatic restart option for standard instances.
     * &lt;a href="/compute/docs/instances/preemptible"&gt;Preemptible instances&lt;/a&gt;
     * cannot be automatically restarted.
     * By default, this is set to &lt;code&gt;true&lt;/code&gt; so an instance is
     * automatically restarted if it is terminated by Compute Engine.
     * </pre>
     *
     * <code>optional bool automatic_restart = 2;</code>
     */
    public boolean getAutomaticRestart() {
      return automaticRestart_;
    }
    /**
     * <pre>
     * Specifies whether the instance should be automatically restarted if it is
     * terminated by Compute Engine (not terminated by a user). You can only set
     * the automatic restart option for standard instances.
     * &lt;a href="/compute/docs/instances/preemptible"&gt;Preemptible instances&lt;/a&gt;
     * cannot be automatically restarted.
     * By default, this is set to &lt;code&gt;true&lt;/code&gt; so an instance is
     * automatically restarted if it is terminated by Compute Engine.
     * </pre>
     *
     * <code>optional bool automatic_restart = 2;</code>
     */
    public Builder setAutomaticRestart(boolean value) {
      
      automaticRestart_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies whether the instance should be automatically restarted if it is
     * terminated by Compute Engine (not terminated by a user). You can only set
     * the automatic restart option for standard instances.
     * &lt;a href="/compute/docs/instances/preemptible"&gt;Preemptible instances&lt;/a&gt;
     * cannot be automatically restarted.
     * By default, this is set to &lt;code&gt;true&lt;/code&gt; so an instance is
     * automatically restarted if it is terminated by Compute Engine.
     * </pre>
     *
     * <code>optional bool automatic_restart = 2;</code>
     */
    public Builder clearAutomaticRestart() {
      
      automaticRestart_ = false;
      onChanged();
      return this;
    }

    private boolean preemptible_ ;
    /**
     * <pre>
     * Defines whether the instance is preemptible. This can only be set during
     * instance creation, it cannot be set or changed after the instance has
     * been created.
     * </pre>
     *
     * <code>optional bool preemptible = 3;</code>
     */
    public boolean getPreemptible() {
      return preemptible_;
    }
    /**
     * <pre>
     * Defines whether the instance is preemptible. This can only be set during
     * instance creation, it cannot be set or changed after the instance has
     * been created.
     * </pre>
     *
     * <code>optional bool preemptible = 3;</code>
     */
    public Builder setPreemptible(boolean value) {
      
      preemptible_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines whether the instance is preemptible. This can only be set during
     * instance creation, it cannot be set or changed after the instance has
     * been created.
     * </pre>
     *
     * <code>optional bool preemptible = 3;</code>
     */
    public Builder clearPreemptible() {
      
      preemptible_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.compute.v1.Scheduling)
  }

  // @@protoc_insertion_point(class_scope:google.compute.v1.Scheduling)
  private static final com.google.cloud.compute.v1.Scheduling DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.compute.v1.Scheduling();
  }

  public static com.google.cloud.compute.v1.Scheduling getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Scheduling>
      PARSER = new com.google.protobuf.AbstractParser<Scheduling>() {
    public Scheduling parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Scheduling(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Scheduling> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Scheduling> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.compute.v1.Scheduling getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

