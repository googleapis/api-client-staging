// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2beta1/storage.proto

package com.google.privacy.dlp.v2beta1;

/**
 * <pre>
 * Custom information type provided by the user. Used to find domain-specific
 * sensitive information configurable to the data in question.
 * </pre>
 *
 * Protobuf type {@code google.privacy.dlp.v2beta1.CustomInfoType}
 */
public  final class CustomInfoType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2beta1.CustomInfoType)
    CustomInfoTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CustomInfoType.newBuilder() to construct.
  private CustomInfoType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CustomInfoType() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CustomInfoType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.privacy.dlp.v2beta1.InfoType.Builder subBuilder = null;
            if (infoType_ != null) {
              subBuilder = infoType_.toBuilder();
            }
            infoType_ = input.readMessage(com.google.privacy.dlp.v2beta1.InfoType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(infoType_);
              infoType_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.Builder subBuilder = null;
            if (typeCase_ == 2) {
              subBuilder = ((com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) type_).toBuilder();
            }
            type_ =
                input.readMessage(com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 2;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.privacy.dlp.v2beta1.CustomInfoType.class, com.google.privacy.dlp.v2beta1.CustomInfoType.Builder.class);
  }

  public interface DictionaryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2beta1.CustomInfoType.Dictionary)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of words or phrases to search for.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
     */
    boolean hasWordList();
    /**
     * <pre>
     * List of words or phrases to search for.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
     */
    com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList getWordList();
    /**
     * <pre>
     * List of words or phrases to search for.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
     */
    com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordListOrBuilder getWordListOrBuilder();

    public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.SourceCase getSourceCase();
  }
  /**
   * <pre>
   * Custom information type based on a dictionary of words or phrases. This can
   * be used to match sensitive information specific to the data, such as a list
   * of employee IDs or job titles.
   * Dictionary words are case-insensitive and all characters other than letters
   * and digits in the unicode [Basic Multilingual
   * Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)
   * will be replaced with whitespace when scanning for matches, so the
   * dictionary phrase "Sam Johnson" will match all three phrases "sam johnson",
   * "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters
   * surrounding any match must be of a different type than the adjacent
   * characters within the word, so letters must be next to non-letters and
   * digits next to non-digits. For example, the dictionary word "jen" will
   * match the first three letters of the text "jen123" but will return no
   * matches for "jennifer".
   * Dictionary words containing a large number of characters that are not
   * letters or digits may result in unexpected findings because such characters
   * are treated as whitespace.
   * </pre>
   *
   * Protobuf type {@code google.privacy.dlp.v2beta1.CustomInfoType.Dictionary}
   */
  public  static final class Dictionary extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2beta1.CustomInfoType.Dictionary)
      DictionaryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Dictionary.newBuilder() to construct.
    private Dictionary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Dictionary() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Dictionary(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.Builder subBuilder = null;
              if (sourceCase_ == 1) {
                subBuilder = ((com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) source_).toBuilder();
              }
              source_ =
                  input.readMessage(com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) source_);
                source_ = subBuilder.buildPartial();
              }
              sourceCase_ = 1;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_Dictionary_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_Dictionary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.class, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.Builder.class);
    }

    public interface WordListOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Words or phrases defining the dictionary. The dictionary must contain
       * at least one phrase and every phrase must contain at least 2 characters
       * that are letters or digits. [required]
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      java.util.List<java.lang.String>
          getWordsList();
      /**
       * <pre>
       * Words or phrases defining the dictionary. The dictionary must contain
       * at least one phrase and every phrase must contain at least 2 characters
       * that are letters or digits. [required]
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      int getWordsCount();
      /**
       * <pre>
       * Words or phrases defining the dictionary. The dictionary must contain
       * at least one phrase and every phrase must contain at least 2 characters
       * that are letters or digits. [required]
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      java.lang.String getWords(int index);
      /**
       * <pre>
       * Words or phrases defining the dictionary. The dictionary must contain
       * at least one phrase and every phrase must contain at least 2 characters
       * that are letters or digits. [required]
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      com.google.protobuf.ByteString
          getWordsBytes(int index);
    }
    /**
     * <pre>
     * Message defining a list of words or phrases to search for in the data.
     * </pre>
     *
     * Protobuf type {@code google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList}
     */
    public  static final class WordList extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList)
        WordListOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use WordList.newBuilder() to construct.
      private WordList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private WordList() {
        words_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private WordList(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  words_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                words_.add(s);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            words_ = words_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_Dictionary_WordList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_Dictionary_WordList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.class, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.Builder.class);
      }

      public static final int WORDS_FIELD_NUMBER = 1;
      private com.google.protobuf.LazyStringList words_;
      /**
       * <pre>
       * Words or phrases defining the dictionary. The dictionary must contain
       * at least one phrase and every phrase must contain at least 2 characters
       * that are letters or digits. [required]
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getWordsList() {
        return words_;
      }
      /**
       * <pre>
       * Words or phrases defining the dictionary. The dictionary must contain
       * at least one phrase and every phrase must contain at least 2 characters
       * that are letters or digits. [required]
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public int getWordsCount() {
        return words_.size();
      }
      /**
       * <pre>
       * Words or phrases defining the dictionary. The dictionary must contain
       * at least one phrase and every phrase must contain at least 2 characters
       * that are letters or digits. [required]
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public java.lang.String getWords(int index) {
        return words_.get(index);
      }
      /**
       * <pre>
       * Words or phrases defining the dictionary. The dictionary must contain
       * at least one phrase and every phrase must contain at least 2 characters
       * that are letters or digits. [required]
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWordsBytes(int index) {
        return words_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < words_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, words_.getRaw(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < words_.size(); i++) {
            dataSize += computeStringSizeNoTag(words_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getWordsList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList)) {
          return super.equals(obj);
        }
        com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList other = (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) obj;

        boolean result = true;
        result = result && getWordsList()
            .equals(other.getWordsList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getWordsCount() > 0) {
          hash = (37 * hash) + WORDS_FIELD_NUMBER;
          hash = (53 * hash) + getWordsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Message defining a list of words or phrases to search for in the data.
       * </pre>
       *
       * Protobuf type {@code google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList)
          com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordListOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_Dictionary_WordList_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_Dictionary_WordList_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.class, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.Builder.class);
        }

        // Construct using com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          words_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_Dictionary_WordList_descriptor;
        }

        public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList getDefaultInstanceForType() {
          return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.getDefaultInstance();
        }

        public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList build() {
          com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList buildPartial() {
          com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList result = new com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            words_ = words_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.words_ = words_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) {
            return mergeFrom((com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList other) {
          if (other == com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.getDefaultInstance()) return this;
          if (!other.words_.isEmpty()) {
            if (words_.isEmpty()) {
              words_ = other.words_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureWordsIsMutable();
              words_.addAll(other.words_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringList words_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureWordsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            words_ = new com.google.protobuf.LazyStringArrayList(words_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <pre>
         * Words or phrases defining the dictionary. The dictionary must contain
         * at least one phrase and every phrase must contain at least 2 characters
         * that are letters or digits. [required]
         * </pre>
         *
         * <code>repeated string words = 1;</code>
         */
        public com.google.protobuf.ProtocolStringList
            getWordsList() {
          return words_.getUnmodifiableView();
        }
        /**
         * <pre>
         * Words or phrases defining the dictionary. The dictionary must contain
         * at least one phrase and every phrase must contain at least 2 characters
         * that are letters or digits. [required]
         * </pre>
         *
         * <code>repeated string words = 1;</code>
         */
        public int getWordsCount() {
          return words_.size();
        }
        /**
         * <pre>
         * Words or phrases defining the dictionary. The dictionary must contain
         * at least one phrase and every phrase must contain at least 2 characters
         * that are letters or digits. [required]
         * </pre>
         *
         * <code>repeated string words = 1;</code>
         */
        public java.lang.String getWords(int index) {
          return words_.get(index);
        }
        /**
         * <pre>
         * Words or phrases defining the dictionary. The dictionary must contain
         * at least one phrase and every phrase must contain at least 2 characters
         * that are letters or digits. [required]
         * </pre>
         *
         * <code>repeated string words = 1;</code>
         */
        public com.google.protobuf.ByteString
            getWordsBytes(int index) {
          return words_.getByteString(index);
        }
        /**
         * <pre>
         * Words or phrases defining the dictionary. The dictionary must contain
         * at least one phrase and every phrase must contain at least 2 characters
         * that are letters or digits. [required]
         * </pre>
         *
         * <code>repeated string words = 1;</code>
         */
        public Builder setWords(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureWordsIsMutable();
          words_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Words or phrases defining the dictionary. The dictionary must contain
         * at least one phrase and every phrase must contain at least 2 characters
         * that are letters or digits. [required]
         * </pre>
         *
         * <code>repeated string words = 1;</code>
         */
        public Builder addWords(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureWordsIsMutable();
          words_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Words or phrases defining the dictionary. The dictionary must contain
         * at least one phrase and every phrase must contain at least 2 characters
         * that are letters or digits. [required]
         * </pre>
         *
         * <code>repeated string words = 1;</code>
         */
        public Builder addAllWords(
            java.lang.Iterable<java.lang.String> values) {
          ensureWordsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, words_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Words or phrases defining the dictionary. The dictionary must contain
         * at least one phrase and every phrase must contain at least 2 characters
         * that are letters or digits. [required]
         * </pre>
         *
         * <code>repeated string words = 1;</code>
         */
        public Builder clearWords() {
          words_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Words or phrases defining the dictionary. The dictionary must contain
         * at least one phrase and every phrase must contain at least 2 characters
         * that are letters or digits. [required]
         * </pre>
         *
         * <code>repeated string words = 1;</code>
         */
        public Builder addWordsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureWordsIsMutable();
          words_.add(value);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList)
      }

      // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList)
      private static final com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList();
      }

      public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<WordList>
          PARSER = new com.google.protobuf.AbstractParser<WordList>() {
        public WordList parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new WordList(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<WordList> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<WordList> getParserForType() {
        return PARSER;
      }

      public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int sourceCase_ = 0;
    private java.lang.Object source_;
    public enum SourceCase
        implements com.google.protobuf.Internal.EnumLite {
      WORD_LIST(1),
      SOURCE_NOT_SET(0);
      private final int value;
      private SourceCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SourceCase valueOf(int value) {
        return forNumber(value);
      }

      public static SourceCase forNumber(int value) {
        switch (value) {
          case 1: return WORD_LIST;
          case 0: return SOURCE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SourceCase
    getSourceCase() {
      return SourceCase.forNumber(
          sourceCase_);
    }

    public static final int WORD_LIST_FIELD_NUMBER = 1;
    /**
     * <pre>
     * List of words or phrases to search for.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
     */
    public boolean hasWordList() {
      return sourceCase_ == 1;
    }
    /**
     * <pre>
     * List of words or phrases to search for.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList getWordList() {
      if (sourceCase_ == 1) {
         return (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) source_;
      }
      return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.getDefaultInstance();
    }
    /**
     * <pre>
     * List of words or phrases to search for.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordListOrBuilder getWordListOrBuilder() {
      if (sourceCase_ == 1) {
         return (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) source_;
      }
      return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sourceCase_ == 1) {
        output.writeMessage(1, (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) source_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sourceCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) source_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary)) {
        return super.equals(obj);
      }
      com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary other = (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) obj;

      boolean result = true;
      result = result && getSourceCase().equals(
          other.getSourceCase());
      if (!result) return false;
      switch (sourceCase_) {
        case 1:
          result = result && getWordList()
              .equals(other.getWordList());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (sourceCase_) {
        case 1:
          hash = (37 * hash) + WORD_LIST_FIELD_NUMBER;
          hash = (53 * hash) + getWordList().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Custom information type based on a dictionary of words or phrases. This can
     * be used to match sensitive information specific to the data, such as a list
     * of employee IDs or job titles.
     * Dictionary words are case-insensitive and all characters other than letters
     * and digits in the unicode [Basic Multilingual
     * Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)
     * will be replaced with whitespace when scanning for matches, so the
     * dictionary phrase "Sam Johnson" will match all three phrases "sam johnson",
     * "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters
     * surrounding any match must be of a different type than the adjacent
     * characters within the word, so letters must be next to non-letters and
     * digits next to non-digits. For example, the dictionary word "jen" will
     * match the first three letters of the text "jen123" but will return no
     * matches for "jennifer".
     * Dictionary words containing a large number of characters that are not
     * letters or digits may result in unexpected findings because such characters
     * are treated as whitespace.
     * </pre>
     *
     * Protobuf type {@code google.privacy.dlp.v2beta1.CustomInfoType.Dictionary}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2beta1.CustomInfoType.Dictionary)
        com.google.privacy.dlp.v2beta1.CustomInfoType.DictionaryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_Dictionary_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_Dictionary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.class, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.Builder.class);
      }

      // Construct using com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sourceCase_ = 0;
        source_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_Dictionary_descriptor;
      }

      public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary getDefaultInstanceForType() {
        return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.getDefaultInstance();
      }

      public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary build() {
        com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary buildPartial() {
        com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary result = new com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary(this);
        if (sourceCase_ == 1) {
          if (wordListBuilder_ == null) {
            result.source_ = source_;
          } else {
            result.source_ = wordListBuilder_.build();
          }
        }
        result.sourceCase_ = sourceCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) {
          return mergeFrom((com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary other) {
        if (other == com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.getDefaultInstance()) return this;
        switch (other.getSourceCase()) {
          case WORD_LIST: {
            mergeWordList(other.getWordList());
            break;
          }
          case SOURCE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int sourceCase_ = 0;
      private java.lang.Object source_;
      public SourceCase
          getSourceCase() {
        return SourceCase.forNumber(
            sourceCase_);
      }

      public Builder clearSource() {
        sourceCase_ = 0;
        source_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.Builder, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordListOrBuilder> wordListBuilder_;
      /**
       * <pre>
       * List of words or phrases to search for.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
       */
      public boolean hasWordList() {
        return sourceCase_ == 1;
      }
      /**
       * <pre>
       * List of words or phrases to search for.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList getWordList() {
        if (wordListBuilder_ == null) {
          if (sourceCase_ == 1) {
            return (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) source_;
          }
          return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.getDefaultInstance();
        } else {
          if (sourceCase_ == 1) {
            return wordListBuilder_.getMessage();
          }
          return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * List of words or phrases to search for.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
       */
      public Builder setWordList(com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList value) {
        if (wordListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          source_ = value;
          onChanged();
        } else {
          wordListBuilder_.setMessage(value);
        }
        sourceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * List of words or phrases to search for.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
       */
      public Builder setWordList(
          com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.Builder builderForValue) {
        if (wordListBuilder_ == null) {
          source_ = builderForValue.build();
          onChanged();
        } else {
          wordListBuilder_.setMessage(builderForValue.build());
        }
        sourceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * List of words or phrases to search for.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
       */
      public Builder mergeWordList(com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList value) {
        if (wordListBuilder_ == null) {
          if (sourceCase_ == 1 &&
              source_ != com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.getDefaultInstance()) {
            source_ = com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.newBuilder((com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) source_)
                .mergeFrom(value).buildPartial();
          } else {
            source_ = value;
          }
          onChanged();
        } else {
          if (sourceCase_ == 1) {
            wordListBuilder_.mergeFrom(value);
          }
          wordListBuilder_.setMessage(value);
        }
        sourceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * List of words or phrases to search for.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
       */
      public Builder clearWordList() {
        if (wordListBuilder_ == null) {
          if (sourceCase_ == 1) {
            sourceCase_ = 0;
            source_ = null;
            onChanged();
          }
        } else {
          if (sourceCase_ == 1) {
            sourceCase_ = 0;
            source_ = null;
          }
          wordListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of words or phrases to search for.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.Builder getWordListBuilder() {
        return getWordListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * List of words or phrases to search for.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordListOrBuilder getWordListOrBuilder() {
        if ((sourceCase_ == 1) && (wordListBuilder_ != null)) {
          return wordListBuilder_.getMessageOrBuilder();
        } else {
          if (sourceCase_ == 1) {
            return (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) source_;
          }
          return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * List of words or phrases to search for.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList word_list = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.Builder, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordListOrBuilder> 
          getWordListFieldBuilder() {
        if (wordListBuilder_ == null) {
          if (!(sourceCase_ == 1)) {
            source_ = com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.getDefaultInstance();
          }
          wordListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList.Builder, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordListOrBuilder>(
                  (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.WordList) source_,
                  getParentForChildren(),
                  isClean());
          source_ = null;
        }
        sourceCase_ = 1;
        onChanged();;
        return wordListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2beta1.CustomInfoType.Dictionary)
    }

    // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2beta1.CustomInfoType.Dictionary)
    private static final com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary();
    }

    public static com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Dictionary>
        PARSER = new com.google.protobuf.AbstractParser<Dictionary>() {
      public Dictionary parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Dictionary(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Dictionary> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Dictionary> getParserForType() {
      return PARSER;
    }

    public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int typeCase_ = 0;
  private java.lang.Object type_;
  public enum TypeCase
      implements com.google.protobuf.Internal.EnumLite {
    DICTIONARY(2),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 2: return DICTIONARY;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  public static final int INFO_TYPE_FIELD_NUMBER = 1;
  private com.google.privacy.dlp.v2beta1.InfoType infoType_;
  /**
   * <pre>
   * Info type configuration. All custom info types must have configurations
   * that do not conflict with built-in info types or other custom info types.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
   */
  public boolean hasInfoType() {
    return infoType_ != null;
  }
  /**
   * <pre>
   * Info type configuration. All custom info types must have configurations
   * that do not conflict with built-in info types or other custom info types.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
   */
  public com.google.privacy.dlp.v2beta1.InfoType getInfoType() {
    return infoType_ == null ? com.google.privacy.dlp.v2beta1.InfoType.getDefaultInstance() : infoType_;
  }
  /**
   * <pre>
   * Info type configuration. All custom info types must have configurations
   * that do not conflict with built-in info types or other custom info types.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
   */
  public com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder getInfoTypeOrBuilder() {
    return getInfoType();
  }

  public static final int DICTIONARY_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Dictionary-based custom info type.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
   */
  public boolean hasDictionary() {
    return typeCase_ == 2;
  }
  /**
   * <pre>
   * Dictionary-based custom info type.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
   */
  public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary getDictionary() {
    if (typeCase_ == 2) {
       return (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) type_;
    }
    return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.getDefaultInstance();
  }
  /**
   * <pre>
   * Dictionary-based custom info type.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
   */
  public com.google.privacy.dlp.v2beta1.CustomInfoType.DictionaryOrBuilder getDictionaryOrBuilder() {
    if (typeCase_ == 2) {
       return (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) type_;
    }
    return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (infoType_ != null) {
      output.writeMessage(1, getInfoType());
    }
    if (typeCase_ == 2) {
      output.writeMessage(2, (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) type_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (infoType_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getInfoType());
    }
    if (typeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) type_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.privacy.dlp.v2beta1.CustomInfoType)) {
      return super.equals(obj);
    }
    com.google.privacy.dlp.v2beta1.CustomInfoType other = (com.google.privacy.dlp.v2beta1.CustomInfoType) obj;

    boolean result = true;
    result = result && (hasInfoType() == other.hasInfoType());
    if (hasInfoType()) {
      result = result && getInfoType()
          .equals(other.getInfoType());
    }
    result = result && getTypeCase().equals(
        other.getTypeCase());
    if (!result) return false;
    switch (typeCase_) {
      case 2:
        result = result && getDictionary()
            .equals(other.getDictionary());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInfoType()) {
      hash = (37 * hash) + INFO_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getInfoType().hashCode();
    }
    switch (typeCase_) {
      case 2:
        hash = (37 * hash) + DICTIONARY_FIELD_NUMBER;
        hash = (53 * hash) + getDictionary().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2beta1.CustomInfoType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.privacy.dlp.v2beta1.CustomInfoType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Custom information type provided by the user. Used to find domain-specific
   * sensitive information configurable to the data in question.
   * </pre>
   *
   * Protobuf type {@code google.privacy.dlp.v2beta1.CustomInfoType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2beta1.CustomInfoType)
      com.google.privacy.dlp.v2beta1.CustomInfoTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2beta1.CustomInfoType.class, com.google.privacy.dlp.v2beta1.CustomInfoType.Builder.class);
    }

    // Construct using com.google.privacy.dlp.v2beta1.CustomInfoType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (infoTypeBuilder_ == null) {
        infoType_ = null;
      } else {
        infoType_ = null;
        infoTypeBuilder_ = null;
      }
      typeCase_ = 0;
      type_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.privacy.dlp.v2beta1.DlpStorage.internal_static_google_privacy_dlp_v2beta1_CustomInfoType_descriptor;
    }

    public com.google.privacy.dlp.v2beta1.CustomInfoType getDefaultInstanceForType() {
      return com.google.privacy.dlp.v2beta1.CustomInfoType.getDefaultInstance();
    }

    public com.google.privacy.dlp.v2beta1.CustomInfoType build() {
      com.google.privacy.dlp.v2beta1.CustomInfoType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.privacy.dlp.v2beta1.CustomInfoType buildPartial() {
      com.google.privacy.dlp.v2beta1.CustomInfoType result = new com.google.privacy.dlp.v2beta1.CustomInfoType(this);
      if (infoTypeBuilder_ == null) {
        result.infoType_ = infoType_;
      } else {
        result.infoType_ = infoTypeBuilder_.build();
      }
      if (typeCase_ == 2) {
        if (dictionaryBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = dictionaryBuilder_.build();
        }
      }
      result.typeCase_ = typeCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.privacy.dlp.v2beta1.CustomInfoType) {
        return mergeFrom((com.google.privacy.dlp.v2beta1.CustomInfoType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.privacy.dlp.v2beta1.CustomInfoType other) {
      if (other == com.google.privacy.dlp.v2beta1.CustomInfoType.getDefaultInstance()) return this;
      if (other.hasInfoType()) {
        mergeInfoType(other.getInfoType());
      }
      switch (other.getTypeCase()) {
        case DICTIONARY: {
          mergeDictionary(other.getDictionary());
          break;
        }
        case TYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.privacy.dlp.v2beta1.CustomInfoType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.privacy.dlp.v2beta1.CustomInfoType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int typeCase_ = 0;
    private java.lang.Object type_;
    public TypeCase
        getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public Builder clearType() {
      typeCase_ = 0;
      type_ = null;
      onChanged();
      return this;
    }


    private com.google.privacy.dlp.v2beta1.InfoType infoType_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.privacy.dlp.v2beta1.InfoType, com.google.privacy.dlp.v2beta1.InfoType.Builder, com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder> infoTypeBuilder_;
    /**
     * <pre>
     * Info type configuration. All custom info types must have configurations
     * that do not conflict with built-in info types or other custom info types.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    public boolean hasInfoType() {
      return infoTypeBuilder_ != null || infoType_ != null;
    }
    /**
     * <pre>
     * Info type configuration. All custom info types must have configurations
     * that do not conflict with built-in info types or other custom info types.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.InfoType getInfoType() {
      if (infoTypeBuilder_ == null) {
        return infoType_ == null ? com.google.privacy.dlp.v2beta1.InfoType.getDefaultInstance() : infoType_;
      } else {
        return infoTypeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Info type configuration. All custom info types must have configurations
     * that do not conflict with built-in info types or other custom info types.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    public Builder setInfoType(com.google.privacy.dlp.v2beta1.InfoType value) {
      if (infoTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        infoType_ = value;
        onChanged();
      } else {
        infoTypeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Info type configuration. All custom info types must have configurations
     * that do not conflict with built-in info types or other custom info types.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    public Builder setInfoType(
        com.google.privacy.dlp.v2beta1.InfoType.Builder builderForValue) {
      if (infoTypeBuilder_ == null) {
        infoType_ = builderForValue.build();
        onChanged();
      } else {
        infoTypeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Info type configuration. All custom info types must have configurations
     * that do not conflict with built-in info types or other custom info types.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    public Builder mergeInfoType(com.google.privacy.dlp.v2beta1.InfoType value) {
      if (infoTypeBuilder_ == null) {
        if (infoType_ != null) {
          infoType_ =
            com.google.privacy.dlp.v2beta1.InfoType.newBuilder(infoType_).mergeFrom(value).buildPartial();
        } else {
          infoType_ = value;
        }
        onChanged();
      } else {
        infoTypeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Info type configuration. All custom info types must have configurations
     * that do not conflict with built-in info types or other custom info types.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    public Builder clearInfoType() {
      if (infoTypeBuilder_ == null) {
        infoType_ = null;
        onChanged();
      } else {
        infoType_ = null;
        infoTypeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Info type configuration. All custom info types must have configurations
     * that do not conflict with built-in info types or other custom info types.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.InfoType.Builder getInfoTypeBuilder() {
      
      onChanged();
      return getInfoTypeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Info type configuration. All custom info types must have configurations
     * that do not conflict with built-in info types or other custom info types.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder getInfoTypeOrBuilder() {
      if (infoTypeBuilder_ != null) {
        return infoTypeBuilder_.getMessageOrBuilder();
      } else {
        return infoType_ == null ?
            com.google.privacy.dlp.v2beta1.InfoType.getDefaultInstance() : infoType_;
      }
    }
    /**
     * <pre>
     * Info type configuration. All custom info types must have configurations
     * that do not conflict with built-in info types or other custom info types.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.InfoType info_type = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.privacy.dlp.v2beta1.InfoType, com.google.privacy.dlp.v2beta1.InfoType.Builder, com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder> 
        getInfoTypeFieldBuilder() {
      if (infoTypeBuilder_ == null) {
        infoTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.privacy.dlp.v2beta1.InfoType, com.google.privacy.dlp.v2beta1.InfoType.Builder, com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder>(
                getInfoType(),
                getParentForChildren(),
                isClean());
        infoType_ = null;
      }
      return infoTypeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.Builder, com.google.privacy.dlp.v2beta1.CustomInfoType.DictionaryOrBuilder> dictionaryBuilder_;
    /**
     * <pre>
     * Dictionary-based custom info type.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
     */
    public boolean hasDictionary() {
      return typeCase_ == 2;
    }
    /**
     * <pre>
     * Dictionary-based custom info type.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
     */
    public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary getDictionary() {
      if (dictionaryBuilder_ == null) {
        if (typeCase_ == 2) {
          return (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) type_;
        }
        return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.getDefaultInstance();
      } else {
        if (typeCase_ == 2) {
          return dictionaryBuilder_.getMessage();
        }
        return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Dictionary-based custom info type.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
     */
    public Builder setDictionary(com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary value) {
      if (dictionaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        dictionaryBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Dictionary-based custom info type.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
     */
    public Builder setDictionary(
        com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.Builder builderForValue) {
      if (dictionaryBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        dictionaryBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Dictionary-based custom info type.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
     */
    public Builder mergeDictionary(com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary value) {
      if (dictionaryBuilder_ == null) {
        if (typeCase_ == 2 &&
            type_ != com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.getDefaultInstance()) {
          type_ = com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.newBuilder((com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 2) {
          dictionaryBuilder_.mergeFrom(value);
        }
        dictionaryBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Dictionary-based custom info type.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
     */
    public Builder clearDictionary() {
      if (dictionaryBuilder_ == null) {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
        }
        dictionaryBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Dictionary-based custom info type.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
     */
    public com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.Builder getDictionaryBuilder() {
      return getDictionaryFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Dictionary-based custom info type.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
     */
    public com.google.privacy.dlp.v2beta1.CustomInfoType.DictionaryOrBuilder getDictionaryOrBuilder() {
      if ((typeCase_ == 2) && (dictionaryBuilder_ != null)) {
        return dictionaryBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 2) {
          return (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) type_;
        }
        return com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Dictionary-based custom info type.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary dictionary = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.Builder, com.google.privacy.dlp.v2beta1.CustomInfoType.DictionaryOrBuilder> 
        getDictionaryFieldBuilder() {
      if (dictionaryBuilder_ == null) {
        if (!(typeCase_ == 2)) {
          type_ = com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.getDefaultInstance();
        }
        dictionaryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary, com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary.Builder, com.google.privacy.dlp.v2beta1.CustomInfoType.DictionaryOrBuilder>(
                (com.google.privacy.dlp.v2beta1.CustomInfoType.Dictionary) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 2;
      onChanged();;
      return dictionaryBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2beta1.CustomInfoType)
  }

  // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2beta1.CustomInfoType)
  private static final com.google.privacy.dlp.v2beta1.CustomInfoType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.privacy.dlp.v2beta1.CustomInfoType();
  }

  public static com.google.privacy.dlp.v2beta1.CustomInfoType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CustomInfoType>
      PARSER = new com.google.protobuf.AbstractParser<CustomInfoType>() {
    public CustomInfoType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CustomInfoType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CustomInfoType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CustomInfoType> getParserForType() {
    return PARSER;
  }

  public com.google.privacy.dlp.v2beta1.CustomInfoType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

