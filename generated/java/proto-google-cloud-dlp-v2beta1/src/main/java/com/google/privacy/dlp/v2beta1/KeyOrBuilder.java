// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2beta1/storage.proto

package com.google.privacy.dlp.v2beta1;

public interface KeyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2beta1.Key)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Entities are partitioned into subsets, currently identified by a project
   * ID and namespace ID.
   * Queries are scoped to a single partition.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.PartitionId partition_id = 1;</code>
   */
  boolean hasPartitionId();
  /**
   * <pre>
   * Entities are partitioned into subsets, currently identified by a project
   * ID and namespace ID.
   * Queries are scoped to a single partition.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.PartitionId partition_id = 1;</code>
   */
  com.google.privacy.dlp.v2beta1.PartitionId getPartitionId();
  /**
   * <pre>
   * Entities are partitioned into subsets, currently identified by a project
   * ID and namespace ID.
   * Queries are scoped to a single partition.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.PartitionId partition_id = 1;</code>
   */
  com.google.privacy.dlp.v2beta1.PartitionIdOrBuilder getPartitionIdOrBuilder();

  /**
   * <pre>
   * The entity path.
   * An entity path consists of one or more elements composed of a kind and a
   * string or numerical identifier, which identify entities. The first
   * element identifies a _root entity_, the second element identifies
   * a _child_ of the root entity, the third element identifies a child of the
   * second entity, and so forth. The entities identified by all prefixes of
   * the path are called the element's _ancestors_.
   * A path can never be empty, and a path can have at most 100 elements.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.Key.PathElement path = 2;</code>
   */
  java.util.List<com.google.privacy.dlp.v2beta1.Key.PathElement> 
      getPathList();
  /**
   * <pre>
   * The entity path.
   * An entity path consists of one or more elements composed of a kind and a
   * string or numerical identifier, which identify entities. The first
   * element identifies a _root entity_, the second element identifies
   * a _child_ of the root entity, the third element identifies a child of the
   * second entity, and so forth. The entities identified by all prefixes of
   * the path are called the element's _ancestors_.
   * A path can never be empty, and a path can have at most 100 elements.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.Key.PathElement path = 2;</code>
   */
  com.google.privacy.dlp.v2beta1.Key.PathElement getPath(int index);
  /**
   * <pre>
   * The entity path.
   * An entity path consists of one or more elements composed of a kind and a
   * string or numerical identifier, which identify entities. The first
   * element identifies a _root entity_, the second element identifies
   * a _child_ of the root entity, the third element identifies a child of the
   * second entity, and so forth. The entities identified by all prefixes of
   * the path are called the element's _ancestors_.
   * A path can never be empty, and a path can have at most 100 elements.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.Key.PathElement path = 2;</code>
   */
  int getPathCount();
  /**
   * <pre>
   * The entity path.
   * An entity path consists of one or more elements composed of a kind and a
   * string or numerical identifier, which identify entities. The first
   * element identifies a _root entity_, the second element identifies
   * a _child_ of the root entity, the third element identifies a child of the
   * second entity, and so forth. The entities identified by all prefixes of
   * the path are called the element's _ancestors_.
   * A path can never be empty, and a path can have at most 100 elements.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.Key.PathElement path = 2;</code>
   */
  java.util.List<? extends com.google.privacy.dlp.v2beta1.Key.PathElementOrBuilder> 
      getPathOrBuilderList();
  /**
   * <pre>
   * The entity path.
   * An entity path consists of one or more elements composed of a kind and a
   * string or numerical identifier, which identify entities. The first
   * element identifies a _root entity_, the second element identifies
   * a _child_ of the root entity, the third element identifies a child of the
   * second entity, and so forth. The entities identified by all prefixes of
   * the path are called the element's _ancestors_.
   * A path can never be empty, and a path can have at most 100 elements.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.Key.PathElement path = 2;</code>
   */
  com.google.privacy.dlp.v2beta1.Key.PathElementOrBuilder getPathOrBuilder(
      int index);
}
