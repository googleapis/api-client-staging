// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2beta1/storage.proto

package com.google.privacy.dlp.v2beta1;

public interface DatastoreOptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2beta1.DatastoreOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A partition ID identifies a grouping of entities. The grouping is always
   * by project and namespace, however the namespace ID may be empty.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.PartitionId partition_id = 1;</code>
   */
  boolean hasPartitionId();
  /**
   * <pre>
   * A partition ID identifies a grouping of entities. The grouping is always
   * by project and namespace, however the namespace ID may be empty.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.PartitionId partition_id = 1;</code>
   */
  com.google.privacy.dlp.v2beta1.PartitionId getPartitionId();
  /**
   * <pre>
   * A partition ID identifies a grouping of entities. The grouping is always
   * by project and namespace, however the namespace ID may be empty.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.PartitionId partition_id = 1;</code>
   */
  com.google.privacy.dlp.v2beta1.PartitionIdOrBuilder getPartitionIdOrBuilder();

  /**
   * <pre>
   * The kind to process.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.KindExpression kind = 2;</code>
   */
  boolean hasKind();
  /**
   * <pre>
   * The kind to process.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.KindExpression kind = 2;</code>
   */
  com.google.privacy.dlp.v2beta1.KindExpression getKind();
  /**
   * <pre>
   * The kind to process.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2beta1.KindExpression kind = 2;</code>
   */
  com.google.privacy.dlp.v2beta1.KindExpressionOrBuilder getKindOrBuilder();

  /**
   * <pre>
   * Properties to scan. If none are specified, all properties will be scanned
   * by default.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.Projection projection = 3;</code>
   */
  java.util.List<com.google.privacy.dlp.v2beta1.Projection> 
      getProjectionList();
  /**
   * <pre>
   * Properties to scan. If none are specified, all properties will be scanned
   * by default.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.Projection projection = 3;</code>
   */
  com.google.privacy.dlp.v2beta1.Projection getProjection(int index);
  /**
   * <pre>
   * Properties to scan. If none are specified, all properties will be scanned
   * by default.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.Projection projection = 3;</code>
   */
  int getProjectionCount();
  /**
   * <pre>
   * Properties to scan. If none are specified, all properties will be scanned
   * by default.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.Projection projection = 3;</code>
   */
  java.util.List<? extends com.google.privacy.dlp.v2beta1.ProjectionOrBuilder> 
      getProjectionOrBuilderList();
  /**
   * <pre>
   * Properties to scan. If none are specified, all properties will be scanned
   * by default.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.Projection projection = 3;</code>
   */
  com.google.privacy.dlp.v2beta1.ProjectionOrBuilder getProjectionOrBuilder(
      int index);
}
