// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2beta1/dlp.proto

package com.google.privacy.dlp.v2beta1;

/**
 * <pre>
 * A condition for determining whether a transformation should be applied to
 * a field.
 * </pre>
 *
 * Protobuf type {@code google.privacy.dlp.v2beta1.RecordCondition}
 */
public  final class RecordCondition extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2beta1.RecordCondition)
    RecordConditionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RecordCondition.newBuilder() to construct.
  private RecordCondition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RecordCondition() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RecordCondition(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 26: {
            com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.Builder subBuilder = null;
            if (expressions_ != null) {
              subBuilder = expressions_.toBuilder();
            }
            expressions_ = input.readMessage(com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(expressions_);
              expressions_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.privacy.dlp.v2beta1.RecordCondition.class, com.google.privacy.dlp.v2beta1.RecordCondition.Builder.class);
  }

  public interface ConditionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2beta1.RecordCondition.Condition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Field within the record this condition is evaluated against. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
     */
    boolean hasField();
    /**
     * <pre>
     * Field within the record this condition is evaluated against. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
     */
    com.google.privacy.dlp.v2beta1.FieldId getField();
    /**
     * <pre>
     * Field within the record this condition is evaluated against. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
     */
    com.google.privacy.dlp.v2beta1.FieldIdOrBuilder getFieldOrBuilder();

    /**
     * <pre>
     * Operator used to compare the field or info type to the value. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.RelationalOperator operator = 3;</code>
     */
    int getOperatorValue();
    /**
     * <pre>
     * Operator used to compare the field or info type to the value. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.RelationalOperator operator = 3;</code>
     */
    com.google.privacy.dlp.v2beta1.RelationalOperator getOperator();

    /**
     * <pre>
     * Value to compare against. [Required, except for `EXISTS` tests.]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
     */
    boolean hasValue();
    /**
     * <pre>
     * Value to compare against. [Required, except for `EXISTS` tests.]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
     */
    com.google.privacy.dlp.v2beta1.Value getValue();
    /**
     * <pre>
     * Value to compare against. [Required, except for `EXISTS` tests.]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
     */
    com.google.privacy.dlp.v2beta1.ValueOrBuilder getValueOrBuilder();
  }
  /**
   * <pre>
   * The field type of `value` and `field` do not need to match to be
   * considered equal, but not all comparisons are possible.
   * A `value` of type:
   * - `string` can be compared against all other types
   * - `boolean` can only be compared against other booleans
   * - `integer` can be compared against doubles or a string if the string value
   * can be parsed as an integer.
   * - `double` can be compared against integers or a string if the string can
   * be parsed as a double.
   * - `Timestamp` can be compared against strings in RFC 3339 date string
   * format.
   * - `TimeOfDay` can be compared against timestamps and strings in the format
   * of 'HH:mm:ss'.
   * If we fail to compare do to type mismatch, a warning will be given and
   * the condition will evaluate to false.
   * </pre>
   *
   * Protobuf type {@code google.privacy.dlp.v2beta1.RecordCondition.Condition}
   */
  public  static final class Condition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2beta1.RecordCondition.Condition)
      ConditionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Condition.newBuilder() to construct.
    private Condition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Condition() {
      operator_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Condition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.privacy.dlp.v2beta1.FieldId.Builder subBuilder = null;
              if (field_ != null) {
                subBuilder = field_.toBuilder();
              }
              field_ = input.readMessage(com.google.privacy.dlp.v2beta1.FieldId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(field_);
                field_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              operator_ = rawValue;
              break;
            }
            case 34: {
              com.google.privacy.dlp.v2beta1.Value.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(com.google.privacy.dlp.v2beta1.Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Condition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Condition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2beta1.RecordCondition.Condition.class, com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder.class);
    }

    public static final int FIELD_FIELD_NUMBER = 1;
    private com.google.privacy.dlp.v2beta1.FieldId field_;
    /**
     * <pre>
     * Field within the record this condition is evaluated against. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
     */
    public boolean hasField() {
      return field_ != null;
    }
    /**
     * <pre>
     * Field within the record this condition is evaluated against. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.FieldId getField() {
      return field_ == null ? com.google.privacy.dlp.v2beta1.FieldId.getDefaultInstance() : field_;
    }
    /**
     * <pre>
     * Field within the record this condition is evaluated against. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.FieldIdOrBuilder getFieldOrBuilder() {
      return getField();
    }

    public static final int OPERATOR_FIELD_NUMBER = 3;
    private int operator_;
    /**
     * <pre>
     * Operator used to compare the field or info type to the value. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.RelationalOperator operator = 3;</code>
     */
    public int getOperatorValue() {
      return operator_;
    }
    /**
     * <pre>
     * Operator used to compare the field or info type to the value. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.RelationalOperator operator = 3;</code>
     */
    public com.google.privacy.dlp.v2beta1.RelationalOperator getOperator() {
      com.google.privacy.dlp.v2beta1.RelationalOperator result = com.google.privacy.dlp.v2beta1.RelationalOperator.valueOf(operator_);
      return result == null ? com.google.privacy.dlp.v2beta1.RelationalOperator.UNRECOGNIZED : result;
    }

    public static final int VALUE_FIELD_NUMBER = 4;
    private com.google.privacy.dlp.v2beta1.Value value_;
    /**
     * <pre>
     * Value to compare against. [Required, except for `EXISTS` tests.]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
     */
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <pre>
     * Value to compare against. [Required, except for `EXISTS` tests.]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
     */
    public com.google.privacy.dlp.v2beta1.Value getValue() {
      return value_ == null ? com.google.privacy.dlp.v2beta1.Value.getDefaultInstance() : value_;
    }
    /**
     * <pre>
     * Value to compare against. [Required, except for `EXISTS` tests.]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
     */
    public com.google.privacy.dlp.v2beta1.ValueOrBuilder getValueOrBuilder() {
      return getValue();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (field_ != null) {
        output.writeMessage(1, getField());
      }
      if (operator_ != com.google.privacy.dlp.v2beta1.RelationalOperator.RELATIONAL_OPERATOR_UNSPECIFIED.getNumber()) {
        output.writeEnum(3, operator_);
      }
      if (value_ != null) {
        output.writeMessage(4, getValue());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (field_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getField());
      }
      if (operator_ != com.google.privacy.dlp.v2beta1.RelationalOperator.RELATIONAL_OPERATOR_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, operator_);
      }
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getValue());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.privacy.dlp.v2beta1.RecordCondition.Condition)) {
        return super.equals(obj);
      }
      com.google.privacy.dlp.v2beta1.RecordCondition.Condition other = (com.google.privacy.dlp.v2beta1.RecordCondition.Condition) obj;

      boolean result = true;
      result = result && (hasField() == other.hasField());
      if (hasField()) {
        result = result && getField()
            .equals(other.getField());
      }
      result = result && operator_ == other.operator_;
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && getValue()
            .equals(other.getValue());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasField()) {
        hash = (37 * hash) + FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getField().hashCode();
      }
      hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
      hash = (53 * hash) + operator_;
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.privacy.dlp.v2beta1.RecordCondition.Condition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The field type of `value` and `field` do not need to match to be
     * considered equal, but not all comparisons are possible.
     * A `value` of type:
     * - `string` can be compared against all other types
     * - `boolean` can only be compared against other booleans
     * - `integer` can be compared against doubles or a string if the string value
     * can be parsed as an integer.
     * - `double` can be compared against integers or a string if the string can
     * be parsed as a double.
     * - `Timestamp` can be compared against strings in RFC 3339 date string
     * format.
     * - `TimeOfDay` can be compared against timestamps and strings in the format
     * of 'HH:mm:ss'.
     * If we fail to compare do to type mismatch, a warning will be given and
     * the condition will evaluate to false.
     * </pre>
     *
     * Protobuf type {@code google.privacy.dlp.v2beta1.RecordCondition.Condition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2beta1.RecordCondition.Condition)
        com.google.privacy.dlp.v2beta1.RecordCondition.ConditionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Condition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Condition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.privacy.dlp.v2beta1.RecordCondition.Condition.class, com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder.class);
      }

      // Construct using com.google.privacy.dlp.v2beta1.RecordCondition.Condition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (fieldBuilder_ == null) {
          field_ = null;
        } else {
          field_ = null;
          fieldBuilder_ = null;
        }
        operator_ = 0;

        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Condition_descriptor;
      }

      public com.google.privacy.dlp.v2beta1.RecordCondition.Condition getDefaultInstanceForType() {
        return com.google.privacy.dlp.v2beta1.RecordCondition.Condition.getDefaultInstance();
      }

      public com.google.privacy.dlp.v2beta1.RecordCondition.Condition build() {
        com.google.privacy.dlp.v2beta1.RecordCondition.Condition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.privacy.dlp.v2beta1.RecordCondition.Condition buildPartial() {
        com.google.privacy.dlp.v2beta1.RecordCondition.Condition result = new com.google.privacy.dlp.v2beta1.RecordCondition.Condition(this);
        if (fieldBuilder_ == null) {
          result.field_ = field_;
        } else {
          result.field_ = fieldBuilder_.build();
        }
        result.operator_ = operator_;
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.privacy.dlp.v2beta1.RecordCondition.Condition) {
          return mergeFrom((com.google.privacy.dlp.v2beta1.RecordCondition.Condition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.privacy.dlp.v2beta1.RecordCondition.Condition other) {
        if (other == com.google.privacy.dlp.v2beta1.RecordCondition.Condition.getDefaultInstance()) return this;
        if (other.hasField()) {
          mergeField(other.getField());
        }
        if (other.operator_ != 0) {
          setOperatorValue(other.getOperatorValue());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.privacy.dlp.v2beta1.RecordCondition.Condition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.privacy.dlp.v2beta1.RecordCondition.Condition) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.privacy.dlp.v2beta1.FieldId field_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.FieldId, com.google.privacy.dlp.v2beta1.FieldId.Builder, com.google.privacy.dlp.v2beta1.FieldIdOrBuilder> fieldBuilder_;
      /**
       * <pre>
       * Field within the record this condition is evaluated against. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
       */
      public boolean hasField() {
        return fieldBuilder_ != null || field_ != null;
      }
      /**
       * <pre>
       * Field within the record this condition is evaluated against. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.FieldId getField() {
        if (fieldBuilder_ == null) {
          return field_ == null ? com.google.privacy.dlp.v2beta1.FieldId.getDefaultInstance() : field_;
        } else {
          return fieldBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Field within the record this condition is evaluated against. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
       */
      public Builder setField(com.google.privacy.dlp.v2beta1.FieldId value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          field_ = value;
          onChanged();
        } else {
          fieldBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Field within the record this condition is evaluated against. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
       */
      public Builder setField(
          com.google.privacy.dlp.v2beta1.FieldId.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          field_ = builderForValue.build();
          onChanged();
        } else {
          fieldBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Field within the record this condition is evaluated against. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
       */
      public Builder mergeField(com.google.privacy.dlp.v2beta1.FieldId value) {
        if (fieldBuilder_ == null) {
          if (field_ != null) {
            field_ =
              com.google.privacy.dlp.v2beta1.FieldId.newBuilder(field_).mergeFrom(value).buildPartial();
          } else {
            field_ = value;
          }
          onChanged();
        } else {
          fieldBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Field within the record this condition is evaluated against. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
       */
      public Builder clearField() {
        if (fieldBuilder_ == null) {
          field_ = null;
          onChanged();
        } else {
          field_ = null;
          fieldBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Field within the record this condition is evaluated against. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.FieldId.Builder getFieldBuilder() {
        
        onChanged();
        return getFieldFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Field within the record this condition is evaluated against. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.FieldIdOrBuilder getFieldOrBuilder() {
        if (fieldBuilder_ != null) {
          return fieldBuilder_.getMessageOrBuilder();
        } else {
          return field_ == null ?
              com.google.privacy.dlp.v2beta1.FieldId.getDefaultInstance() : field_;
        }
      }
      /**
       * <pre>
       * Field within the record this condition is evaluated against. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.FieldId field = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.FieldId, com.google.privacy.dlp.v2beta1.FieldId.Builder, com.google.privacy.dlp.v2beta1.FieldIdOrBuilder> 
          getFieldFieldBuilder() {
        if (fieldBuilder_ == null) {
          fieldBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.privacy.dlp.v2beta1.FieldId, com.google.privacy.dlp.v2beta1.FieldId.Builder, com.google.privacy.dlp.v2beta1.FieldIdOrBuilder>(
                  getField(),
                  getParentForChildren(),
                  isClean());
          field_ = null;
        }
        return fieldBuilder_;
      }

      private int operator_ = 0;
      /**
       * <pre>
       * Operator used to compare the field or info type to the value. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.RelationalOperator operator = 3;</code>
       */
      public int getOperatorValue() {
        return operator_;
      }
      /**
       * <pre>
       * Operator used to compare the field or info type to the value. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.RelationalOperator operator = 3;</code>
       */
      public Builder setOperatorValue(int value) {
        operator_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Operator used to compare the field or info type to the value. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.RelationalOperator operator = 3;</code>
       */
      public com.google.privacy.dlp.v2beta1.RelationalOperator getOperator() {
        com.google.privacy.dlp.v2beta1.RelationalOperator result = com.google.privacy.dlp.v2beta1.RelationalOperator.valueOf(operator_);
        return result == null ? com.google.privacy.dlp.v2beta1.RelationalOperator.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Operator used to compare the field or info type to the value. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.RelationalOperator operator = 3;</code>
       */
      public Builder setOperator(com.google.privacy.dlp.v2beta1.RelationalOperator value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        operator_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Operator used to compare the field or info type to the value. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.RelationalOperator operator = 3;</code>
       */
      public Builder clearOperator() {
        
        operator_ = 0;
        onChanged();
        return this;
      }

      private com.google.privacy.dlp.v2beta1.Value value_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.Value, com.google.privacy.dlp.v2beta1.Value.Builder, com.google.privacy.dlp.v2beta1.ValueOrBuilder> valueBuilder_;
      /**
       * <pre>
       * Value to compare against. [Required, except for `EXISTS` tests.]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <pre>
       * Value to compare against. [Required, except for `EXISTS` tests.]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
       */
      public com.google.privacy.dlp.v2beta1.Value getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? com.google.privacy.dlp.v2beta1.Value.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Value to compare against. [Required, except for `EXISTS` tests.]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
       */
      public Builder setValue(com.google.privacy.dlp.v2beta1.Value value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Value to compare against. [Required, except for `EXISTS` tests.]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
       */
      public Builder setValue(
          com.google.privacy.dlp.v2beta1.Value.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Value to compare against. [Required, except for `EXISTS` tests.]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
       */
      public Builder mergeValue(com.google.privacy.dlp.v2beta1.Value value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              com.google.privacy.dlp.v2beta1.Value.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Value to compare against. [Required, except for `EXISTS` tests.]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Value to compare against. [Required, except for `EXISTS` tests.]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
       */
      public com.google.privacy.dlp.v2beta1.Value.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Value to compare against. [Required, except for `EXISTS` tests.]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
       */
      public com.google.privacy.dlp.v2beta1.ValueOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              com.google.privacy.dlp.v2beta1.Value.getDefaultInstance() : value_;
        }
      }
      /**
       * <pre>
       * Value to compare against. [Required, except for `EXISTS` tests.]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.Value value = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.Value, com.google.privacy.dlp.v2beta1.Value.Builder, com.google.privacy.dlp.v2beta1.ValueOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.privacy.dlp.v2beta1.Value, com.google.privacy.dlp.v2beta1.Value.Builder, com.google.privacy.dlp.v2beta1.ValueOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2beta1.RecordCondition.Condition)
    }

    // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2beta1.RecordCondition.Condition)
    private static final com.google.privacy.dlp.v2beta1.RecordCondition.Condition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.privacy.dlp.v2beta1.RecordCondition.Condition();
    }

    public static com.google.privacy.dlp.v2beta1.RecordCondition.Condition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Condition>
        PARSER = new com.google.protobuf.AbstractParser<Condition>() {
      public Condition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Condition(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Condition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Condition> getParserForType() {
      return PARSER;
    }

    public com.google.privacy.dlp.v2beta1.RecordCondition.Condition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConditionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2beta1.RecordCondition.Conditions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
     */
    java.util.List<com.google.privacy.dlp.v2beta1.RecordCondition.Condition> 
        getConditionsList();
    /**
     * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
     */
    com.google.privacy.dlp.v2beta1.RecordCondition.Condition getConditions(int index);
    /**
     * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
     */
    int getConditionsCount();
    /**
     * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
     */
    java.util.List<? extends com.google.privacy.dlp.v2beta1.RecordCondition.ConditionOrBuilder> 
        getConditionsOrBuilderList();
    /**
     * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
     */
    com.google.privacy.dlp.v2beta1.RecordCondition.ConditionOrBuilder getConditionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code google.privacy.dlp.v2beta1.RecordCondition.Conditions}
   */
  public  static final class Conditions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2beta1.RecordCondition.Conditions)
      ConditionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Conditions.newBuilder() to construct.
    private Conditions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Conditions() {
      conditions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Conditions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                conditions_ = new java.util.ArrayList<com.google.privacy.dlp.v2beta1.RecordCondition.Condition>();
                mutable_bitField0_ |= 0x00000001;
              }
              conditions_.add(
                  input.readMessage(com.google.privacy.dlp.v2beta1.RecordCondition.Condition.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          conditions_ = java.util.Collections.unmodifiableList(conditions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Conditions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Conditions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.class, com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.Builder.class);
    }

    public static final int CONDITIONS_FIELD_NUMBER = 1;
    private java.util.List<com.google.privacy.dlp.v2beta1.RecordCondition.Condition> conditions_;
    /**
     * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
     */
    public java.util.List<com.google.privacy.dlp.v2beta1.RecordCondition.Condition> getConditionsList() {
      return conditions_;
    }
    /**
     * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
     */
    public java.util.List<? extends com.google.privacy.dlp.v2beta1.RecordCondition.ConditionOrBuilder> 
        getConditionsOrBuilderList() {
      return conditions_;
    }
    /**
     * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
     */
    public int getConditionsCount() {
      return conditions_.size();
    }
    /**
     * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.RecordCondition.Condition getConditions(int index) {
      return conditions_.get(index);
    }
    /**
     * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.RecordCondition.ConditionOrBuilder getConditionsOrBuilder(
        int index) {
      return conditions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < conditions_.size(); i++) {
        output.writeMessage(1, conditions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < conditions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, conditions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.privacy.dlp.v2beta1.RecordCondition.Conditions)) {
        return super.equals(obj);
      }
      com.google.privacy.dlp.v2beta1.RecordCondition.Conditions other = (com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) obj;

      boolean result = true;
      result = result && getConditionsList()
          .equals(other.getConditionsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getConditionsCount() > 0) {
        hash = (37 * hash) + CONDITIONS_FIELD_NUMBER;
        hash = (53 * hash) + getConditionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.privacy.dlp.v2beta1.RecordCondition.Conditions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.privacy.dlp.v2beta1.RecordCondition.Conditions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2beta1.RecordCondition.Conditions)
        com.google.privacy.dlp.v2beta1.RecordCondition.ConditionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Conditions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Conditions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.class, com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.Builder.class);
      }

      // Construct using com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getConditionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (conditionsBuilder_ == null) {
          conditions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          conditionsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Conditions_descriptor;
      }

      public com.google.privacy.dlp.v2beta1.RecordCondition.Conditions getDefaultInstanceForType() {
        return com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.getDefaultInstance();
      }

      public com.google.privacy.dlp.v2beta1.RecordCondition.Conditions build() {
        com.google.privacy.dlp.v2beta1.RecordCondition.Conditions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.privacy.dlp.v2beta1.RecordCondition.Conditions buildPartial() {
        com.google.privacy.dlp.v2beta1.RecordCondition.Conditions result = new com.google.privacy.dlp.v2beta1.RecordCondition.Conditions(this);
        int from_bitField0_ = bitField0_;
        if (conditionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            conditions_ = java.util.Collections.unmodifiableList(conditions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.conditions_ = conditions_;
        } else {
          result.conditions_ = conditionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) {
          return mergeFrom((com.google.privacy.dlp.v2beta1.RecordCondition.Conditions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.privacy.dlp.v2beta1.RecordCondition.Conditions other) {
        if (other == com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.getDefaultInstance()) return this;
        if (conditionsBuilder_ == null) {
          if (!other.conditions_.isEmpty()) {
            if (conditions_.isEmpty()) {
              conditions_ = other.conditions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureConditionsIsMutable();
              conditions_.addAll(other.conditions_);
            }
            onChanged();
          }
        } else {
          if (!other.conditions_.isEmpty()) {
            if (conditionsBuilder_.isEmpty()) {
              conditionsBuilder_.dispose();
              conditionsBuilder_ = null;
              conditions_ = other.conditions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              conditionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getConditionsFieldBuilder() : null;
            } else {
              conditionsBuilder_.addAllMessages(other.conditions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.privacy.dlp.v2beta1.RecordCondition.Conditions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.privacy.dlp.v2beta1.RecordCondition.Condition> conditions_ =
        java.util.Collections.emptyList();
      private void ensureConditionsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          conditions_ = new java.util.ArrayList<com.google.privacy.dlp.v2beta1.RecordCondition.Condition>(conditions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.RecordCondition.Condition, com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder, com.google.privacy.dlp.v2beta1.RecordCondition.ConditionOrBuilder> conditionsBuilder_;

      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public java.util.List<com.google.privacy.dlp.v2beta1.RecordCondition.Condition> getConditionsList() {
        if (conditionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(conditions_);
        } else {
          return conditionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public int getConditionsCount() {
        if (conditionsBuilder_ == null) {
          return conditions_.size();
        } else {
          return conditionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.RecordCondition.Condition getConditions(int index) {
        if (conditionsBuilder_ == null) {
          return conditions_.get(index);
        } else {
          return conditionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public Builder setConditions(
          int index, com.google.privacy.dlp.v2beta1.RecordCondition.Condition value) {
        if (conditionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionsIsMutable();
          conditions_.set(index, value);
          onChanged();
        } else {
          conditionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public Builder setConditions(
          int index, com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder builderForValue) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.set(index, builderForValue.build());
          onChanged();
        } else {
          conditionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public Builder addConditions(com.google.privacy.dlp.v2beta1.RecordCondition.Condition value) {
        if (conditionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionsIsMutable();
          conditions_.add(value);
          onChanged();
        } else {
          conditionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public Builder addConditions(
          int index, com.google.privacy.dlp.v2beta1.RecordCondition.Condition value) {
        if (conditionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionsIsMutable();
          conditions_.add(index, value);
          onChanged();
        } else {
          conditionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public Builder addConditions(
          com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder builderForValue) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.add(builderForValue.build());
          onChanged();
        } else {
          conditionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public Builder addConditions(
          int index, com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder builderForValue) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.add(index, builderForValue.build());
          onChanged();
        } else {
          conditionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public Builder addAllConditions(
          java.lang.Iterable<? extends com.google.privacy.dlp.v2beta1.RecordCondition.Condition> values) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, conditions_);
          onChanged();
        } else {
          conditionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public Builder clearConditions() {
        if (conditionsBuilder_ == null) {
          conditions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          conditionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public Builder removeConditions(int index) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.remove(index);
          onChanged();
        } else {
          conditionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder getConditionsBuilder(
          int index) {
        return getConditionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.RecordCondition.ConditionOrBuilder getConditionsOrBuilder(
          int index) {
        if (conditionsBuilder_ == null) {
          return conditions_.get(index);  } else {
          return conditionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public java.util.List<? extends com.google.privacy.dlp.v2beta1.RecordCondition.ConditionOrBuilder> 
           getConditionsOrBuilderList() {
        if (conditionsBuilder_ != null) {
          return conditionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(conditions_);
        }
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder addConditionsBuilder() {
        return getConditionsFieldBuilder().addBuilder(
            com.google.privacy.dlp.v2beta1.RecordCondition.Condition.getDefaultInstance());
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder addConditionsBuilder(
          int index) {
        return getConditionsFieldBuilder().addBuilder(
            index, com.google.privacy.dlp.v2beta1.RecordCondition.Condition.getDefaultInstance());
      }
      /**
       * <code>repeated .google.privacy.dlp.v2beta1.RecordCondition.Condition conditions = 1;</code>
       */
      public java.util.List<com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder> 
           getConditionsBuilderList() {
        return getConditionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.RecordCondition.Condition, com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder, com.google.privacy.dlp.v2beta1.RecordCondition.ConditionOrBuilder> 
          getConditionsFieldBuilder() {
        if (conditionsBuilder_ == null) {
          conditionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.privacy.dlp.v2beta1.RecordCondition.Condition, com.google.privacy.dlp.v2beta1.RecordCondition.Condition.Builder, com.google.privacy.dlp.v2beta1.RecordCondition.ConditionOrBuilder>(
                  conditions_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          conditions_ = null;
        }
        return conditionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2beta1.RecordCondition.Conditions)
    }

    // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2beta1.RecordCondition.Conditions)
    private static final com.google.privacy.dlp.v2beta1.RecordCondition.Conditions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.privacy.dlp.v2beta1.RecordCondition.Conditions();
    }

    public static com.google.privacy.dlp.v2beta1.RecordCondition.Conditions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Conditions>
        PARSER = new com.google.protobuf.AbstractParser<Conditions>() {
      public Conditions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Conditions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Conditions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Conditions> getParserForType() {
      return PARSER;
    }

    public com.google.privacy.dlp.v2beta1.RecordCondition.Conditions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExpressionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2beta1.RecordCondition.Expressions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The operator to apply to the result of conditions. Default and currently
     * only supported value is `AND`.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
     */
    int getLogicalOperatorValue();
    /**
     * <pre>
     * The operator to apply to the result of conditions. Default and currently
     * only supported value is `AND`.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
     */
    com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator getLogicalOperator();

    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
     */
    boolean hasConditions();
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
     */
    com.google.privacy.dlp.v2beta1.RecordCondition.Conditions getConditions();
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
     */
    com.google.privacy.dlp.v2beta1.RecordCondition.ConditionsOrBuilder getConditionsOrBuilder();

    public com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.TypeCase getTypeCase();
  }
  /**
   * <pre>
   * A collection of expressions
   * </pre>
   *
   * Protobuf type {@code google.privacy.dlp.v2beta1.RecordCondition.Expressions}
   */
  public  static final class Expressions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2beta1.RecordCondition.Expressions)
      ExpressionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Expressions.newBuilder() to construct.
    private Expressions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Expressions() {
      logicalOperator_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Expressions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              logicalOperator_ = rawValue;
              break;
            }
            case 26: {
              com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.Builder subBuilder = null;
              if (typeCase_ == 3) {
                subBuilder = ((com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) type_).toBuilder();
              }
              type_ =
                  input.readMessage(com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 3;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Expressions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Expressions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.class, com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.Builder.class);
    }

    /**
     * Protobuf enum {@code google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator}
     */
    public enum LogicalOperator
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LOGICAL_OPERATOR_UNSPECIFIED = 0;</code>
       */
      LOGICAL_OPERATOR_UNSPECIFIED(0),
      /**
       * <code>AND = 1;</code>
       */
      AND(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LOGICAL_OPERATOR_UNSPECIFIED = 0;</code>
       */
      public static final int LOGICAL_OPERATOR_UNSPECIFIED_VALUE = 0;
      /**
       * <code>AND = 1;</code>
       */
      public static final int AND_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LogicalOperator valueOf(int value) {
        return forNumber(value);
      }

      public static LogicalOperator forNumber(int value) {
        switch (value) {
          case 0: return LOGICAL_OPERATOR_UNSPECIFIED;
          case 1: return AND;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LogicalOperator>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LogicalOperator> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LogicalOperator>() {
              public LogicalOperator findValueByNumber(int number) {
                return LogicalOperator.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.getDescriptor().getEnumTypes().get(0);
      }

      private static final LogicalOperator[] VALUES = values();

      public static LogicalOperator valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LogicalOperator(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator)
    }

    private int typeCase_ = 0;
    private java.lang.Object type_;
    public enum TypeCase
        implements com.google.protobuf.Internal.EnumLite {
      CONDITIONS(3),
      TYPE_NOT_SET(0);
      private final int value;
      private TypeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 3: return CONDITIONS;
          case 0: return TYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase
    getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public static final int LOGICAL_OPERATOR_FIELD_NUMBER = 1;
    private int logicalOperator_;
    /**
     * <pre>
     * The operator to apply to the result of conditions. Default and currently
     * only supported value is `AND`.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
     */
    public int getLogicalOperatorValue() {
      return logicalOperator_;
    }
    /**
     * <pre>
     * The operator to apply to the result of conditions. Default and currently
     * only supported value is `AND`.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator getLogicalOperator() {
      com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator result = com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator.valueOf(logicalOperator_);
      return result == null ? com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator.UNRECOGNIZED : result;
    }

    public static final int CONDITIONS_FIELD_NUMBER = 3;
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
     */
    public boolean hasConditions() {
      return typeCase_ == 3;
    }
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
     */
    public com.google.privacy.dlp.v2beta1.RecordCondition.Conditions getConditions() {
      if (typeCase_ == 3) {
         return (com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) type_;
      }
      return com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.getDefaultInstance();
    }
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
     */
    public com.google.privacy.dlp.v2beta1.RecordCondition.ConditionsOrBuilder getConditionsOrBuilder() {
      if (typeCase_ == 3) {
         return (com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) type_;
      }
      return com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (logicalOperator_ != com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator.LOGICAL_OPERATOR_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, logicalOperator_);
      }
      if (typeCase_ == 3) {
        output.writeMessage(3, (com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) type_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (logicalOperator_ != com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator.LOGICAL_OPERATOR_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, logicalOperator_);
      }
      if (typeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.privacy.dlp.v2beta1.RecordCondition.Expressions)) {
        return super.equals(obj);
      }
      com.google.privacy.dlp.v2beta1.RecordCondition.Expressions other = (com.google.privacy.dlp.v2beta1.RecordCondition.Expressions) obj;

      boolean result = true;
      result = result && logicalOperator_ == other.logicalOperator_;
      result = result && getTypeCase().equals(
          other.getTypeCase());
      if (!result) return false;
      switch (typeCase_) {
        case 3:
          result = result && getConditions()
              .equals(other.getConditions());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOGICAL_OPERATOR_FIELD_NUMBER;
      hash = (53 * hash) + logicalOperator_;
      switch (typeCase_) {
        case 3:
          hash = (37 * hash) + CONDITIONS_FIELD_NUMBER;
          hash = (53 * hash) + getConditions().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.privacy.dlp.v2beta1.RecordCondition.Expressions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A collection of expressions
     * </pre>
     *
     * Protobuf type {@code google.privacy.dlp.v2beta1.RecordCondition.Expressions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2beta1.RecordCondition.Expressions)
        com.google.privacy.dlp.v2beta1.RecordCondition.ExpressionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Expressions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Expressions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.class, com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.Builder.class);
      }

      // Construct using com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        logicalOperator_ = 0;

        typeCase_ = 0;
        type_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_Expressions_descriptor;
      }

      public com.google.privacy.dlp.v2beta1.RecordCondition.Expressions getDefaultInstanceForType() {
        return com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.getDefaultInstance();
      }

      public com.google.privacy.dlp.v2beta1.RecordCondition.Expressions build() {
        com.google.privacy.dlp.v2beta1.RecordCondition.Expressions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.privacy.dlp.v2beta1.RecordCondition.Expressions buildPartial() {
        com.google.privacy.dlp.v2beta1.RecordCondition.Expressions result = new com.google.privacy.dlp.v2beta1.RecordCondition.Expressions(this);
        result.logicalOperator_ = logicalOperator_;
        if (typeCase_ == 3) {
          if (conditionsBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = conditionsBuilder_.build();
          }
        }
        result.typeCase_ = typeCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.privacy.dlp.v2beta1.RecordCondition.Expressions) {
          return mergeFrom((com.google.privacy.dlp.v2beta1.RecordCondition.Expressions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.privacy.dlp.v2beta1.RecordCondition.Expressions other) {
        if (other == com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.getDefaultInstance()) return this;
        if (other.logicalOperator_ != 0) {
          setLogicalOperatorValue(other.getLogicalOperatorValue());
        }
        switch (other.getTypeCase()) {
          case CONDITIONS: {
            mergeConditions(other.getConditions());
            break;
          }
          case TYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.privacy.dlp.v2beta1.RecordCondition.Expressions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.privacy.dlp.v2beta1.RecordCondition.Expressions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int typeCase_ = 0;
      private java.lang.Object type_;
      public TypeCase
          getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }


      private int logicalOperator_ = 0;
      /**
       * <pre>
       * The operator to apply to the result of conditions. Default and currently
       * only supported value is `AND`.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
       */
      public int getLogicalOperatorValue() {
        return logicalOperator_;
      }
      /**
       * <pre>
       * The operator to apply to the result of conditions. Default and currently
       * only supported value is `AND`.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
       */
      public Builder setLogicalOperatorValue(int value) {
        logicalOperator_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The operator to apply to the result of conditions. Default and currently
       * only supported value is `AND`.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator getLogicalOperator() {
        com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator result = com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator.valueOf(logicalOperator_);
        return result == null ? com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The operator to apply to the result of conditions. Default and currently
       * only supported value is `AND`.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
       */
      public Builder setLogicalOperator(com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        logicalOperator_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The operator to apply to the result of conditions. Default and currently
       * only supported value is `AND`.
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
       */
      public Builder clearLogicalOperator() {
        
        logicalOperator_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.RecordCondition.Conditions, com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.Builder, com.google.privacy.dlp.v2beta1.RecordCondition.ConditionsOrBuilder> conditionsBuilder_;
      /**
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
       */
      public boolean hasConditions() {
        return typeCase_ == 3;
      }
      /**
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
       */
      public com.google.privacy.dlp.v2beta1.RecordCondition.Conditions getConditions() {
        if (conditionsBuilder_ == null) {
          if (typeCase_ == 3) {
            return (com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) type_;
          }
          return com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.getDefaultInstance();
        } else {
          if (typeCase_ == 3) {
            return conditionsBuilder_.getMessage();
          }
          return com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.getDefaultInstance();
        }
      }
      /**
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
       */
      public Builder setConditions(com.google.privacy.dlp.v2beta1.RecordCondition.Conditions value) {
        if (conditionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          conditionsBuilder_.setMessage(value);
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
       */
      public Builder setConditions(
          com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.Builder builderForValue) {
        if (conditionsBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          conditionsBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
       */
      public Builder mergeConditions(com.google.privacy.dlp.v2beta1.RecordCondition.Conditions value) {
        if (conditionsBuilder_ == null) {
          if (typeCase_ == 3 &&
              type_ != com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.getDefaultInstance()) {
            type_ = com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.newBuilder((com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 3) {
            conditionsBuilder_.mergeFrom(value);
          }
          conditionsBuilder_.setMessage(value);
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
       */
      public Builder clearConditions() {
        if (conditionsBuilder_ == null) {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
          }
          conditionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
       */
      public com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.Builder getConditionsBuilder() {
        return getConditionsFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
       */
      public com.google.privacy.dlp.v2beta1.RecordCondition.ConditionsOrBuilder getConditionsOrBuilder() {
        if ((typeCase_ == 3) && (conditionsBuilder_ != null)) {
          return conditionsBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 3) {
            return (com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) type_;
          }
          return com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.getDefaultInstance();
        }
      }
      /**
       * <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.RecordCondition.Conditions, com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.Builder, com.google.privacy.dlp.v2beta1.RecordCondition.ConditionsOrBuilder> 
          getConditionsFieldBuilder() {
        if (conditionsBuilder_ == null) {
          if (!(typeCase_ == 3)) {
            type_ = com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.getDefaultInstance();
          }
          conditionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.privacy.dlp.v2beta1.RecordCondition.Conditions, com.google.privacy.dlp.v2beta1.RecordCondition.Conditions.Builder, com.google.privacy.dlp.v2beta1.RecordCondition.ConditionsOrBuilder>(
                  (com.google.privacy.dlp.v2beta1.RecordCondition.Conditions) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 3;
        onChanged();;
        return conditionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2beta1.RecordCondition.Expressions)
    }

    // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2beta1.RecordCondition.Expressions)
    private static final com.google.privacy.dlp.v2beta1.RecordCondition.Expressions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.privacy.dlp.v2beta1.RecordCondition.Expressions();
    }

    public static com.google.privacy.dlp.v2beta1.RecordCondition.Expressions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Expressions>
        PARSER = new com.google.protobuf.AbstractParser<Expressions>() {
      public Expressions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Expressions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Expressions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Expressions> getParserForType() {
      return PARSER;
    }

    public com.google.privacy.dlp.v2beta1.RecordCondition.Expressions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int EXPRESSIONS_FIELD_NUMBER = 3;
  private com.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions_;
  /**
   * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
   */
  public boolean hasExpressions() {
    return expressions_ != null;
  }
  /**
   * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
   */
  public com.google.privacy.dlp.v2beta1.RecordCondition.Expressions getExpressions() {
    return expressions_ == null ? com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.getDefaultInstance() : expressions_;
  }
  /**
   * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
   */
  public com.google.privacy.dlp.v2beta1.RecordCondition.ExpressionsOrBuilder getExpressionsOrBuilder() {
    return getExpressions();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (expressions_ != null) {
      output.writeMessage(3, getExpressions());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (expressions_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getExpressions());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.privacy.dlp.v2beta1.RecordCondition)) {
      return super.equals(obj);
    }
    com.google.privacy.dlp.v2beta1.RecordCondition other = (com.google.privacy.dlp.v2beta1.RecordCondition) obj;

    boolean result = true;
    result = result && (hasExpressions() == other.hasExpressions());
    if (hasExpressions()) {
      result = result && getExpressions()
          .equals(other.getExpressions());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasExpressions()) {
      hash = (37 * hash) + EXPRESSIONS_FIELD_NUMBER;
      hash = (53 * hash) + getExpressions().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.privacy.dlp.v2beta1.RecordCondition parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2beta1.RecordCondition parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.RecordCondition parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2beta1.RecordCondition parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.RecordCondition parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2beta1.RecordCondition parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.RecordCondition parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2beta1.RecordCondition parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.RecordCondition parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2beta1.RecordCondition parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.RecordCondition parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2beta1.RecordCondition parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.privacy.dlp.v2beta1.RecordCondition prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A condition for determining whether a transformation should be applied to
   * a field.
   * </pre>
   *
   * Protobuf type {@code google.privacy.dlp.v2beta1.RecordCondition}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2beta1.RecordCondition)
      com.google.privacy.dlp.v2beta1.RecordConditionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2beta1.RecordCondition.class, com.google.privacy.dlp.v2beta1.RecordCondition.Builder.class);
    }

    // Construct using com.google.privacy.dlp.v2beta1.RecordCondition.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (expressionsBuilder_ == null) {
        expressions_ = null;
      } else {
        expressions_ = null;
        expressionsBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_RecordCondition_descriptor;
    }

    public com.google.privacy.dlp.v2beta1.RecordCondition getDefaultInstanceForType() {
      return com.google.privacy.dlp.v2beta1.RecordCondition.getDefaultInstance();
    }

    public com.google.privacy.dlp.v2beta1.RecordCondition build() {
      com.google.privacy.dlp.v2beta1.RecordCondition result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.privacy.dlp.v2beta1.RecordCondition buildPartial() {
      com.google.privacy.dlp.v2beta1.RecordCondition result = new com.google.privacy.dlp.v2beta1.RecordCondition(this);
      if (expressionsBuilder_ == null) {
        result.expressions_ = expressions_;
      } else {
        result.expressions_ = expressionsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.privacy.dlp.v2beta1.RecordCondition) {
        return mergeFrom((com.google.privacy.dlp.v2beta1.RecordCondition)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.privacy.dlp.v2beta1.RecordCondition other) {
      if (other == com.google.privacy.dlp.v2beta1.RecordCondition.getDefaultInstance()) return this;
      if (other.hasExpressions()) {
        mergeExpressions(other.getExpressions());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.privacy.dlp.v2beta1.RecordCondition parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.privacy.dlp.v2beta1.RecordCondition) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.privacy.dlp.v2beta1.RecordCondition.Expressions, com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.Builder, com.google.privacy.dlp.v2beta1.RecordCondition.ExpressionsOrBuilder> expressionsBuilder_;
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
     */
    public boolean hasExpressions() {
      return expressionsBuilder_ != null || expressions_ != null;
    }
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
     */
    public com.google.privacy.dlp.v2beta1.RecordCondition.Expressions getExpressions() {
      if (expressionsBuilder_ == null) {
        return expressions_ == null ? com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.getDefaultInstance() : expressions_;
      } else {
        return expressionsBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
     */
    public Builder setExpressions(com.google.privacy.dlp.v2beta1.RecordCondition.Expressions value) {
      if (expressionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expressions_ = value;
        onChanged();
      } else {
        expressionsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
     */
    public Builder setExpressions(
        com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.Builder builderForValue) {
      if (expressionsBuilder_ == null) {
        expressions_ = builderForValue.build();
        onChanged();
      } else {
        expressionsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
     */
    public Builder mergeExpressions(com.google.privacy.dlp.v2beta1.RecordCondition.Expressions value) {
      if (expressionsBuilder_ == null) {
        if (expressions_ != null) {
          expressions_ =
            com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.newBuilder(expressions_).mergeFrom(value).buildPartial();
        } else {
          expressions_ = value;
        }
        onChanged();
      } else {
        expressionsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
     */
    public Builder clearExpressions() {
      if (expressionsBuilder_ == null) {
        expressions_ = null;
        onChanged();
      } else {
        expressions_ = null;
        expressionsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
     */
    public com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.Builder getExpressionsBuilder() {
      
      onChanged();
      return getExpressionsFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
     */
    public com.google.privacy.dlp.v2beta1.RecordCondition.ExpressionsOrBuilder getExpressionsOrBuilder() {
      if (expressionsBuilder_ != null) {
        return expressionsBuilder_.getMessageOrBuilder();
      } else {
        return expressions_ == null ?
            com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.getDefaultInstance() : expressions_;
      }
    }
    /**
     * <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions expressions = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.privacy.dlp.v2beta1.RecordCondition.Expressions, com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.Builder, com.google.privacy.dlp.v2beta1.RecordCondition.ExpressionsOrBuilder> 
        getExpressionsFieldBuilder() {
      if (expressionsBuilder_ == null) {
        expressionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.privacy.dlp.v2beta1.RecordCondition.Expressions, com.google.privacy.dlp.v2beta1.RecordCondition.Expressions.Builder, com.google.privacy.dlp.v2beta1.RecordCondition.ExpressionsOrBuilder>(
                getExpressions(),
                getParentForChildren(),
                isClean());
        expressions_ = null;
      }
      return expressionsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2beta1.RecordCondition)
  }

  // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2beta1.RecordCondition)
  private static final com.google.privacy.dlp.v2beta1.RecordCondition DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.privacy.dlp.v2beta1.RecordCondition();
  }

  public static com.google.privacy.dlp.v2beta1.RecordCondition getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RecordCondition>
      PARSER = new com.google.protobuf.AbstractParser<RecordCondition>() {
    public RecordCondition parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RecordCondition(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RecordCondition> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RecordCondition> getParserForType() {
    return PARSER;
  }

  public com.google.privacy.dlp.v2beta1.RecordCondition getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

