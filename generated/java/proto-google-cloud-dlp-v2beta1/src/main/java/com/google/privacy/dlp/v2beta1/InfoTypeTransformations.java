// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2beta1/dlp.proto

package com.google.privacy.dlp.v2beta1;

/**
 * <pre>
 * A type of transformation that will scan unstructured text and
 * apply various `PrimitiveTransformation`s to each finding, where the
 * transformation is applied to only values that were identified as a specific
 * info_type.
 * </pre>
 *
 * Protobuf type {@code google.privacy.dlp.v2beta1.InfoTypeTransformations}
 */
public  final class InfoTypeTransformations extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2beta1.InfoTypeTransformations)
    InfoTypeTransformationsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use InfoTypeTransformations.newBuilder() to construct.
  private InfoTypeTransformations(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private InfoTypeTransformations() {
    transformations_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private InfoTypeTransformations(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              transformations_ = new java.util.ArrayList<com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation>();
              mutable_bitField0_ |= 0x00000001;
            }
            transformations_.add(
                input.readMessage(com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        transformations_ = java.util.Collections.unmodifiableList(transformations_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_InfoTypeTransformations_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_InfoTypeTransformations_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.privacy.dlp.v2beta1.InfoTypeTransformations.class, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.Builder.class);
  }

  public interface InfoTypeTransformationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Info types to apply the transformation to. Empty list will match all
     * available info types for this transformation.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
     */
    java.util.List<com.google.privacy.dlp.v2beta1.InfoType> 
        getInfoTypesList();
    /**
     * <pre>
     * Info types to apply the transformation to. Empty list will match all
     * available info types for this transformation.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
     */
    com.google.privacy.dlp.v2beta1.InfoType getInfoTypes(int index);
    /**
     * <pre>
     * Info types to apply the transformation to. Empty list will match all
     * available info types for this transformation.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
     */
    int getInfoTypesCount();
    /**
     * <pre>
     * Info types to apply the transformation to. Empty list will match all
     * available info types for this transformation.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
     */
    java.util.List<? extends com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder> 
        getInfoTypesOrBuilderList();
    /**
     * <pre>
     * Info types to apply the transformation to. Empty list will match all
     * available info types for this transformation.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
     */
    com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder getInfoTypesOrBuilder(
        int index);

    /**
     * <pre>
     * Primitive transformation to apply to the info type. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
     */
    boolean hasPrimitiveTransformation();
    /**
     * <pre>
     * Primitive transformation to apply to the info type. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
     */
    com.google.privacy.dlp.v2beta1.PrimitiveTransformation getPrimitiveTransformation();
    /**
     * <pre>
     * Primitive transformation to apply to the info type. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
     */
    com.google.privacy.dlp.v2beta1.PrimitiveTransformationOrBuilder getPrimitiveTransformationOrBuilder();
  }
  /**
   * <pre>
   * A transformation to apply to text that is identified as a specific
   * info_type.
   * </pre>
   *
   * Protobuf type {@code google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation}
   */
  public  static final class InfoTypeTransformation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation)
      InfoTypeTransformationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InfoTypeTransformation.newBuilder() to construct.
    private InfoTypeTransformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InfoTypeTransformation() {
      infoTypes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InfoTypeTransformation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                infoTypes_ = new java.util.ArrayList<com.google.privacy.dlp.v2beta1.InfoType>();
                mutable_bitField0_ |= 0x00000001;
              }
              infoTypes_.add(
                  input.readMessage(com.google.privacy.dlp.v2beta1.InfoType.parser(), extensionRegistry));
              break;
            }
            case 18: {
              com.google.privacy.dlp.v2beta1.PrimitiveTransformation.Builder subBuilder = null;
              if (primitiveTransformation_ != null) {
                subBuilder = primitiveTransformation_.toBuilder();
              }
              primitiveTransformation_ = input.readMessage(com.google.privacy.dlp.v2beta1.PrimitiveTransformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(primitiveTransformation_);
                primitiveTransformation_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          infoTypes_ = java.util.Collections.unmodifiableList(infoTypes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_InfoTypeTransformations_InfoTypeTransformation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_InfoTypeTransformations_InfoTypeTransformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.class, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder.class);
    }

    private int bitField0_;
    public static final int INFO_TYPES_FIELD_NUMBER = 1;
    private java.util.List<com.google.privacy.dlp.v2beta1.InfoType> infoTypes_;
    /**
     * <pre>
     * Info types to apply the transformation to. Empty list will match all
     * available info types for this transformation.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
     */
    public java.util.List<com.google.privacy.dlp.v2beta1.InfoType> getInfoTypesList() {
      return infoTypes_;
    }
    /**
     * <pre>
     * Info types to apply the transformation to. Empty list will match all
     * available info types for this transformation.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
     */
    public java.util.List<? extends com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder> 
        getInfoTypesOrBuilderList() {
      return infoTypes_;
    }
    /**
     * <pre>
     * Info types to apply the transformation to. Empty list will match all
     * available info types for this transformation.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
     */
    public int getInfoTypesCount() {
      return infoTypes_.size();
    }
    /**
     * <pre>
     * Info types to apply the transformation to. Empty list will match all
     * available info types for this transformation.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.InfoType getInfoTypes(int index) {
      return infoTypes_.get(index);
    }
    /**
     * <pre>
     * Info types to apply the transformation to. Empty list will match all
     * available info types for this transformation.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder getInfoTypesOrBuilder(
        int index) {
      return infoTypes_.get(index);
    }

    public static final int PRIMITIVE_TRANSFORMATION_FIELD_NUMBER = 2;
    private com.google.privacy.dlp.v2beta1.PrimitiveTransformation primitiveTransformation_;
    /**
     * <pre>
     * Primitive transformation to apply to the info type. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
     */
    public boolean hasPrimitiveTransformation() {
      return primitiveTransformation_ != null;
    }
    /**
     * <pre>
     * Primitive transformation to apply to the info type. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
     */
    public com.google.privacy.dlp.v2beta1.PrimitiveTransformation getPrimitiveTransformation() {
      return primitiveTransformation_ == null ? com.google.privacy.dlp.v2beta1.PrimitiveTransformation.getDefaultInstance() : primitiveTransformation_;
    }
    /**
     * <pre>
     * Primitive transformation to apply to the info type. [required]
     * </pre>
     *
     * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
     */
    public com.google.privacy.dlp.v2beta1.PrimitiveTransformationOrBuilder getPrimitiveTransformationOrBuilder() {
      return getPrimitiveTransformation();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < infoTypes_.size(); i++) {
        output.writeMessage(1, infoTypes_.get(i));
      }
      if (primitiveTransformation_ != null) {
        output.writeMessage(2, getPrimitiveTransformation());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < infoTypes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, infoTypes_.get(i));
      }
      if (primitiveTransformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPrimitiveTransformation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation)) {
        return super.equals(obj);
      }
      com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation other = (com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation) obj;

      boolean result = true;
      result = result && getInfoTypesList()
          .equals(other.getInfoTypesList());
      result = result && (hasPrimitiveTransformation() == other.hasPrimitiveTransformation());
      if (hasPrimitiveTransformation()) {
        result = result && getPrimitiveTransformation()
            .equals(other.getPrimitiveTransformation());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getInfoTypesCount() > 0) {
        hash = (37 * hash) + INFO_TYPES_FIELD_NUMBER;
        hash = (53 * hash) + getInfoTypesList().hashCode();
      }
      if (hasPrimitiveTransformation()) {
        hash = (37 * hash) + PRIMITIVE_TRANSFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getPrimitiveTransformation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A transformation to apply to text that is identified as a specific
     * info_type.
     * </pre>
     *
     * Protobuf type {@code google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation)
        com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_InfoTypeTransformations_InfoTypeTransformation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_InfoTypeTransformations_InfoTypeTransformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.class, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder.class);
      }

      // Construct using com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInfoTypesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (infoTypesBuilder_ == null) {
          infoTypes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          infoTypesBuilder_.clear();
        }
        if (primitiveTransformationBuilder_ == null) {
          primitiveTransformation_ = null;
        } else {
          primitiveTransformation_ = null;
          primitiveTransformationBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_InfoTypeTransformations_InfoTypeTransformation_descriptor;
      }

      public com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation getDefaultInstanceForType() {
        return com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.getDefaultInstance();
      }

      public com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation build() {
        com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation buildPartial() {
        com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation result = new com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (infoTypesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            infoTypes_ = java.util.Collections.unmodifiableList(infoTypes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.infoTypes_ = infoTypes_;
        } else {
          result.infoTypes_ = infoTypesBuilder_.build();
        }
        if (primitiveTransformationBuilder_ == null) {
          result.primitiveTransformation_ = primitiveTransformation_;
        } else {
          result.primitiveTransformation_ = primitiveTransformationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation) {
          return mergeFrom((com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation other) {
        if (other == com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.getDefaultInstance()) return this;
        if (infoTypesBuilder_ == null) {
          if (!other.infoTypes_.isEmpty()) {
            if (infoTypes_.isEmpty()) {
              infoTypes_ = other.infoTypes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInfoTypesIsMutable();
              infoTypes_.addAll(other.infoTypes_);
            }
            onChanged();
          }
        } else {
          if (!other.infoTypes_.isEmpty()) {
            if (infoTypesBuilder_.isEmpty()) {
              infoTypesBuilder_.dispose();
              infoTypesBuilder_ = null;
              infoTypes_ = other.infoTypes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              infoTypesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInfoTypesFieldBuilder() : null;
            } else {
              infoTypesBuilder_.addAllMessages(other.infoTypes_);
            }
          }
        }
        if (other.hasPrimitiveTransformation()) {
          mergePrimitiveTransformation(other.getPrimitiveTransformation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.privacy.dlp.v2beta1.InfoType> infoTypes_ =
        java.util.Collections.emptyList();
      private void ensureInfoTypesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          infoTypes_ = new java.util.ArrayList<com.google.privacy.dlp.v2beta1.InfoType>(infoTypes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.InfoType, com.google.privacy.dlp.v2beta1.InfoType.Builder, com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder> infoTypesBuilder_;

      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public java.util.List<com.google.privacy.dlp.v2beta1.InfoType> getInfoTypesList() {
        if (infoTypesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(infoTypes_);
        } else {
          return infoTypesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public int getInfoTypesCount() {
        if (infoTypesBuilder_ == null) {
          return infoTypes_.size();
        } else {
          return infoTypesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.InfoType getInfoTypes(int index) {
        if (infoTypesBuilder_ == null) {
          return infoTypes_.get(index);
        } else {
          return infoTypesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public Builder setInfoTypes(
          int index, com.google.privacy.dlp.v2beta1.InfoType value) {
        if (infoTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoTypesIsMutable();
          infoTypes_.set(index, value);
          onChanged();
        } else {
          infoTypesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public Builder setInfoTypes(
          int index, com.google.privacy.dlp.v2beta1.InfoType.Builder builderForValue) {
        if (infoTypesBuilder_ == null) {
          ensureInfoTypesIsMutable();
          infoTypes_.set(index, builderForValue.build());
          onChanged();
        } else {
          infoTypesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public Builder addInfoTypes(com.google.privacy.dlp.v2beta1.InfoType value) {
        if (infoTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoTypesIsMutable();
          infoTypes_.add(value);
          onChanged();
        } else {
          infoTypesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public Builder addInfoTypes(
          int index, com.google.privacy.dlp.v2beta1.InfoType value) {
        if (infoTypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoTypesIsMutable();
          infoTypes_.add(index, value);
          onChanged();
        } else {
          infoTypesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public Builder addInfoTypes(
          com.google.privacy.dlp.v2beta1.InfoType.Builder builderForValue) {
        if (infoTypesBuilder_ == null) {
          ensureInfoTypesIsMutable();
          infoTypes_.add(builderForValue.build());
          onChanged();
        } else {
          infoTypesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public Builder addInfoTypes(
          int index, com.google.privacy.dlp.v2beta1.InfoType.Builder builderForValue) {
        if (infoTypesBuilder_ == null) {
          ensureInfoTypesIsMutable();
          infoTypes_.add(index, builderForValue.build());
          onChanged();
        } else {
          infoTypesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public Builder addAllInfoTypes(
          java.lang.Iterable<? extends com.google.privacy.dlp.v2beta1.InfoType> values) {
        if (infoTypesBuilder_ == null) {
          ensureInfoTypesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, infoTypes_);
          onChanged();
        } else {
          infoTypesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public Builder clearInfoTypes() {
        if (infoTypesBuilder_ == null) {
          infoTypes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          infoTypesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public Builder removeInfoTypes(int index) {
        if (infoTypesBuilder_ == null) {
          ensureInfoTypesIsMutable();
          infoTypes_.remove(index);
          onChanged();
        } else {
          infoTypesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.InfoType.Builder getInfoTypesBuilder(
          int index) {
        return getInfoTypesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder getInfoTypesOrBuilder(
          int index) {
        if (infoTypesBuilder_ == null) {
          return infoTypes_.get(index);  } else {
          return infoTypesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public java.util.List<? extends com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder> 
           getInfoTypesOrBuilderList() {
        if (infoTypesBuilder_ != null) {
          return infoTypesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(infoTypes_);
        }
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.InfoType.Builder addInfoTypesBuilder() {
        return getInfoTypesFieldBuilder().addBuilder(
            com.google.privacy.dlp.v2beta1.InfoType.getDefaultInstance());
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public com.google.privacy.dlp.v2beta1.InfoType.Builder addInfoTypesBuilder(
          int index) {
        return getInfoTypesFieldBuilder().addBuilder(
            index, com.google.privacy.dlp.v2beta1.InfoType.getDefaultInstance());
      }
      /**
       * <pre>
       * Info types to apply the transformation to. Empty list will match all
       * available info types for this transformation.
       * </pre>
       *
       * <code>repeated .google.privacy.dlp.v2beta1.InfoType info_types = 1;</code>
       */
      public java.util.List<com.google.privacy.dlp.v2beta1.InfoType.Builder> 
           getInfoTypesBuilderList() {
        return getInfoTypesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.InfoType, com.google.privacy.dlp.v2beta1.InfoType.Builder, com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder> 
          getInfoTypesFieldBuilder() {
        if (infoTypesBuilder_ == null) {
          infoTypesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.privacy.dlp.v2beta1.InfoType, com.google.privacy.dlp.v2beta1.InfoType.Builder, com.google.privacy.dlp.v2beta1.InfoTypeOrBuilder>(
                  infoTypes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          infoTypes_ = null;
        }
        return infoTypesBuilder_;
      }

      private com.google.privacy.dlp.v2beta1.PrimitiveTransformation primitiveTransformation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.PrimitiveTransformation, com.google.privacy.dlp.v2beta1.PrimitiveTransformation.Builder, com.google.privacy.dlp.v2beta1.PrimitiveTransformationOrBuilder> primitiveTransformationBuilder_;
      /**
       * <pre>
       * Primitive transformation to apply to the info type. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
       */
      public boolean hasPrimitiveTransformation() {
        return primitiveTransformationBuilder_ != null || primitiveTransformation_ != null;
      }
      /**
       * <pre>
       * Primitive transformation to apply to the info type. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
       */
      public com.google.privacy.dlp.v2beta1.PrimitiveTransformation getPrimitiveTransformation() {
        if (primitiveTransformationBuilder_ == null) {
          return primitiveTransformation_ == null ? com.google.privacy.dlp.v2beta1.PrimitiveTransformation.getDefaultInstance() : primitiveTransformation_;
        } else {
          return primitiveTransformationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Primitive transformation to apply to the info type. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
       */
      public Builder setPrimitiveTransformation(com.google.privacy.dlp.v2beta1.PrimitiveTransformation value) {
        if (primitiveTransformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          primitiveTransformation_ = value;
          onChanged();
        } else {
          primitiveTransformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Primitive transformation to apply to the info type. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
       */
      public Builder setPrimitiveTransformation(
          com.google.privacy.dlp.v2beta1.PrimitiveTransformation.Builder builderForValue) {
        if (primitiveTransformationBuilder_ == null) {
          primitiveTransformation_ = builderForValue.build();
          onChanged();
        } else {
          primitiveTransformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Primitive transformation to apply to the info type. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
       */
      public Builder mergePrimitiveTransformation(com.google.privacy.dlp.v2beta1.PrimitiveTransformation value) {
        if (primitiveTransformationBuilder_ == null) {
          if (primitiveTransformation_ != null) {
            primitiveTransformation_ =
              com.google.privacy.dlp.v2beta1.PrimitiveTransformation.newBuilder(primitiveTransformation_).mergeFrom(value).buildPartial();
          } else {
            primitiveTransformation_ = value;
          }
          onChanged();
        } else {
          primitiveTransformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Primitive transformation to apply to the info type. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
       */
      public Builder clearPrimitiveTransformation() {
        if (primitiveTransformationBuilder_ == null) {
          primitiveTransformation_ = null;
          onChanged();
        } else {
          primitiveTransformation_ = null;
          primitiveTransformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Primitive transformation to apply to the info type. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
       */
      public com.google.privacy.dlp.v2beta1.PrimitiveTransformation.Builder getPrimitiveTransformationBuilder() {
        
        onChanged();
        return getPrimitiveTransformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Primitive transformation to apply to the info type. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
       */
      public com.google.privacy.dlp.v2beta1.PrimitiveTransformationOrBuilder getPrimitiveTransformationOrBuilder() {
        if (primitiveTransformationBuilder_ != null) {
          return primitiveTransformationBuilder_.getMessageOrBuilder();
        } else {
          return primitiveTransformation_ == null ?
              com.google.privacy.dlp.v2beta1.PrimitiveTransformation.getDefaultInstance() : primitiveTransformation_;
        }
      }
      /**
       * <pre>
       * Primitive transformation to apply to the info type. [required]
       * </pre>
       *
       * <code>.google.privacy.dlp.v2beta1.PrimitiveTransformation primitive_transformation = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.privacy.dlp.v2beta1.PrimitiveTransformation, com.google.privacy.dlp.v2beta1.PrimitiveTransformation.Builder, com.google.privacy.dlp.v2beta1.PrimitiveTransformationOrBuilder> 
          getPrimitiveTransformationFieldBuilder() {
        if (primitiveTransformationBuilder_ == null) {
          primitiveTransformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.privacy.dlp.v2beta1.PrimitiveTransformation, com.google.privacy.dlp.v2beta1.PrimitiveTransformation.Builder, com.google.privacy.dlp.v2beta1.PrimitiveTransformationOrBuilder>(
                  getPrimitiveTransformation(),
                  getParentForChildren(),
                  isClean());
          primitiveTransformation_ = null;
        }
        return primitiveTransformationBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation)
    }

    // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation)
    private static final com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation();
    }

    public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InfoTypeTransformation>
        PARSER = new com.google.protobuf.AbstractParser<InfoTypeTransformation>() {
      public InfoTypeTransformation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InfoTypeTransformation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InfoTypeTransformation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InfoTypeTransformation> getParserForType() {
      return PARSER;
    }

    public com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int TRANSFORMATIONS_FIELD_NUMBER = 1;
  private java.util.List<com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation> transformations_;
  /**
   * <pre>
   * Transformation for each info type. Cannot specify more than one
   * for a given info type. [required]
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
   */
  public java.util.List<com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation> getTransformationsList() {
    return transformations_;
  }
  /**
   * <pre>
   * Transformation for each info type. Cannot specify more than one
   * for a given info type. [required]
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
   */
  public java.util.List<? extends com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformationOrBuilder> 
      getTransformationsOrBuilderList() {
    return transformations_;
  }
  /**
   * <pre>
   * Transformation for each info type. Cannot specify more than one
   * for a given info type. [required]
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
   */
  public int getTransformationsCount() {
    return transformations_.size();
  }
  /**
   * <pre>
   * Transformation for each info type. Cannot specify more than one
   * for a given info type. [required]
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
   */
  public com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation getTransformations(int index) {
    return transformations_.get(index);
  }
  /**
   * <pre>
   * Transformation for each info type. Cannot specify more than one
   * for a given info type. [required]
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
   */
  public com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformationOrBuilder getTransformationsOrBuilder(
      int index) {
    return transformations_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < transformations_.size(); i++) {
      output.writeMessage(1, transformations_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < transformations_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, transformations_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.privacy.dlp.v2beta1.InfoTypeTransformations)) {
      return super.equals(obj);
    }
    com.google.privacy.dlp.v2beta1.InfoTypeTransformations other = (com.google.privacy.dlp.v2beta1.InfoTypeTransformations) obj;

    boolean result = true;
    result = result && getTransformationsList()
        .equals(other.getTransformationsList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getTransformationsCount() > 0) {
      hash = (37 * hash) + TRANSFORMATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getTransformationsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.privacy.dlp.v2beta1.InfoTypeTransformations prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A type of transformation that will scan unstructured text and
   * apply various `PrimitiveTransformation`s to each finding, where the
   * transformation is applied to only values that were identified as a specific
   * info_type.
   * </pre>
   *
   * Protobuf type {@code google.privacy.dlp.v2beta1.InfoTypeTransformations}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2beta1.InfoTypeTransformations)
      com.google.privacy.dlp.v2beta1.InfoTypeTransformationsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_InfoTypeTransformations_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_InfoTypeTransformations_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2beta1.InfoTypeTransformations.class, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.Builder.class);
    }

    // Construct using com.google.privacy.dlp.v2beta1.InfoTypeTransformations.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTransformationsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (transformationsBuilder_ == null) {
        transformations_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        transformationsBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.privacy.dlp.v2beta1.DlpProto.internal_static_google_privacy_dlp_v2beta1_InfoTypeTransformations_descriptor;
    }

    public com.google.privacy.dlp.v2beta1.InfoTypeTransformations getDefaultInstanceForType() {
      return com.google.privacy.dlp.v2beta1.InfoTypeTransformations.getDefaultInstance();
    }

    public com.google.privacy.dlp.v2beta1.InfoTypeTransformations build() {
      com.google.privacy.dlp.v2beta1.InfoTypeTransformations result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.privacy.dlp.v2beta1.InfoTypeTransformations buildPartial() {
      com.google.privacy.dlp.v2beta1.InfoTypeTransformations result = new com.google.privacy.dlp.v2beta1.InfoTypeTransformations(this);
      int from_bitField0_ = bitField0_;
      if (transformationsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          transformations_ = java.util.Collections.unmodifiableList(transformations_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.transformations_ = transformations_;
      } else {
        result.transformations_ = transformationsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.privacy.dlp.v2beta1.InfoTypeTransformations) {
        return mergeFrom((com.google.privacy.dlp.v2beta1.InfoTypeTransformations)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.privacy.dlp.v2beta1.InfoTypeTransformations other) {
      if (other == com.google.privacy.dlp.v2beta1.InfoTypeTransformations.getDefaultInstance()) return this;
      if (transformationsBuilder_ == null) {
        if (!other.transformations_.isEmpty()) {
          if (transformations_.isEmpty()) {
            transformations_ = other.transformations_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTransformationsIsMutable();
            transformations_.addAll(other.transformations_);
          }
          onChanged();
        }
      } else {
        if (!other.transformations_.isEmpty()) {
          if (transformationsBuilder_.isEmpty()) {
            transformationsBuilder_.dispose();
            transformationsBuilder_ = null;
            transformations_ = other.transformations_;
            bitField0_ = (bitField0_ & ~0x00000001);
            transformationsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTransformationsFieldBuilder() : null;
          } else {
            transformationsBuilder_.addAllMessages(other.transformations_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.privacy.dlp.v2beta1.InfoTypeTransformations parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.privacy.dlp.v2beta1.InfoTypeTransformations) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation> transformations_ =
      java.util.Collections.emptyList();
    private void ensureTransformationsIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        transformations_ = new java.util.ArrayList<com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation>(transformations_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformationOrBuilder> transformationsBuilder_;

    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public java.util.List<com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation> getTransformationsList() {
      if (transformationsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(transformations_);
      } else {
        return transformationsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public int getTransformationsCount() {
      if (transformationsBuilder_ == null) {
        return transformations_.size();
      } else {
        return transformationsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation getTransformations(int index) {
      if (transformationsBuilder_ == null) {
        return transformations_.get(index);
      } else {
        return transformationsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public Builder setTransformations(
        int index, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation value) {
      if (transformationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransformationsIsMutable();
        transformations_.set(index, value);
        onChanged();
      } else {
        transformationsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public Builder setTransformations(
        int index, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder builderForValue) {
      if (transformationsBuilder_ == null) {
        ensureTransformationsIsMutable();
        transformations_.set(index, builderForValue.build());
        onChanged();
      } else {
        transformationsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public Builder addTransformations(com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation value) {
      if (transformationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransformationsIsMutable();
        transformations_.add(value);
        onChanged();
      } else {
        transformationsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public Builder addTransformations(
        int index, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation value) {
      if (transformationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransformationsIsMutable();
        transformations_.add(index, value);
        onChanged();
      } else {
        transformationsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public Builder addTransformations(
        com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder builderForValue) {
      if (transformationsBuilder_ == null) {
        ensureTransformationsIsMutable();
        transformations_.add(builderForValue.build());
        onChanged();
      } else {
        transformationsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public Builder addTransformations(
        int index, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder builderForValue) {
      if (transformationsBuilder_ == null) {
        ensureTransformationsIsMutable();
        transformations_.add(index, builderForValue.build());
        onChanged();
      } else {
        transformationsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public Builder addAllTransformations(
        java.lang.Iterable<? extends com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation> values) {
      if (transformationsBuilder_ == null) {
        ensureTransformationsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, transformations_);
        onChanged();
      } else {
        transformationsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public Builder clearTransformations() {
      if (transformationsBuilder_ == null) {
        transformations_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        transformationsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public Builder removeTransformations(int index) {
      if (transformationsBuilder_ == null) {
        ensureTransformationsIsMutable();
        transformations_.remove(index);
        onChanged();
      } else {
        transformationsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder getTransformationsBuilder(
        int index) {
      return getTransformationsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformationOrBuilder getTransformationsOrBuilder(
        int index) {
      if (transformationsBuilder_ == null) {
        return transformations_.get(index);  } else {
        return transformationsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public java.util.List<? extends com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformationOrBuilder> 
         getTransformationsOrBuilderList() {
      if (transformationsBuilder_ != null) {
        return transformationsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(transformations_);
      }
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder addTransformationsBuilder() {
      return getTransformationsFieldBuilder().addBuilder(
          com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.getDefaultInstance());
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder addTransformationsBuilder(
        int index) {
      return getTransformationsFieldBuilder().addBuilder(
          index, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.getDefaultInstance());
    }
    /**
     * <pre>
     * Transformation for each info type. Cannot specify more than one
     * for a given info type. [required]
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation transformations = 1;</code>
     */
    public java.util.List<com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder> 
         getTransformationsBuilderList() {
      return getTransformationsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformationOrBuilder> 
        getTransformationsFieldBuilder() {
      if (transformationsBuilder_ == null) {
        transformationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformation.Builder, com.google.privacy.dlp.v2beta1.InfoTypeTransformations.InfoTypeTransformationOrBuilder>(
                transformations_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        transformations_ = null;
      }
      return transformationsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2beta1.InfoTypeTransformations)
  }

  // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2beta1.InfoTypeTransformations)
  private static final com.google.privacy.dlp.v2beta1.InfoTypeTransformations DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.privacy.dlp.v2beta1.InfoTypeTransformations();
  }

  public static com.google.privacy.dlp.v2beta1.InfoTypeTransformations getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InfoTypeTransformations>
      PARSER = new com.google.protobuf.AbstractParser<InfoTypeTransformations>() {
    public InfoTypeTransformations parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new InfoTypeTransformations(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<InfoTypeTransformations> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<InfoTypeTransformations> getParserForType() {
    return PARSER;
  }

  public com.google.privacy.dlp.v2beta1.InfoTypeTransformations getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

