// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging_metrics.proto

package com.google.logging.v2;

public interface UpdateLogMetricRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.logging.v2.UpdateLogMetricRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The resource name of the metric to update:
   *     "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
   * The updated metric must be provided in the request and it's
   * `name` field must be the same as `[METRIC_ID]` If the metric
   * does not exist in `[PROJECT_ID]`, then a new metric is created.
   * </pre>
   *
   * <code>string metric_name = 1;</code>
   */
  java.lang.String getMetricName();
  /**
   * <pre>
   * The resource name of the metric to update:
   *     "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
   * The updated metric must be provided in the request and it's
   * `name` field must be the same as `[METRIC_ID]` If the metric
   * does not exist in `[PROJECT_ID]`, then a new metric is created.
   * </pre>
   *
   * <code>string metric_name = 1;</code>
   */
  com.google.protobuf.ByteString
      getMetricNameBytes();

  /**
   * <pre>
   * The updated metric.
   * </pre>
   *
   * <code>.google.logging.v2.LogMetric metric = 2;</code>
   */
  boolean hasMetric();
  /**
   * <pre>
   * The updated metric.
   * </pre>
   *
   * <code>.google.logging.v2.LogMetric metric = 2;</code>
   */
  com.google.logging.v2.LogMetric getMetric();
  /**
   * <pre>
   * The updated metric.
   * </pre>
   *
   * <code>.google.logging.v2.LogMetric metric = 2;</code>
   */
  com.google.logging.v2.LogMetricOrBuilder getMetricOrBuilder();
}
