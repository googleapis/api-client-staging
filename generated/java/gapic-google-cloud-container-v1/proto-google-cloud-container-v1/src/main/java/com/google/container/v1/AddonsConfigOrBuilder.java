// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/container/v1/cluster_service.proto

package com.google.container.v1;

public interface AddonsConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.container.v1.AddonsConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Configuration for the HTTP (L7) load balancing controller addon, which
   * makes it easy to set up HTTP load balancers for services in a cluster.
   * </pre>
   *
   * <code>.google.container.v1.HttpLoadBalancing http_load_balancing = 1;</code>
   */
  boolean hasHttpLoadBalancing();
  /**
   * <pre>
   * Configuration for the HTTP (L7) load balancing controller addon, which
   * makes it easy to set up HTTP load balancers for services in a cluster.
   * </pre>
   *
   * <code>.google.container.v1.HttpLoadBalancing http_load_balancing = 1;</code>
   */
  com.google.container.v1.HttpLoadBalancing getHttpLoadBalancing();
  /**
   * <pre>
   * Configuration for the HTTP (L7) load balancing controller addon, which
   * makes it easy to set up HTTP load balancers for services in a cluster.
   * </pre>
   *
   * <code>.google.container.v1.HttpLoadBalancing http_load_balancing = 1;</code>
   */
  com.google.container.v1.HttpLoadBalancingOrBuilder getHttpLoadBalancingOrBuilder();

  /**
   * <pre>
   * Configuration for the horizontal pod autoscaling feature, which
   * increases or decreases the number of replica pods a replication controller
   * has based on the resource usage of the existing pods.
   * </pre>
   *
   * <code>.google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;</code>
   */
  boolean hasHorizontalPodAutoscaling();
  /**
   * <pre>
   * Configuration for the horizontal pod autoscaling feature, which
   * increases or decreases the number of replica pods a replication controller
   * has based on the resource usage of the existing pods.
   * </pre>
   *
   * <code>.google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;</code>
   */
  com.google.container.v1.HorizontalPodAutoscaling getHorizontalPodAutoscaling();
  /**
   * <pre>
   * Configuration for the horizontal pod autoscaling feature, which
   * increases or decreases the number of replica pods a replication controller
   * has based on the resource usage of the existing pods.
   * </pre>
   *
   * <code>.google.container.v1.HorizontalPodAutoscaling horizontal_pod_autoscaling = 2;</code>
   */
  com.google.container.v1.HorizontalPodAutoscalingOrBuilder getHorizontalPodAutoscalingOrBuilder();

  /**
   * <pre>
   * Configuration for the Kubernetes Dashboard.
   * </pre>
   *
   * <code>.google.container.v1.KubernetesDashboard kubernetes_dashboard = 3;</code>
   */
  boolean hasKubernetesDashboard();
  /**
   * <pre>
   * Configuration for the Kubernetes Dashboard.
   * </pre>
   *
   * <code>.google.container.v1.KubernetesDashboard kubernetes_dashboard = 3;</code>
   */
  com.google.container.v1.KubernetesDashboard getKubernetesDashboard();
  /**
   * <pre>
   * Configuration for the Kubernetes Dashboard.
   * </pre>
   *
   * <code>.google.container.v1.KubernetesDashboard kubernetes_dashboard = 3;</code>
   */
  com.google.container.v1.KubernetesDashboardOrBuilder getKubernetesDashboardOrBuilder();

  /**
   * <pre>
   * Configuration for NetworkPolicy. This only tracks whether the addon
   * is enabled or not on the Master, it does not track whether network policy
   * is enabled for the nodes.
   * </pre>
   *
   * <code>.google.container.v1.NetworkPolicyConfig network_policy_config = 4;</code>
   */
  boolean hasNetworkPolicyConfig();
  /**
   * <pre>
   * Configuration for NetworkPolicy. This only tracks whether the addon
   * is enabled or not on the Master, it does not track whether network policy
   * is enabled for the nodes.
   * </pre>
   *
   * <code>.google.container.v1.NetworkPolicyConfig network_policy_config = 4;</code>
   */
  com.google.container.v1.NetworkPolicyConfig getNetworkPolicyConfig();
  /**
   * <pre>
   * Configuration for NetworkPolicy. This only tracks whether the addon
   * is enabled or not on the Master, it does not track whether network policy
   * is enabled for the nodes.
   * </pre>
   *
   * <code>.google.container.v1.NetworkPolicyConfig network_policy_config = 4;</code>
   */
  com.google.container.v1.NetworkPolicyConfigOrBuilder getNetworkPolicyConfigOrBuilder();
}
