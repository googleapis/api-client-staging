// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/videointelligence/v1p1beta1/video_intelligence.proto

package com.google.cloud.videointelligence.v1p1beta1;

/**
 * <pre>
 * Config for SPEECH_TRANSCRIPTION.
 * </pre>
 *
 * Protobuf type {@code google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig}
 */
public  final class SpeechTranscriptionConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig)
    SpeechTranscriptionConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SpeechTranscriptionConfig.newBuilder() to construct.
  private SpeechTranscriptionConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SpeechTranscriptionConfig() {
    languageCode_ = "";
    maxAlternatives_ = 0;
    filterProfanity_ = false;
    speechContexts_ = java.util.Collections.emptyList();
    audioTracks_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SpeechTranscriptionConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            languageCode_ = s;
            break;
          }
          case 16: {

            maxAlternatives_ = input.readInt32();
            break;
          }
          case 24: {

            filterProfanity_ = input.readBool();
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              speechContexts_ = new java.util.ArrayList<com.google.cloud.videointelligence.v1p1beta1.SpeechContext>();
              mutable_bitField0_ |= 0x00000008;
            }
            speechContexts_.add(
                input.readMessage(com.google.cloud.videointelligence.v1p1beta1.SpeechContext.parser(), extensionRegistry));
            break;
          }
          case 48: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              audioTracks_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000010;
            }
            audioTracks_.add(input.readInt32());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
              audioTracks_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000010;
            }
            while (input.getBytesUntilLimit() > 0) {
              audioTracks_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        speechContexts_ = java.util.Collections.unmodifiableList(speechContexts_);
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        audioTracks_ = java.util.Collections.unmodifiableList(audioTracks_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.videointelligence.v1p1beta1.VideoIntelligenceServiceProto.internal_static_google_cloud_videointelligence_v1p1beta1_SpeechTranscriptionConfig_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.videointelligence.v1p1beta1.VideoIntelligenceServiceProto.internal_static_google_cloud_videointelligence_v1p1beta1_SpeechTranscriptionConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig.class, com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig.Builder.class);
  }

  private int bitField0_;
  public static final int LANGUAGE_CODE_FIELD_NUMBER = 1;
  private volatile java.lang.Object languageCode_;
  /**
   * <pre>
   * *Required* The language of the supplied audio as a
   * [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
   * Example: "en-US".
   * See [Language Support](https://cloud.google.com/speech/docs/languages)
   * for a list of the currently supported language codes.
   * </pre>
   *
   * <code>string language_code = 1;</code>
   */
  public java.lang.String getLanguageCode() {
    java.lang.Object ref = languageCode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      languageCode_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * *Required* The language of the supplied audio as a
   * [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
   * Example: "en-US".
   * See [Language Support](https://cloud.google.com/speech/docs/languages)
   * for a list of the currently supported language codes.
   * </pre>
   *
   * <code>string language_code = 1;</code>
   */
  public com.google.protobuf.ByteString
      getLanguageCodeBytes() {
    java.lang.Object ref = languageCode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      languageCode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAX_ALTERNATIVES_FIELD_NUMBER = 2;
  private int maxAlternatives_;
  /**
   * <pre>
   * *Optional* Maximum number of recognition hypotheses to be returned.
   * Specifically, the maximum number of `SpeechRecognitionAlternative` messages
   * within each `SpeechRecognitionResult`. The server may return fewer than
   * `max_alternatives`. Valid values are `0`-`30`. A value of `0` or `1` will
   * return a maximum of one. If omitted, will return a maximum of one.
   * </pre>
   *
   * <code>int32 max_alternatives = 2;</code>
   */
  public int getMaxAlternatives() {
    return maxAlternatives_;
  }

  public static final int FILTER_PROFANITY_FIELD_NUMBER = 3;
  private boolean filterProfanity_;
  /**
   * <pre>
   * *Optional* If set to `true`, the server will attempt to filter out
   * profanities, replacing all but the initial character in each filtered word
   * with asterisks, e.g. "f***". If set to `false` or omitted, profanities
   * won't be filtered out.
   * </pre>
   *
   * <code>bool filter_profanity = 3;</code>
   */
  public boolean getFilterProfanity() {
    return filterProfanity_;
  }

  public static final int SPEECH_CONTEXTS_FIELD_NUMBER = 4;
  private java.util.List<com.google.cloud.videointelligence.v1p1beta1.SpeechContext> speechContexts_;
  /**
   * <pre>
   * *Optional* A means to provide context to assist the speech recognition.
   * </pre>
   *
   * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
   */
  public java.util.List<com.google.cloud.videointelligence.v1p1beta1.SpeechContext> getSpeechContextsList() {
    return speechContexts_;
  }
  /**
   * <pre>
   * *Optional* A means to provide context to assist the speech recognition.
   * </pre>
   *
   * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
   */
  public java.util.List<? extends com.google.cloud.videointelligence.v1p1beta1.SpeechContextOrBuilder> 
      getSpeechContextsOrBuilderList() {
    return speechContexts_;
  }
  /**
   * <pre>
   * *Optional* A means to provide context to assist the speech recognition.
   * </pre>
   *
   * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
   */
  public int getSpeechContextsCount() {
    return speechContexts_.size();
  }
  /**
   * <pre>
   * *Optional* A means to provide context to assist the speech recognition.
   * </pre>
   *
   * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
   */
  public com.google.cloud.videointelligence.v1p1beta1.SpeechContext getSpeechContexts(int index) {
    return speechContexts_.get(index);
  }
  /**
   * <pre>
   * *Optional* A means to provide context to assist the speech recognition.
   * </pre>
   *
   * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
   */
  public com.google.cloud.videointelligence.v1p1beta1.SpeechContextOrBuilder getSpeechContextsOrBuilder(
      int index) {
    return speechContexts_.get(index);
  }

  public static final int AUDIO_TRACKS_FIELD_NUMBER = 6;
  private java.util.List<java.lang.Integer> audioTracks_;
  /**
   * <pre>
   * *Optional* For file formats, such as MXF or MKV, supporting multiple audio
   * tracks, specify up to two tracks. Default: track 0.
   * </pre>
   *
   * <code>repeated int32 audio_tracks = 6;</code>
   */
  public java.util.List<java.lang.Integer>
      getAudioTracksList() {
    return audioTracks_;
  }
  /**
   * <pre>
   * *Optional* For file formats, such as MXF or MKV, supporting multiple audio
   * tracks, specify up to two tracks. Default: track 0.
   * </pre>
   *
   * <code>repeated int32 audio_tracks = 6;</code>
   */
  public int getAudioTracksCount() {
    return audioTracks_.size();
  }
  /**
   * <pre>
   * *Optional* For file formats, such as MXF or MKV, supporting multiple audio
   * tracks, specify up to two tracks. Default: track 0.
   * </pre>
   *
   * <code>repeated int32 audio_tracks = 6;</code>
   */
  public int getAudioTracks(int index) {
    return audioTracks_.get(index);
  }
  private int audioTracksMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!getLanguageCodeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, languageCode_);
    }
    if (maxAlternatives_ != 0) {
      output.writeInt32(2, maxAlternatives_);
    }
    if (filterProfanity_ != false) {
      output.writeBool(3, filterProfanity_);
    }
    for (int i = 0; i < speechContexts_.size(); i++) {
      output.writeMessage(4, speechContexts_.get(i));
    }
    if (getAudioTracksList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(audioTracksMemoizedSerializedSize);
    }
    for (int i = 0; i < audioTracks_.size(); i++) {
      output.writeInt32NoTag(audioTracks_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getLanguageCodeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, languageCode_);
    }
    if (maxAlternatives_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, maxAlternatives_);
    }
    if (filterProfanity_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, filterProfanity_);
    }
    for (int i = 0; i < speechContexts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, speechContexts_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < audioTracks_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(audioTracks_.get(i));
      }
      size += dataSize;
      if (!getAudioTracksList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      audioTracksMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig other = (com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig) obj;

    boolean result = true;
    result = result && getLanguageCode()
        .equals(other.getLanguageCode());
    result = result && (getMaxAlternatives()
        == other.getMaxAlternatives());
    result = result && (getFilterProfanity()
        == other.getFilterProfanity());
    result = result && getSpeechContextsList()
        .equals(other.getSpeechContextsList());
    result = result && getAudioTracksList()
        .equals(other.getAudioTracksList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LANGUAGE_CODE_FIELD_NUMBER;
    hash = (53 * hash) + getLanguageCode().hashCode();
    hash = (37 * hash) + MAX_ALTERNATIVES_FIELD_NUMBER;
    hash = (53 * hash) + getMaxAlternatives();
    hash = (37 * hash) + FILTER_PROFANITY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFilterProfanity());
    if (getSpeechContextsCount() > 0) {
      hash = (37 * hash) + SPEECH_CONTEXTS_FIELD_NUMBER;
      hash = (53 * hash) + getSpeechContextsList().hashCode();
    }
    if (getAudioTracksCount() > 0) {
      hash = (37 * hash) + AUDIO_TRACKS_FIELD_NUMBER;
      hash = (53 * hash) + getAudioTracksList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Config for SPEECH_TRANSCRIPTION.
   * </pre>
   *
   * Protobuf type {@code google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig)
      com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.videointelligence.v1p1beta1.VideoIntelligenceServiceProto.internal_static_google_cloud_videointelligence_v1p1beta1_SpeechTranscriptionConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.videointelligence.v1p1beta1.VideoIntelligenceServiceProto.internal_static_google_cloud_videointelligence_v1p1beta1_SpeechTranscriptionConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig.class, com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig.Builder.class);
    }

    // Construct using com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSpeechContextsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      languageCode_ = "";

      maxAlternatives_ = 0;

      filterProfanity_ = false;

      if (speechContextsBuilder_ == null) {
        speechContexts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        speechContextsBuilder_.clear();
      }
      audioTracks_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.videointelligence.v1p1beta1.VideoIntelligenceServiceProto.internal_static_google_cloud_videointelligence_v1p1beta1_SpeechTranscriptionConfig_descriptor;
    }

    public com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig getDefaultInstanceForType() {
      return com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig.getDefaultInstance();
    }

    public com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig build() {
      com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig buildPartial() {
      com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig result = new com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.languageCode_ = languageCode_;
      result.maxAlternatives_ = maxAlternatives_;
      result.filterProfanity_ = filterProfanity_;
      if (speechContextsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          speechContexts_ = java.util.Collections.unmodifiableList(speechContexts_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.speechContexts_ = speechContexts_;
      } else {
        result.speechContexts_ = speechContextsBuilder_.build();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        audioTracks_ = java.util.Collections.unmodifiableList(audioTracks_);
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.audioTracks_ = audioTracks_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig) {
        return mergeFrom((com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig other) {
      if (other == com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig.getDefaultInstance()) return this;
      if (!other.getLanguageCode().isEmpty()) {
        languageCode_ = other.languageCode_;
        onChanged();
      }
      if (other.getMaxAlternatives() != 0) {
        setMaxAlternatives(other.getMaxAlternatives());
      }
      if (other.getFilterProfanity() != false) {
        setFilterProfanity(other.getFilterProfanity());
      }
      if (speechContextsBuilder_ == null) {
        if (!other.speechContexts_.isEmpty()) {
          if (speechContexts_.isEmpty()) {
            speechContexts_ = other.speechContexts_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSpeechContextsIsMutable();
            speechContexts_.addAll(other.speechContexts_);
          }
          onChanged();
        }
      } else {
        if (!other.speechContexts_.isEmpty()) {
          if (speechContextsBuilder_.isEmpty()) {
            speechContextsBuilder_.dispose();
            speechContextsBuilder_ = null;
            speechContexts_ = other.speechContexts_;
            bitField0_ = (bitField0_ & ~0x00000008);
            speechContextsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSpeechContextsFieldBuilder() : null;
          } else {
            speechContextsBuilder_.addAllMessages(other.speechContexts_);
          }
        }
      }
      if (!other.audioTracks_.isEmpty()) {
        if (audioTracks_.isEmpty()) {
          audioTracks_ = other.audioTracks_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureAudioTracksIsMutable();
          audioTracks_.addAll(other.audioTracks_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object languageCode_ = "";
    /**
     * <pre>
     * *Required* The language of the supplied audio as a
     * [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
     * Example: "en-US".
     * See [Language Support](https://cloud.google.com/speech/docs/languages)
     * for a list of the currently supported language codes.
     * </pre>
     *
     * <code>string language_code = 1;</code>
     */
    public java.lang.String getLanguageCode() {
      java.lang.Object ref = languageCode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        languageCode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * *Required* The language of the supplied audio as a
     * [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
     * Example: "en-US".
     * See [Language Support](https://cloud.google.com/speech/docs/languages)
     * for a list of the currently supported language codes.
     * </pre>
     *
     * <code>string language_code = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLanguageCodeBytes() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        languageCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * *Required* The language of the supplied audio as a
     * [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
     * Example: "en-US".
     * See [Language Support](https://cloud.google.com/speech/docs/languages)
     * for a list of the currently supported language codes.
     * </pre>
     *
     * <code>string language_code = 1;</code>
     */
    public Builder setLanguageCode(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      languageCode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * *Required* The language of the supplied audio as a
     * [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
     * Example: "en-US".
     * See [Language Support](https://cloud.google.com/speech/docs/languages)
     * for a list of the currently supported language codes.
     * </pre>
     *
     * <code>string language_code = 1;</code>
     */
    public Builder clearLanguageCode() {
      
      languageCode_ = getDefaultInstance().getLanguageCode();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * *Required* The language of the supplied audio as a
     * [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
     * Example: "en-US".
     * See [Language Support](https://cloud.google.com/speech/docs/languages)
     * for a list of the currently supported language codes.
     * </pre>
     *
     * <code>string language_code = 1;</code>
     */
    public Builder setLanguageCodeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      languageCode_ = value;
      onChanged();
      return this;
    }

    private int maxAlternatives_ ;
    /**
     * <pre>
     * *Optional* Maximum number of recognition hypotheses to be returned.
     * Specifically, the maximum number of `SpeechRecognitionAlternative` messages
     * within each `SpeechRecognitionResult`. The server may return fewer than
     * `max_alternatives`. Valid values are `0`-`30`. A value of `0` or `1` will
     * return a maximum of one. If omitted, will return a maximum of one.
     * </pre>
     *
     * <code>int32 max_alternatives = 2;</code>
     */
    public int getMaxAlternatives() {
      return maxAlternatives_;
    }
    /**
     * <pre>
     * *Optional* Maximum number of recognition hypotheses to be returned.
     * Specifically, the maximum number of `SpeechRecognitionAlternative` messages
     * within each `SpeechRecognitionResult`. The server may return fewer than
     * `max_alternatives`. Valid values are `0`-`30`. A value of `0` or `1` will
     * return a maximum of one. If omitted, will return a maximum of one.
     * </pre>
     *
     * <code>int32 max_alternatives = 2;</code>
     */
    public Builder setMaxAlternatives(int value) {
      
      maxAlternatives_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * *Optional* Maximum number of recognition hypotheses to be returned.
     * Specifically, the maximum number of `SpeechRecognitionAlternative` messages
     * within each `SpeechRecognitionResult`. The server may return fewer than
     * `max_alternatives`. Valid values are `0`-`30`. A value of `0` or `1` will
     * return a maximum of one. If omitted, will return a maximum of one.
     * </pre>
     *
     * <code>int32 max_alternatives = 2;</code>
     */
    public Builder clearMaxAlternatives() {
      
      maxAlternatives_ = 0;
      onChanged();
      return this;
    }

    private boolean filterProfanity_ ;
    /**
     * <pre>
     * *Optional* If set to `true`, the server will attempt to filter out
     * profanities, replacing all but the initial character in each filtered word
     * with asterisks, e.g. "f***". If set to `false` or omitted, profanities
     * won't be filtered out.
     * </pre>
     *
     * <code>bool filter_profanity = 3;</code>
     */
    public boolean getFilterProfanity() {
      return filterProfanity_;
    }
    /**
     * <pre>
     * *Optional* If set to `true`, the server will attempt to filter out
     * profanities, replacing all but the initial character in each filtered word
     * with asterisks, e.g. "f***". If set to `false` or omitted, profanities
     * won't be filtered out.
     * </pre>
     *
     * <code>bool filter_profanity = 3;</code>
     */
    public Builder setFilterProfanity(boolean value) {
      
      filterProfanity_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * *Optional* If set to `true`, the server will attempt to filter out
     * profanities, replacing all but the initial character in each filtered word
     * with asterisks, e.g. "f***". If set to `false` or omitted, profanities
     * won't be filtered out.
     * </pre>
     *
     * <code>bool filter_profanity = 3;</code>
     */
    public Builder clearFilterProfanity() {
      
      filterProfanity_ = false;
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.videointelligence.v1p1beta1.SpeechContext> speechContexts_ =
      java.util.Collections.emptyList();
    private void ensureSpeechContextsIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        speechContexts_ = new java.util.ArrayList<com.google.cloud.videointelligence.v1p1beta1.SpeechContext>(speechContexts_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.videointelligence.v1p1beta1.SpeechContext, com.google.cloud.videointelligence.v1p1beta1.SpeechContext.Builder, com.google.cloud.videointelligence.v1p1beta1.SpeechContextOrBuilder> speechContextsBuilder_;

    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public java.util.List<com.google.cloud.videointelligence.v1p1beta1.SpeechContext> getSpeechContextsList() {
      if (speechContextsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(speechContexts_);
      } else {
        return speechContextsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public int getSpeechContextsCount() {
      if (speechContextsBuilder_ == null) {
        return speechContexts_.size();
      } else {
        return speechContextsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public com.google.cloud.videointelligence.v1p1beta1.SpeechContext getSpeechContexts(int index) {
      if (speechContextsBuilder_ == null) {
        return speechContexts_.get(index);
      } else {
        return speechContextsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public Builder setSpeechContexts(
        int index, com.google.cloud.videointelligence.v1p1beta1.SpeechContext value) {
      if (speechContextsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpeechContextsIsMutable();
        speechContexts_.set(index, value);
        onChanged();
      } else {
        speechContextsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public Builder setSpeechContexts(
        int index, com.google.cloud.videointelligence.v1p1beta1.SpeechContext.Builder builderForValue) {
      if (speechContextsBuilder_ == null) {
        ensureSpeechContextsIsMutable();
        speechContexts_.set(index, builderForValue.build());
        onChanged();
      } else {
        speechContextsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public Builder addSpeechContexts(com.google.cloud.videointelligence.v1p1beta1.SpeechContext value) {
      if (speechContextsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpeechContextsIsMutable();
        speechContexts_.add(value);
        onChanged();
      } else {
        speechContextsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public Builder addSpeechContexts(
        int index, com.google.cloud.videointelligence.v1p1beta1.SpeechContext value) {
      if (speechContextsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpeechContextsIsMutable();
        speechContexts_.add(index, value);
        onChanged();
      } else {
        speechContextsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public Builder addSpeechContexts(
        com.google.cloud.videointelligence.v1p1beta1.SpeechContext.Builder builderForValue) {
      if (speechContextsBuilder_ == null) {
        ensureSpeechContextsIsMutable();
        speechContexts_.add(builderForValue.build());
        onChanged();
      } else {
        speechContextsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public Builder addSpeechContexts(
        int index, com.google.cloud.videointelligence.v1p1beta1.SpeechContext.Builder builderForValue) {
      if (speechContextsBuilder_ == null) {
        ensureSpeechContextsIsMutable();
        speechContexts_.add(index, builderForValue.build());
        onChanged();
      } else {
        speechContextsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public Builder addAllSpeechContexts(
        java.lang.Iterable<? extends com.google.cloud.videointelligence.v1p1beta1.SpeechContext> values) {
      if (speechContextsBuilder_ == null) {
        ensureSpeechContextsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, speechContexts_);
        onChanged();
      } else {
        speechContextsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public Builder clearSpeechContexts() {
      if (speechContextsBuilder_ == null) {
        speechContexts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        speechContextsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public Builder removeSpeechContexts(int index) {
      if (speechContextsBuilder_ == null) {
        ensureSpeechContextsIsMutable();
        speechContexts_.remove(index);
        onChanged();
      } else {
        speechContextsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public com.google.cloud.videointelligence.v1p1beta1.SpeechContext.Builder getSpeechContextsBuilder(
        int index) {
      return getSpeechContextsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public com.google.cloud.videointelligence.v1p1beta1.SpeechContextOrBuilder getSpeechContextsOrBuilder(
        int index) {
      if (speechContextsBuilder_ == null) {
        return speechContexts_.get(index);  } else {
        return speechContextsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public java.util.List<? extends com.google.cloud.videointelligence.v1p1beta1.SpeechContextOrBuilder> 
         getSpeechContextsOrBuilderList() {
      if (speechContextsBuilder_ != null) {
        return speechContextsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(speechContexts_);
      }
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public com.google.cloud.videointelligence.v1p1beta1.SpeechContext.Builder addSpeechContextsBuilder() {
      return getSpeechContextsFieldBuilder().addBuilder(
          com.google.cloud.videointelligence.v1p1beta1.SpeechContext.getDefaultInstance());
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public com.google.cloud.videointelligence.v1p1beta1.SpeechContext.Builder addSpeechContextsBuilder(
        int index) {
      return getSpeechContextsFieldBuilder().addBuilder(
          index, com.google.cloud.videointelligence.v1p1beta1.SpeechContext.getDefaultInstance());
    }
    /**
     * <pre>
     * *Optional* A means to provide context to assist the speech recognition.
     * </pre>
     *
     * <code>repeated .google.cloud.videointelligence.v1p1beta1.SpeechContext speech_contexts = 4;</code>
     */
    public java.util.List<com.google.cloud.videointelligence.v1p1beta1.SpeechContext.Builder> 
         getSpeechContextsBuilderList() {
      return getSpeechContextsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.videointelligence.v1p1beta1.SpeechContext, com.google.cloud.videointelligence.v1p1beta1.SpeechContext.Builder, com.google.cloud.videointelligence.v1p1beta1.SpeechContextOrBuilder> 
        getSpeechContextsFieldBuilder() {
      if (speechContextsBuilder_ == null) {
        speechContextsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.videointelligence.v1p1beta1.SpeechContext, com.google.cloud.videointelligence.v1p1beta1.SpeechContext.Builder, com.google.cloud.videointelligence.v1p1beta1.SpeechContextOrBuilder>(
                speechContexts_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        speechContexts_ = null;
      }
      return speechContextsBuilder_;
    }

    private java.util.List<java.lang.Integer> audioTracks_ = java.util.Collections.emptyList();
    private void ensureAudioTracksIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        audioTracks_ = new java.util.ArrayList<java.lang.Integer>(audioTracks_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     * *Optional* For file formats, such as MXF or MKV, supporting multiple audio
     * tracks, specify up to two tracks. Default: track 0.
     * </pre>
     *
     * <code>repeated int32 audio_tracks = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getAudioTracksList() {
      return java.util.Collections.unmodifiableList(audioTracks_);
    }
    /**
     * <pre>
     * *Optional* For file formats, such as MXF or MKV, supporting multiple audio
     * tracks, specify up to two tracks. Default: track 0.
     * </pre>
     *
     * <code>repeated int32 audio_tracks = 6;</code>
     */
    public int getAudioTracksCount() {
      return audioTracks_.size();
    }
    /**
     * <pre>
     * *Optional* For file formats, such as MXF or MKV, supporting multiple audio
     * tracks, specify up to two tracks. Default: track 0.
     * </pre>
     *
     * <code>repeated int32 audio_tracks = 6;</code>
     */
    public int getAudioTracks(int index) {
      return audioTracks_.get(index);
    }
    /**
     * <pre>
     * *Optional* For file formats, such as MXF or MKV, supporting multiple audio
     * tracks, specify up to two tracks. Default: track 0.
     * </pre>
     *
     * <code>repeated int32 audio_tracks = 6;</code>
     */
    public Builder setAudioTracks(
        int index, int value) {
      ensureAudioTracksIsMutable();
      audioTracks_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * *Optional* For file formats, such as MXF or MKV, supporting multiple audio
     * tracks, specify up to two tracks. Default: track 0.
     * </pre>
     *
     * <code>repeated int32 audio_tracks = 6;</code>
     */
    public Builder addAudioTracks(int value) {
      ensureAudioTracksIsMutable();
      audioTracks_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * *Optional* For file formats, such as MXF or MKV, supporting multiple audio
     * tracks, specify up to two tracks. Default: track 0.
     * </pre>
     *
     * <code>repeated int32 audio_tracks = 6;</code>
     */
    public Builder addAllAudioTracks(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureAudioTracksIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, audioTracks_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * *Optional* For file formats, such as MXF or MKV, supporting multiple audio
     * tracks, specify up to two tracks. Default: track 0.
     * </pre>
     *
     * <code>repeated int32 audio_tracks = 6;</code>
     */
    public Builder clearAudioTracks() {
      audioTracks_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig)
  private static final com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig();
  }

  public static com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SpeechTranscriptionConfig>
      PARSER = new com.google.protobuf.AbstractParser<SpeechTranscriptionConfig>() {
    public SpeechTranscriptionConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SpeechTranscriptionConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SpeechTranscriptionConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SpeechTranscriptionConfig> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.videointelligence.v1p1beta1.SpeechTranscriptionConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

