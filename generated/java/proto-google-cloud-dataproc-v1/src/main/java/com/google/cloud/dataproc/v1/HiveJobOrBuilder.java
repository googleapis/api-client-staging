// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataproc/v1/jobs.proto

package com.google.cloud.dataproc.v1;

public interface HiveJobOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.dataproc.v1.HiveJob)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The HCFS URI of the script that contains Hive queries.
   * </pre>
   *
   * <code>string query_file_uri = 1;</code>
   */
  java.lang.String getQueryFileUri();
  /**
   * <pre>
   * The HCFS URI of the script that contains Hive queries.
   * </pre>
   *
   * <code>string query_file_uri = 1;</code>
   */
  com.google.protobuf.ByteString
      getQueryFileUriBytes();

  /**
   * <pre>
   * A list of queries.
   * </pre>
   *
   * <code>.google.cloud.dataproc.v1.QueryList query_list = 2;</code>
   */
  boolean hasQueryList();
  /**
   * <pre>
   * A list of queries.
   * </pre>
   *
   * <code>.google.cloud.dataproc.v1.QueryList query_list = 2;</code>
   */
  com.google.cloud.dataproc.v1.QueryList getQueryList();
  /**
   * <pre>
   * A list of queries.
   * </pre>
   *
   * <code>.google.cloud.dataproc.v1.QueryList query_list = 2;</code>
   */
  com.google.cloud.dataproc.v1.QueryListOrBuilder getQueryListOrBuilder();

  /**
   * <pre>
   * Optional. Whether to continue executing queries if a query fails.
   * The default value is `false`. Setting to `true` can be useful when executing
   * independent parallel queries.
   * </pre>
   *
   * <code>bool continue_on_failure = 3;</code>
   */
  boolean getContinueOnFailure();

  /**
   * <pre>
   * Optional. Mapping of query variable names to values (equivalent to the
   * Hive command: `SET name="value";`).
   * </pre>
   *
   * <code>map&lt;string, string&gt; script_variables = 4;</code>
   */
  int getScriptVariablesCount();
  /**
   * <pre>
   * Optional. Mapping of query variable names to values (equivalent to the
   * Hive command: `SET name="value";`).
   * </pre>
   *
   * <code>map&lt;string, string&gt; script_variables = 4;</code>
   */
  boolean containsScriptVariables(
      java.lang.String key);
  /**
   * Use {@link #getScriptVariablesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getScriptVariables();
  /**
   * <pre>
   * Optional. Mapping of query variable names to values (equivalent to the
   * Hive command: `SET name="value";`).
   * </pre>
   *
   * <code>map&lt;string, string&gt; script_variables = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getScriptVariablesMap();
  /**
   * <pre>
   * Optional. Mapping of query variable names to values (equivalent to the
   * Hive command: `SET name="value";`).
   * </pre>
   *
   * <code>map&lt;string, string&gt; script_variables = 4;</code>
   */

  java.lang.String getScriptVariablesOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * Optional. Mapping of query variable names to values (equivalent to the
   * Hive command: `SET name="value";`).
   * </pre>
   *
   * <code>map&lt;string, string&gt; script_variables = 4;</code>
   */

  java.lang.String getScriptVariablesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Optional. A mapping of property names and values, used to configure Hive.
   * Properties that conflict with values set by the Cloud Dataproc API may be
   * overwritten. Can include properties set in /etc/hadoop/conf/&#42;-site.xml,
   * /etc/hive/conf/hive-site.xml, and classes in user code.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 5;</code>
   */
  int getPropertiesCount();
  /**
   * <pre>
   * Optional. A mapping of property names and values, used to configure Hive.
   * Properties that conflict with values set by the Cloud Dataproc API may be
   * overwritten. Can include properties set in /etc/hadoop/conf/&#42;-site.xml,
   * /etc/hive/conf/hive-site.xml, and classes in user code.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 5;</code>
   */
  boolean containsProperties(
      java.lang.String key);
  /**
   * Use {@link #getPropertiesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getProperties();
  /**
   * <pre>
   * Optional. A mapping of property names and values, used to configure Hive.
   * Properties that conflict with values set by the Cloud Dataproc API may be
   * overwritten. Can include properties set in /etc/hadoop/conf/&#42;-site.xml,
   * /etc/hive/conf/hive-site.xml, and classes in user code.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getPropertiesMap();
  /**
   * <pre>
   * Optional. A mapping of property names and values, used to configure Hive.
   * Properties that conflict with values set by the Cloud Dataproc API may be
   * overwritten. Can include properties set in /etc/hadoop/conf/&#42;-site.xml,
   * /etc/hive/conf/hive-site.xml, and classes in user code.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 5;</code>
   */

  java.lang.String getPropertiesOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * Optional. A mapping of property names and values, used to configure Hive.
   * Properties that conflict with values set by the Cloud Dataproc API may be
   * overwritten. Can include properties set in /etc/hadoop/conf/&#42;-site.xml,
   * /etc/hive/conf/hive-site.xml, and classes in user code.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 5;</code>
   */

  java.lang.String getPropertiesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Optional. HCFS URIs of jar files to add to the CLASSPATH of the
   * Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes
   * and UDFs.
   * </pre>
   *
   * <code>repeated string jar_file_uris = 6;</code>
   */
  java.util.List<java.lang.String>
      getJarFileUrisList();
  /**
   * <pre>
   * Optional. HCFS URIs of jar files to add to the CLASSPATH of the
   * Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes
   * and UDFs.
   * </pre>
   *
   * <code>repeated string jar_file_uris = 6;</code>
   */
  int getJarFileUrisCount();
  /**
   * <pre>
   * Optional. HCFS URIs of jar files to add to the CLASSPATH of the
   * Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes
   * and UDFs.
   * </pre>
   *
   * <code>repeated string jar_file_uris = 6;</code>
   */
  java.lang.String getJarFileUris(int index);
  /**
   * <pre>
   * Optional. HCFS URIs of jar files to add to the CLASSPATH of the
   * Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes
   * and UDFs.
   * </pre>
   *
   * <code>repeated string jar_file_uris = 6;</code>
   */
  com.google.protobuf.ByteString
      getJarFileUrisBytes(int index);

  public com.google.cloud.dataproc.v1.HiveJob.QueriesCase getQueriesCase();
}
