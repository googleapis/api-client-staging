// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/cloudtrace/v2/trace.proto

package com.google.devtools.cloudtrace.v2;

public interface ModuleOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.cloudtrace.v2.Module)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * For example: main binary, kernel modules, and dynamic libraries
   * such as libc.so, sharedlib.so (up to 256 bytes).
   * </pre>
   *
   * <code>.google.devtools.cloudtrace.v2.TruncatableString module = 1;</code>
   */
  boolean hasModule();
  /**
   * <pre>
   * For example: main binary, kernel modules, and dynamic libraries
   * such as libc.so, sharedlib.so (up to 256 bytes).
   * </pre>
   *
   * <code>.google.devtools.cloudtrace.v2.TruncatableString module = 1;</code>
   */
  com.google.devtools.cloudtrace.v2.TruncatableString getModule();
  /**
   * <pre>
   * For example: main binary, kernel modules, and dynamic libraries
   * such as libc.so, sharedlib.so (up to 256 bytes).
   * </pre>
   *
   * <code>.google.devtools.cloudtrace.v2.TruncatableString module = 1;</code>
   */
  com.google.devtools.cloudtrace.v2.TruncatableStringOrBuilder getModuleOrBuilder();

  /**
   * <pre>
   * A unique identifier for the module, usually a hash of its
   * contents (up to 128 bytes).
   * </pre>
   *
   * <code>.google.devtools.cloudtrace.v2.TruncatableString build_id = 2;</code>
   */
  boolean hasBuildId();
  /**
   * <pre>
   * A unique identifier for the module, usually a hash of its
   * contents (up to 128 bytes).
   * </pre>
   *
   * <code>.google.devtools.cloudtrace.v2.TruncatableString build_id = 2;</code>
   */
  com.google.devtools.cloudtrace.v2.TruncatableString getBuildId();
  /**
   * <pre>
   * A unique identifier for the module, usually a hash of its
   * contents (up to 128 bytes).
   * </pre>
   *
   * <code>.google.devtools.cloudtrace.v2.TruncatableString build_id = 2;</code>
   */
  com.google.devtools.cloudtrace.v2.TruncatableStringOrBuilder getBuildIdOrBuilder();
}
