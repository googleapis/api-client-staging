// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.devtools.cloudtrace.v2;

import "google/api/annotations.proto";
import "google/devtools/cloudtrace/v2/trace.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Google.Cloud.Trace.V2";
option go_package = "google.golang.org/genproto/googleapis/devtools/cloudtrace/v2;cloudtrace";
option java_multiple_files = true;
option java_outer_classname = "TracingProto";
option java_package = "com.google.devtools.cloudtrace.v2";


// This file describes an API for collecting and viewing traces and spans
// within a trace.  A Trace is a collection of spans corresponding to a single
// operation or set of operations for an application. A span is an individual
// timed event which forms a node of the trace tree. A single trace may
// contain span(s) from multiple services.
service TraceService {
  // Sends new spans to Stackdriver Trace or updates existing traces. If the
  // name of a trace that you send matches that of an existing trace, new spans
  // are added to the existing trace. Attempt to update existing spans results
  // undefined behavior. If the name does not match, a new trace is created
  // with given set of spans.
  rpc BatchWriteSpans(BatchWriteSpansRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = { post: "/v2/{name=projects/*}/traces:batchWrite" body: "*" };
  }

  // Creates a new Span.
  rpc CreateSpan(Span) returns (Span) {
    option (google.api.http) = { put: "/v2/{name=projects/*/traces/*/spans/*}" body: "*" };
  }
}

// The request message for the `BatchWriteSpans` method.
message BatchWriteSpansRequest {
  // Required. Name of the project where the spans belong. The format is
  // `projects/PROJECT_ID`.
  string name = 1;

  // A collection of spans.
  repeated Span spans = 2;
}
