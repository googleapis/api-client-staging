// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

package com.google.privacy.dlp.v2;

public interface LocationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.Location)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Zero-based byte offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Note that when the content is not textual, this references
   * the UTF-8 encoded textual representation of the content.
   * Omitted if content is an image.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Range byte_range = 1;</code>
   */
  boolean hasByteRange();
  /**
   * <pre>
   * Zero-based byte offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Note that when the content is not textual, this references
   * the UTF-8 encoded textual representation of the content.
   * Omitted if content is an image.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Range byte_range = 1;</code>
   */
  com.google.privacy.dlp.v2.Range getByteRange();
  /**
   * <pre>
   * Zero-based byte offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Note that when the content is not textual, this references
   * the UTF-8 encoded textual representation of the content.
   * Omitted if content is an image.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Range byte_range = 1;</code>
   */
  com.google.privacy.dlp.v2.RangeOrBuilder getByteRangeOrBuilder();

  /**
   * <pre>
   * Unicode character offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Provided when the content is text.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Range codepoint_range = 2;</code>
   */
  boolean hasCodepointRange();
  /**
   * <pre>
   * Unicode character offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Provided when the content is text.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Range codepoint_range = 2;</code>
   */
  com.google.privacy.dlp.v2.Range getCodepointRange();
  /**
   * <pre>
   * Unicode character offsets delimiting the finding.
   * These are relative to the finding's containing element.
   * Provided when the content is text.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Range codepoint_range = 2;</code>
   */
  com.google.privacy.dlp.v2.RangeOrBuilder getCodepointRangeOrBuilder();

  /**
   * <pre>
   * List of nested objects pointing to the precise location of the finding
   * within the file or record.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.ContentLocation content_locations = 7;</code>
   */
  java.util.List<com.google.privacy.dlp.v2.ContentLocation> 
      getContentLocationsList();
  /**
   * <pre>
   * List of nested objects pointing to the precise location of the finding
   * within the file or record.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.ContentLocation content_locations = 7;</code>
   */
  com.google.privacy.dlp.v2.ContentLocation getContentLocations(int index);
  /**
   * <pre>
   * List of nested objects pointing to the precise location of the finding
   * within the file or record.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.ContentLocation content_locations = 7;</code>
   */
  int getContentLocationsCount();
  /**
   * <pre>
   * List of nested objects pointing to the precise location of the finding
   * within the file or record.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.ContentLocation content_locations = 7;</code>
   */
  java.util.List<? extends com.google.privacy.dlp.v2.ContentLocationOrBuilder> 
      getContentLocationsOrBuilderList();
  /**
   * <pre>
   * List of nested objects pointing to the precise location of the finding
   * within the file or record.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.ContentLocation content_locations = 7;</code>
   */
  com.google.privacy.dlp.v2.ContentLocationOrBuilder getContentLocationsOrBuilder(
      int index);
}
