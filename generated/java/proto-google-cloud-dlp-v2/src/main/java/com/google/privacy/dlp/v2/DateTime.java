// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

package com.google.privacy.dlp.v2;

/**
 * <pre>
 * Message for a date time object.
 * </pre>
 *
 * Protobuf type {@code google.privacy.dlp.v2.DateTime}
 */
public  final class DateTime extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2.DateTime)
    DateTimeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DateTime.newBuilder() to construct.
  private DateTime(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DateTime() {
    dayOfWeek_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DateTime(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.type.Date.Builder subBuilder = null;
            if (date_ != null) {
              subBuilder = date_.toBuilder();
            }
            date_ = input.readMessage(com.google.type.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(date_);
              date_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            dayOfWeek_ = rawValue;
            break;
          }
          case 26: {
            com.google.type.TimeOfDay.Builder subBuilder = null;
            if (time_ != null) {
              subBuilder = time_.toBuilder();
            }
            time_ = input.readMessage(com.google.type.TimeOfDay.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(time_);
              time_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.privacy.dlp.v2.DateTime.TimeZone.Builder subBuilder = null;
            if (timeZone_ != null) {
              subBuilder = timeZone_.toBuilder();
            }
            timeZone_ = input.readMessage(com.google.privacy.dlp.v2.DateTime.TimeZone.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(timeZone_);
              timeZone_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.privacy.dlp.v2.DlpProto.internal_static_google_privacy_dlp_v2_DateTime_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.privacy.dlp.v2.DlpProto.internal_static_google_privacy_dlp_v2_DateTime_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.privacy.dlp.v2.DateTime.class, com.google.privacy.dlp.v2.DateTime.Builder.class);
  }

  public interface TimeZoneOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.DateTime.TimeZone)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Set only if the offset can be determined. Positive for time ahead of UTC.
     * E.g. For "UTC-9", this value is -540.
     * </pre>
     *
     * <code>int32 offset_minutes = 1;</code>
     */
    int getOffsetMinutes();
  }
  /**
   * Protobuf type {@code google.privacy.dlp.v2.DateTime.TimeZone}
   */
  public  static final class TimeZone extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2.DateTime.TimeZone)
      TimeZoneOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TimeZone.newBuilder() to construct.
    private TimeZone(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimeZone() {
      offsetMinutes_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TimeZone(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              offsetMinutes_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.privacy.dlp.v2.DlpProto.internal_static_google_privacy_dlp_v2_DateTime_TimeZone_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2.DlpProto.internal_static_google_privacy_dlp_v2_DateTime_TimeZone_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2.DateTime.TimeZone.class, com.google.privacy.dlp.v2.DateTime.TimeZone.Builder.class);
    }

    public static final int OFFSET_MINUTES_FIELD_NUMBER = 1;
    private int offsetMinutes_;
    /**
     * <pre>
     * Set only if the offset can be determined. Positive for time ahead of UTC.
     * E.g. For "UTC-9", this value is -540.
     * </pre>
     *
     * <code>int32 offset_minutes = 1;</code>
     */
    public int getOffsetMinutes() {
      return offsetMinutes_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (offsetMinutes_ != 0) {
        output.writeInt32(1, offsetMinutes_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (offsetMinutes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, offsetMinutes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.privacy.dlp.v2.DateTime.TimeZone)) {
        return super.equals(obj);
      }
      com.google.privacy.dlp.v2.DateTime.TimeZone other = (com.google.privacy.dlp.v2.DateTime.TimeZone) obj;

      boolean result = true;
      result = result && (getOffsetMinutes()
          == other.getOffsetMinutes());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OFFSET_MINUTES_FIELD_NUMBER;
      hash = (53 * hash) + getOffsetMinutes();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.privacy.dlp.v2.DateTime.TimeZone parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.privacy.dlp.v2.DateTime.TimeZone prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.privacy.dlp.v2.DateTime.TimeZone}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2.DateTime.TimeZone)
        com.google.privacy.dlp.v2.DateTime.TimeZoneOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.privacy.dlp.v2.DlpProto.internal_static_google_privacy_dlp_v2_DateTime_TimeZone_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.privacy.dlp.v2.DlpProto.internal_static_google_privacy_dlp_v2_DateTime_TimeZone_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.privacy.dlp.v2.DateTime.TimeZone.class, com.google.privacy.dlp.v2.DateTime.TimeZone.Builder.class);
      }

      // Construct using com.google.privacy.dlp.v2.DateTime.TimeZone.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        offsetMinutes_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.privacy.dlp.v2.DlpProto.internal_static_google_privacy_dlp_v2_DateTime_TimeZone_descriptor;
      }

      public com.google.privacy.dlp.v2.DateTime.TimeZone getDefaultInstanceForType() {
        return com.google.privacy.dlp.v2.DateTime.TimeZone.getDefaultInstance();
      }

      public com.google.privacy.dlp.v2.DateTime.TimeZone build() {
        com.google.privacy.dlp.v2.DateTime.TimeZone result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.privacy.dlp.v2.DateTime.TimeZone buildPartial() {
        com.google.privacy.dlp.v2.DateTime.TimeZone result = new com.google.privacy.dlp.v2.DateTime.TimeZone(this);
        result.offsetMinutes_ = offsetMinutes_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.privacy.dlp.v2.DateTime.TimeZone) {
          return mergeFrom((com.google.privacy.dlp.v2.DateTime.TimeZone)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.privacy.dlp.v2.DateTime.TimeZone other) {
        if (other == com.google.privacy.dlp.v2.DateTime.TimeZone.getDefaultInstance()) return this;
        if (other.getOffsetMinutes() != 0) {
          setOffsetMinutes(other.getOffsetMinutes());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.privacy.dlp.v2.DateTime.TimeZone parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.privacy.dlp.v2.DateTime.TimeZone) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int offsetMinutes_ ;
      /**
       * <pre>
       * Set only if the offset can be determined. Positive for time ahead of UTC.
       * E.g. For "UTC-9", this value is -540.
       * </pre>
       *
       * <code>int32 offset_minutes = 1;</code>
       */
      public int getOffsetMinutes() {
        return offsetMinutes_;
      }
      /**
       * <pre>
       * Set only if the offset can be determined. Positive for time ahead of UTC.
       * E.g. For "UTC-9", this value is -540.
       * </pre>
       *
       * <code>int32 offset_minutes = 1;</code>
       */
      public Builder setOffsetMinutes(int value) {
        
        offsetMinutes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set only if the offset can be determined. Positive for time ahead of UTC.
       * E.g. For "UTC-9", this value is -540.
       * </pre>
       *
       * <code>int32 offset_minutes = 1;</code>
       */
      public Builder clearOffsetMinutes() {
        
        offsetMinutes_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2.DateTime.TimeZone)
    }

    // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2.DateTime.TimeZone)
    private static final com.google.privacy.dlp.v2.DateTime.TimeZone DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.privacy.dlp.v2.DateTime.TimeZone();
    }

    public static com.google.privacy.dlp.v2.DateTime.TimeZone getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TimeZone>
        PARSER = new com.google.protobuf.AbstractParser<TimeZone>() {
      public TimeZone parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TimeZone(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TimeZone> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimeZone> getParserForType() {
      return PARSER;
    }

    public com.google.privacy.dlp.v2.DateTime.TimeZone getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int DATE_FIELD_NUMBER = 1;
  private com.google.type.Date date_;
  /**
   * <pre>
   * One or more of the following must be set. All fields are optional, but
   * when set must be valid date or time values.
   * </pre>
   *
   * <code>.google.type.Date date = 1;</code>
   */
  public boolean hasDate() {
    return date_ != null;
  }
  /**
   * <pre>
   * One or more of the following must be set. All fields are optional, but
   * when set must be valid date or time values.
   * </pre>
   *
   * <code>.google.type.Date date = 1;</code>
   */
  public com.google.type.Date getDate() {
    return date_ == null ? com.google.type.Date.getDefaultInstance() : date_;
  }
  /**
   * <pre>
   * One or more of the following must be set. All fields are optional, but
   * when set must be valid date or time values.
   * </pre>
   *
   * <code>.google.type.Date date = 1;</code>
   */
  public com.google.type.DateOrBuilder getDateOrBuilder() {
    return getDate();
  }

  public static final int DAY_OF_WEEK_FIELD_NUMBER = 2;
  private int dayOfWeek_;
  /**
   * <code>.google.type.DayOfWeek day_of_week = 2;</code>
   */
  public int getDayOfWeekValue() {
    return dayOfWeek_;
  }
  /**
   * <code>.google.type.DayOfWeek day_of_week = 2;</code>
   */
  public com.google.type.DayOfWeek getDayOfWeek() {
    com.google.type.DayOfWeek result = com.google.type.DayOfWeek.valueOf(dayOfWeek_);
    return result == null ? com.google.type.DayOfWeek.UNRECOGNIZED : result;
  }

  public static final int TIME_FIELD_NUMBER = 3;
  private com.google.type.TimeOfDay time_;
  /**
   * <code>.google.type.TimeOfDay time = 3;</code>
   */
  public boolean hasTime() {
    return time_ != null;
  }
  /**
   * <code>.google.type.TimeOfDay time = 3;</code>
   */
  public com.google.type.TimeOfDay getTime() {
    return time_ == null ? com.google.type.TimeOfDay.getDefaultInstance() : time_;
  }
  /**
   * <code>.google.type.TimeOfDay time = 3;</code>
   */
  public com.google.type.TimeOfDayOrBuilder getTimeOrBuilder() {
    return getTime();
  }

  public static final int TIME_ZONE_FIELD_NUMBER = 4;
  private com.google.privacy.dlp.v2.DateTime.TimeZone timeZone_;
  /**
   * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
   */
  public boolean hasTimeZone() {
    return timeZone_ != null;
  }
  /**
   * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
   */
  public com.google.privacy.dlp.v2.DateTime.TimeZone getTimeZone() {
    return timeZone_ == null ? com.google.privacy.dlp.v2.DateTime.TimeZone.getDefaultInstance() : timeZone_;
  }
  /**
   * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
   */
  public com.google.privacy.dlp.v2.DateTime.TimeZoneOrBuilder getTimeZoneOrBuilder() {
    return getTimeZone();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (date_ != null) {
      output.writeMessage(1, getDate());
    }
    if (dayOfWeek_ != com.google.type.DayOfWeek.DAY_OF_WEEK_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, dayOfWeek_);
    }
    if (time_ != null) {
      output.writeMessage(3, getTime());
    }
    if (timeZone_ != null) {
      output.writeMessage(4, getTimeZone());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (date_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDate());
    }
    if (dayOfWeek_ != com.google.type.DayOfWeek.DAY_OF_WEEK_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, dayOfWeek_);
    }
    if (time_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getTime());
    }
    if (timeZone_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getTimeZone());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.privacy.dlp.v2.DateTime)) {
      return super.equals(obj);
    }
    com.google.privacy.dlp.v2.DateTime other = (com.google.privacy.dlp.v2.DateTime) obj;

    boolean result = true;
    result = result && (hasDate() == other.hasDate());
    if (hasDate()) {
      result = result && getDate()
          .equals(other.getDate());
    }
    result = result && dayOfWeek_ == other.dayOfWeek_;
    result = result && (hasTime() == other.hasTime());
    if (hasTime()) {
      result = result && getTime()
          .equals(other.getTime());
    }
    result = result && (hasTimeZone() == other.hasTimeZone());
    if (hasTimeZone()) {
      result = result && getTimeZone()
          .equals(other.getTimeZone());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDate()) {
      hash = (37 * hash) + DATE_FIELD_NUMBER;
      hash = (53 * hash) + getDate().hashCode();
    }
    hash = (37 * hash) + DAY_OF_WEEK_FIELD_NUMBER;
    hash = (53 * hash) + dayOfWeek_;
    if (hasTime()) {
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime().hashCode();
    }
    if (hasTimeZone()) {
      hash = (37 * hash) + TIME_ZONE_FIELD_NUMBER;
      hash = (53 * hash) + getTimeZone().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.privacy.dlp.v2.DateTime parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2.DateTime parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2.DateTime parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2.DateTime parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2.DateTime parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.privacy.dlp.v2.DateTime parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2.DateTime parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2.DateTime parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2.DateTime parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2.DateTime parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.privacy.dlp.v2.DateTime parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.privacy.dlp.v2.DateTime parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.privacy.dlp.v2.DateTime prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Message for a date time object.
   * </pre>
   *
   * Protobuf type {@code google.privacy.dlp.v2.DateTime}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2.DateTime)
      com.google.privacy.dlp.v2.DateTimeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.privacy.dlp.v2.DlpProto.internal_static_google_privacy_dlp_v2_DateTime_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2.DlpProto.internal_static_google_privacy_dlp_v2_DateTime_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2.DateTime.class, com.google.privacy.dlp.v2.DateTime.Builder.class);
    }

    // Construct using com.google.privacy.dlp.v2.DateTime.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (dateBuilder_ == null) {
        date_ = null;
      } else {
        date_ = null;
        dateBuilder_ = null;
      }
      dayOfWeek_ = 0;

      if (timeBuilder_ == null) {
        time_ = null;
      } else {
        time_ = null;
        timeBuilder_ = null;
      }
      if (timeZoneBuilder_ == null) {
        timeZone_ = null;
      } else {
        timeZone_ = null;
        timeZoneBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.privacy.dlp.v2.DlpProto.internal_static_google_privacy_dlp_v2_DateTime_descriptor;
    }

    public com.google.privacy.dlp.v2.DateTime getDefaultInstanceForType() {
      return com.google.privacy.dlp.v2.DateTime.getDefaultInstance();
    }

    public com.google.privacy.dlp.v2.DateTime build() {
      com.google.privacy.dlp.v2.DateTime result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.privacy.dlp.v2.DateTime buildPartial() {
      com.google.privacy.dlp.v2.DateTime result = new com.google.privacy.dlp.v2.DateTime(this);
      if (dateBuilder_ == null) {
        result.date_ = date_;
      } else {
        result.date_ = dateBuilder_.build();
      }
      result.dayOfWeek_ = dayOfWeek_;
      if (timeBuilder_ == null) {
        result.time_ = time_;
      } else {
        result.time_ = timeBuilder_.build();
      }
      if (timeZoneBuilder_ == null) {
        result.timeZone_ = timeZone_;
      } else {
        result.timeZone_ = timeZoneBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.privacy.dlp.v2.DateTime) {
        return mergeFrom((com.google.privacy.dlp.v2.DateTime)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.privacy.dlp.v2.DateTime other) {
      if (other == com.google.privacy.dlp.v2.DateTime.getDefaultInstance()) return this;
      if (other.hasDate()) {
        mergeDate(other.getDate());
      }
      if (other.dayOfWeek_ != 0) {
        setDayOfWeekValue(other.getDayOfWeekValue());
      }
      if (other.hasTime()) {
        mergeTime(other.getTime());
      }
      if (other.hasTimeZone()) {
        mergeTimeZone(other.getTimeZone());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.privacy.dlp.v2.DateTime parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.privacy.dlp.v2.DateTime) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.type.Date date_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder> dateBuilder_;
    /**
     * <pre>
     * One or more of the following must be set. All fields are optional, but
     * when set must be valid date or time values.
     * </pre>
     *
     * <code>.google.type.Date date = 1;</code>
     */
    public boolean hasDate() {
      return dateBuilder_ != null || date_ != null;
    }
    /**
     * <pre>
     * One or more of the following must be set. All fields are optional, but
     * when set must be valid date or time values.
     * </pre>
     *
     * <code>.google.type.Date date = 1;</code>
     */
    public com.google.type.Date getDate() {
      if (dateBuilder_ == null) {
        return date_ == null ? com.google.type.Date.getDefaultInstance() : date_;
      } else {
        return dateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * One or more of the following must be set. All fields are optional, but
     * when set must be valid date or time values.
     * </pre>
     *
     * <code>.google.type.Date date = 1;</code>
     */
    public Builder setDate(com.google.type.Date value) {
      if (dateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        date_ = value;
        onChanged();
      } else {
        dateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * One or more of the following must be set. All fields are optional, but
     * when set must be valid date or time values.
     * </pre>
     *
     * <code>.google.type.Date date = 1;</code>
     */
    public Builder setDate(
        com.google.type.Date.Builder builderForValue) {
      if (dateBuilder_ == null) {
        date_ = builderForValue.build();
        onChanged();
      } else {
        dateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * One or more of the following must be set. All fields are optional, but
     * when set must be valid date or time values.
     * </pre>
     *
     * <code>.google.type.Date date = 1;</code>
     */
    public Builder mergeDate(com.google.type.Date value) {
      if (dateBuilder_ == null) {
        if (date_ != null) {
          date_ =
            com.google.type.Date.newBuilder(date_).mergeFrom(value).buildPartial();
        } else {
          date_ = value;
        }
        onChanged();
      } else {
        dateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * One or more of the following must be set. All fields are optional, but
     * when set must be valid date or time values.
     * </pre>
     *
     * <code>.google.type.Date date = 1;</code>
     */
    public Builder clearDate() {
      if (dateBuilder_ == null) {
        date_ = null;
        onChanged();
      } else {
        date_ = null;
        dateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * One or more of the following must be set. All fields are optional, but
     * when set must be valid date or time values.
     * </pre>
     *
     * <code>.google.type.Date date = 1;</code>
     */
    public com.google.type.Date.Builder getDateBuilder() {
      
      onChanged();
      return getDateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * One or more of the following must be set. All fields are optional, but
     * when set must be valid date or time values.
     * </pre>
     *
     * <code>.google.type.Date date = 1;</code>
     */
    public com.google.type.DateOrBuilder getDateOrBuilder() {
      if (dateBuilder_ != null) {
        return dateBuilder_.getMessageOrBuilder();
      } else {
        return date_ == null ?
            com.google.type.Date.getDefaultInstance() : date_;
      }
    }
    /**
     * <pre>
     * One or more of the following must be set. All fields are optional, but
     * when set must be valid date or time values.
     * </pre>
     *
     * <code>.google.type.Date date = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder> 
        getDateFieldBuilder() {
      if (dateBuilder_ == null) {
        dateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>(
                getDate(),
                getParentForChildren(),
                isClean());
        date_ = null;
      }
      return dateBuilder_;
    }

    private int dayOfWeek_ = 0;
    /**
     * <code>.google.type.DayOfWeek day_of_week = 2;</code>
     */
    public int getDayOfWeekValue() {
      return dayOfWeek_;
    }
    /**
     * <code>.google.type.DayOfWeek day_of_week = 2;</code>
     */
    public Builder setDayOfWeekValue(int value) {
      dayOfWeek_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.google.type.DayOfWeek day_of_week = 2;</code>
     */
    public com.google.type.DayOfWeek getDayOfWeek() {
      com.google.type.DayOfWeek result = com.google.type.DayOfWeek.valueOf(dayOfWeek_);
      return result == null ? com.google.type.DayOfWeek.UNRECOGNIZED : result;
    }
    /**
     * <code>.google.type.DayOfWeek day_of_week = 2;</code>
     */
    public Builder setDayOfWeek(com.google.type.DayOfWeek value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      dayOfWeek_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.google.type.DayOfWeek day_of_week = 2;</code>
     */
    public Builder clearDayOfWeek() {
      
      dayOfWeek_ = 0;
      onChanged();
      return this;
    }

    private com.google.type.TimeOfDay time_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.TimeOfDay, com.google.type.TimeOfDay.Builder, com.google.type.TimeOfDayOrBuilder> timeBuilder_;
    /**
     * <code>.google.type.TimeOfDay time = 3;</code>
     */
    public boolean hasTime() {
      return timeBuilder_ != null || time_ != null;
    }
    /**
     * <code>.google.type.TimeOfDay time = 3;</code>
     */
    public com.google.type.TimeOfDay getTime() {
      if (timeBuilder_ == null) {
        return time_ == null ? com.google.type.TimeOfDay.getDefaultInstance() : time_;
      } else {
        return timeBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.type.TimeOfDay time = 3;</code>
     */
    public Builder setTime(com.google.type.TimeOfDay value) {
      if (timeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        time_ = value;
        onChanged();
      } else {
        timeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.type.TimeOfDay time = 3;</code>
     */
    public Builder setTime(
        com.google.type.TimeOfDay.Builder builderForValue) {
      if (timeBuilder_ == null) {
        time_ = builderForValue.build();
        onChanged();
      } else {
        timeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.type.TimeOfDay time = 3;</code>
     */
    public Builder mergeTime(com.google.type.TimeOfDay value) {
      if (timeBuilder_ == null) {
        if (time_ != null) {
          time_ =
            com.google.type.TimeOfDay.newBuilder(time_).mergeFrom(value).buildPartial();
        } else {
          time_ = value;
        }
        onChanged();
      } else {
        timeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.type.TimeOfDay time = 3;</code>
     */
    public Builder clearTime() {
      if (timeBuilder_ == null) {
        time_ = null;
        onChanged();
      } else {
        time_ = null;
        timeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.type.TimeOfDay time = 3;</code>
     */
    public com.google.type.TimeOfDay.Builder getTimeBuilder() {
      
      onChanged();
      return getTimeFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.type.TimeOfDay time = 3;</code>
     */
    public com.google.type.TimeOfDayOrBuilder getTimeOrBuilder() {
      if (timeBuilder_ != null) {
        return timeBuilder_.getMessageOrBuilder();
      } else {
        return time_ == null ?
            com.google.type.TimeOfDay.getDefaultInstance() : time_;
      }
    }
    /**
     * <code>.google.type.TimeOfDay time = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.TimeOfDay, com.google.type.TimeOfDay.Builder, com.google.type.TimeOfDayOrBuilder> 
        getTimeFieldBuilder() {
      if (timeBuilder_ == null) {
        timeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.TimeOfDay, com.google.type.TimeOfDay.Builder, com.google.type.TimeOfDayOrBuilder>(
                getTime(),
                getParentForChildren(),
                isClean());
        time_ = null;
      }
      return timeBuilder_;
    }

    private com.google.privacy.dlp.v2.DateTime.TimeZone timeZone_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.privacy.dlp.v2.DateTime.TimeZone, com.google.privacy.dlp.v2.DateTime.TimeZone.Builder, com.google.privacy.dlp.v2.DateTime.TimeZoneOrBuilder> timeZoneBuilder_;
    /**
     * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
     */
    public boolean hasTimeZone() {
      return timeZoneBuilder_ != null || timeZone_ != null;
    }
    /**
     * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
     */
    public com.google.privacy.dlp.v2.DateTime.TimeZone getTimeZone() {
      if (timeZoneBuilder_ == null) {
        return timeZone_ == null ? com.google.privacy.dlp.v2.DateTime.TimeZone.getDefaultInstance() : timeZone_;
      } else {
        return timeZoneBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
     */
    public Builder setTimeZone(com.google.privacy.dlp.v2.DateTime.TimeZone value) {
      if (timeZoneBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timeZone_ = value;
        onChanged();
      } else {
        timeZoneBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
     */
    public Builder setTimeZone(
        com.google.privacy.dlp.v2.DateTime.TimeZone.Builder builderForValue) {
      if (timeZoneBuilder_ == null) {
        timeZone_ = builderForValue.build();
        onChanged();
      } else {
        timeZoneBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
     */
    public Builder mergeTimeZone(com.google.privacy.dlp.v2.DateTime.TimeZone value) {
      if (timeZoneBuilder_ == null) {
        if (timeZone_ != null) {
          timeZone_ =
            com.google.privacy.dlp.v2.DateTime.TimeZone.newBuilder(timeZone_).mergeFrom(value).buildPartial();
        } else {
          timeZone_ = value;
        }
        onChanged();
      } else {
        timeZoneBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
     */
    public Builder clearTimeZone() {
      if (timeZoneBuilder_ == null) {
        timeZone_ = null;
        onChanged();
      } else {
        timeZone_ = null;
        timeZoneBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
     */
    public com.google.privacy.dlp.v2.DateTime.TimeZone.Builder getTimeZoneBuilder() {
      
      onChanged();
      return getTimeZoneFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
     */
    public com.google.privacy.dlp.v2.DateTime.TimeZoneOrBuilder getTimeZoneOrBuilder() {
      if (timeZoneBuilder_ != null) {
        return timeZoneBuilder_.getMessageOrBuilder();
      } else {
        return timeZone_ == null ?
            com.google.privacy.dlp.v2.DateTime.TimeZone.getDefaultInstance() : timeZone_;
      }
    }
    /**
     * <code>.google.privacy.dlp.v2.DateTime.TimeZone time_zone = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.privacy.dlp.v2.DateTime.TimeZone, com.google.privacy.dlp.v2.DateTime.TimeZone.Builder, com.google.privacy.dlp.v2.DateTime.TimeZoneOrBuilder> 
        getTimeZoneFieldBuilder() {
      if (timeZoneBuilder_ == null) {
        timeZoneBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.privacy.dlp.v2.DateTime.TimeZone, com.google.privacy.dlp.v2.DateTime.TimeZone.Builder, com.google.privacy.dlp.v2.DateTime.TimeZoneOrBuilder>(
                getTimeZone(),
                getParentForChildren(),
                isClean());
        timeZone_ = null;
      }
      return timeZoneBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2.DateTime)
  }

  // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2.DateTime)
  private static final com.google.privacy.dlp.v2.DateTime DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.privacy.dlp.v2.DateTime();
  }

  public static com.google.privacy.dlp.v2.DateTime getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DateTime>
      PARSER = new com.google.protobuf.AbstractParser<DateTime>() {
    public DateTime parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new DateTime(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DateTime> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DateTime> getParserForType() {
    return PARSER;
  }

  public com.google.privacy.dlp.v2.DateTime getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

