# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/iam/admin/v1/iam.proto for package 'google.iam.admin.v1'
# Original file comments:
# Copyright 2016 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/iam/admin/v1/iam_pb'

module Google
  module Iam
    module Admin
      module V1
        module IAM
          # Creates and manages service account objects.
          #
          # Service account is an account that belongs to your project instead
          # of to an individual end user. It is used to authenticate calls
          # to a Google API.
          #
          # To create a service account, specify the `project_id` and `account_id`
          # for the account.  The `account_id` is unique within the project, and used
          # to generate the service account email address and a stable
          # `unique_id`.
          #
          # All other methods can identify accounts using the format
          # `projects/{project}/serviceAccounts/{account}`.
          # Using `-` as a wildcard for the project will infer the project from
          # the account. The `account` value can be the `email` address or the
          # `unique_id` of the service account.
          class Service

            include GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'google.iam.admin.v1.IAM'

            # Lists [ServiceAccounts][google.iam.admin.v1.ServiceAccount] for a project.
            rpc :ListServiceAccounts, ListServiceAccountsRequest, ListServiceAccountsResponse
            # Gets a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            rpc :GetServiceAccount, GetServiceAccountRequest, ServiceAccount
            # Creates a [ServiceAccount][google.iam.admin.v1.ServiceAccount]
            # and returns it.
            rpc :CreateServiceAccount, CreateServiceAccountRequest, ServiceAccount
            # Updates a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            #
            # Currently, only the following fields are updatable:
            # `display_name` .
            # The `etag` is mandatory.
            rpc :UpdateServiceAccount, ServiceAccount, ServiceAccount
            # Deletes a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            rpc :DeleteServiceAccount, DeleteServiceAccountRequest, Google::Protobuf::Empty
            # Lists [ServiceAccountKeys][google.iam.admin.v1.ServiceAccountKey].
            rpc :ListServiceAccountKeys, ListServiceAccountKeysRequest, ListServiceAccountKeysResponse
            # Gets the [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
            # by key id.
            rpc :GetServiceAccountKey, GetServiceAccountKeyRequest, ServiceAccountKey
            # Creates a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
            # and returns it.
            rpc :CreateServiceAccountKey, CreateServiceAccountKeyRequest, ServiceAccountKey
            # Deletes a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].
            rpc :DeleteServiceAccountKey, DeleteServiceAccountKeyRequest, Google::Protobuf::Empty
            # Signs a blob using a service account's system-managed private key.
            rpc :SignBlob, SignBlobRequest, SignBlobResponse
            # Returns the IAM access control policy for a
            # [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            rpc :GetIamPolicy, Google::Iam::V1::GetIamPolicyRequest, Google::Iam::V1::Policy
            # Sets the IAM access control policy for a
            # [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            rpc :SetIamPolicy, Google::Iam::V1::SetIamPolicyRequest, Google::Iam::V1::Policy
            # Tests the specified permissions against the IAM access control policy
            # for a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            rpc :TestIamPermissions, Google::Iam::V1::TestIamPermissionsRequest, Google::Iam::V1::TestIamPermissionsResponse
            # Queries roles that can be granted on a particular resource.
            # A role is grantable if it can be used as the role in a binding for a policy
            # for that resource.
            rpc :QueryGrantableRoles, QueryGrantableRolesRequest, QueryGrantableRolesResponse
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
