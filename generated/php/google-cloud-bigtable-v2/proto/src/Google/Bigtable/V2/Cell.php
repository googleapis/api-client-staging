<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/bigtable/v2/data.proto

namespace Google\Bigtable\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Specifies (some of) the contents of a single row/column/timestamp of a table.
 * </pre>
 *
 * Protobuf type <code>google.bigtable.v2.Cell</code>
 */
class Cell extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The cell's stored timestamp, which also uniquely identifies it within
     * its column.
     * Values are always expressed in microseconds, but individual tables may set
     * a coarser granularity to further restrict the allowed values. For
     * example, a table which specifies millisecond granularity will only allow
     * values of `timestamp_micros` which are multiples of 1000.
     * </pre>
     *
     * <code>int64 timestamp_micros = 1;</code>
     */
    private $timestamp_micros = 0;
    /**
     * <pre>
     * The value stored in the cell.
     * May contain any byte string, including the empty string, up to 100MiB in
     * length.
     * </pre>
     *
     * <code>bytes value = 2;</code>
     */
    private $value = '';
    /**
     * <pre>
     * Labels applied to the cell by a [RowFilter][google.bigtable.v2.RowFilter].
     * </pre>
     *
     * <code>repeated string labels = 3;</code>
     */
    private $labels;

    public function __construct() {
        \GPBMetadata\Google\Bigtable\V2\Data::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The cell's stored timestamp, which also uniquely identifies it within
     * its column.
     * Values are always expressed in microseconds, but individual tables may set
     * a coarser granularity to further restrict the allowed values. For
     * example, a table which specifies millisecond granularity will only allow
     * values of `timestamp_micros` which are multiples of 1000.
     * </pre>
     *
     * <code>int64 timestamp_micros = 1;</code>
     */
    public function getTimestampMicros()
    {
        return $this->timestamp_micros;
    }

    /**
     * <pre>
     * The cell's stored timestamp, which also uniquely identifies it within
     * its column.
     * Values are always expressed in microseconds, but individual tables may set
     * a coarser granularity to further restrict the allowed values. For
     * example, a table which specifies millisecond granularity will only allow
     * values of `timestamp_micros` which are multiples of 1000.
     * </pre>
     *
     * <code>int64 timestamp_micros = 1;</code>
     */
    public function setTimestampMicros($var)
    {
        GPBUtil::checkInt64($var);
        $this->timestamp_micros = $var;
    }

    /**
     * <pre>
     * The value stored in the cell.
     * May contain any byte string, including the empty string, up to 100MiB in
     * length.
     * </pre>
     *
     * <code>bytes value = 2;</code>
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * <pre>
     * The value stored in the cell.
     * May contain any byte string, including the empty string, up to 100MiB in
     * length.
     * </pre>
     *
     * <code>bytes value = 2;</code>
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, False);
        $this->value = $var;
    }

    /**
     * <pre>
     * Labels applied to the cell by a [RowFilter][google.bigtable.v2.RowFilter].
     * </pre>
     *
     * <code>repeated string labels = 3;</code>
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * <pre>
     * Labels applied to the cell by a [RowFilter][google.bigtable.v2.RowFilter].
     * </pre>
     *
     * <code>repeated string labels = 3;</code>
     */
    public function setLabels(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;
    }

}

