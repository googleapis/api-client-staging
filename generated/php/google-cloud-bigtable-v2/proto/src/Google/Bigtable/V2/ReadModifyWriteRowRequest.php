<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/bigtable/v2/bigtable.proto

namespace Google\Bigtable\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Request message for Bigtable.ReadModifyWriteRow.
 * </pre>
 *
 * Protobuf type <code>google.bigtable.v2.ReadModifyWriteRowRequest</code>
 */
class ReadModifyWriteRowRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The unique name of the table to which the read/modify/write rules should be
     * applied.
     * Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/tables/&lt;table&gt;`.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     */
    private $table_name = '';
    /**
     * <pre>
     * The key of the row to which the read/modify/write rules should be applied.
     * </pre>
     *
     * <code>bytes row_key = 2;</code>
     */
    private $row_key = '';
    /**
     * <pre>
     * Rules specifying how the specified row's contents are to be transformed
     * into writes. Entries are applied in order, meaning that earlier rules will
     * affect the results of later ones.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3;</code>
     */
    private $rules;

    public function __construct() {
        \GPBMetadata\Google\Bigtable\V2\Bigtable::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The unique name of the table to which the read/modify/write rules should be
     * applied.
     * Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/tables/&lt;table&gt;`.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     */
    public function getTableName()
    {
        return $this->table_name;
    }

    /**
     * <pre>
     * The unique name of the table to which the read/modify/write rules should be
     * applied.
     * Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/tables/&lt;table&gt;`.
     * </pre>
     *
     * <code>string table_name = 1;</code>
     */
    public function setTableName($var)
    {
        GPBUtil::checkString($var, True);
        $this->table_name = $var;
    }

    /**
     * <pre>
     * The key of the row to which the read/modify/write rules should be applied.
     * </pre>
     *
     * <code>bytes row_key = 2;</code>
     */
    public function getRowKey()
    {
        return $this->row_key;
    }

    /**
     * <pre>
     * The key of the row to which the read/modify/write rules should be applied.
     * </pre>
     *
     * <code>bytes row_key = 2;</code>
     */
    public function setRowKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->row_key = $var;
    }

    /**
     * <pre>
     * Rules specifying how the specified row's contents are to be transformed
     * into writes. Entries are applied in order, meaning that earlier rules will
     * affect the results of later ones.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3;</code>
     */
    public function getRules()
    {
        return $this->rules;
    }

    /**
     * <pre>
     * Rules specifying how the specified row's contents are to be transformed
     * into writes. Entries are applied in order, meaning that earlier rules will
     * affect the results of later ones.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ReadModifyWriteRule rules = 3;</code>
     */
    public function setRules(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Bigtable\V2\ReadModifyWriteRule::class);
        $this->rules = $arr;
    }

}

