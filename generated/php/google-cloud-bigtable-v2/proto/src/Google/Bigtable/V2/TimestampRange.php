<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/bigtable/v2/data.proto

namespace Google\Bigtable\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Specified a contiguous range of microsecond timestamps.
 * </pre>
 *
 * Protobuf type <code>google.bigtable.v2.TimestampRange</code>
 */
class TimestampRange extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Inclusive lower bound. If left empty, interpreted as 0.
     * </pre>
     *
     * <code>int64 start_timestamp_micros = 1;</code>
     */
    private $start_timestamp_micros = 0;
    /**
     * <pre>
     * Exclusive upper bound. If left empty, interpreted as infinity.
     * </pre>
     *
     * <code>int64 end_timestamp_micros = 2;</code>
     */
    private $end_timestamp_micros = 0;

    public function __construct() {
        \GPBMetadata\Google\Bigtable\V2\Data::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Inclusive lower bound. If left empty, interpreted as 0.
     * </pre>
     *
     * <code>int64 start_timestamp_micros = 1;</code>
     */
    public function getStartTimestampMicros()
    {
        return $this->start_timestamp_micros;
    }

    /**
     * <pre>
     * Inclusive lower bound. If left empty, interpreted as 0.
     * </pre>
     *
     * <code>int64 start_timestamp_micros = 1;</code>
     */
    public function setStartTimestampMicros($var)
    {
        GPBUtil::checkInt64($var);
        $this->start_timestamp_micros = $var;
    }

    /**
     * <pre>
     * Exclusive upper bound. If left empty, interpreted as infinity.
     * </pre>
     *
     * <code>int64 end_timestamp_micros = 2;</code>
     */
    public function getEndTimestampMicros()
    {
        return $this->end_timestamp_micros;
    }

    /**
     * <pre>
     * Exclusive upper bound. If left empty, interpreted as infinity.
     * </pre>
     *
     * <code>int64 end_timestamp_micros = 2;</code>
     */
    public function setEndTimestampMicros($var)
    {
        GPBUtil::checkInt64($var);
        $this->end_timestamp_micros = $var;
    }

}

