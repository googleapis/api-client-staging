# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/pubsub/v1/pubsub.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='google/pubsub/v1/pubsub.proto',
  package='google.pubsub.v1',
  syntax='proto3',
  serialized_pb=_b('\n\x1dgoogle/pubsub/v1/pubsub.proto\x12\x10google.pubsub.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x15\n\x05Topic\x12\x0c\n\x04name\x18\x01 \x01(\t\"\xdb\x01\n\rPubsubMessage\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x43\n\nattributes\x18\x02 \x03(\x0b\x32/.google.pubsub.v1.PubsubMessage.AttributesEntry\x12\x12\n\nmessage_id\x18\x03 \x01(\t\x12\x30\n\x0cpublish_time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x1a\x31\n\x0f\x41ttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\" \n\x0fGetTopicRequest\x12\r\n\x05topic\x18\x01 \x01(\t\"R\n\x0ePublishRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x31\n\x08messages\x18\x02 \x03(\x0b\x32\x1f.google.pubsub.v1.PubsubMessage\"&\n\x0fPublishResponse\x12\x13\n\x0bmessage_ids\x18\x01 \x03(\t\"K\n\x11ListTopicsRequest\x12\x0f\n\x07project\x18\x01 \x01(\t\x12\x11\n\tpage_size\x18\x02 \x01(\x05\x12\x12\n\npage_token\x18\x03 \x01(\t\"V\n\x12ListTopicsResponse\x12\'\n\x06topics\x18\x01 \x03(\x0b\x32\x17.google.pubsub.v1.Topic\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"U\n\x1dListTopicSubscriptionsRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tpage_size\x18\x02 \x01(\x05\x12\x12\n\npage_token\x18\x03 \x01(\t\"P\n\x1eListTopicSubscriptionsResponse\x12\x15\n\rsubscriptions\x18\x01 \x03(\t\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"#\n\x12\x44\x65leteTopicRequest\x12\r\n\x05topic\x18\x01 \x01(\t\"|\n\x0cSubscription\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\x31\n\x0bpush_config\x18\x04 \x01(\x0b\x32\x1c.google.pubsub.v1.PushConfig\x12\x1c\n\x14\x61\x63k_deadline_seconds\x18\x05 \x01(\x05\"\x98\x01\n\nPushConfig\x12\x15\n\rpush_endpoint\x18\x01 \x01(\t\x12@\n\nattributes\x18\x02 \x03(\x0b\x32,.google.pubsub.v1.PushConfig.AttributesEntry\x1a\x31\n\x0f\x41ttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"S\n\x0fReceivedMessage\x12\x0e\n\x06\x61\x63k_id\x18\x01 \x01(\t\x12\x30\n\x07message\x18\x02 \x01(\x0b\x32\x1f.google.pubsub.v1.PubsubMessage\".\n\x16GetSubscriptionRequest\x12\x14\n\x0csubscription\x18\x01 \x01(\t\"R\n\x18ListSubscriptionsRequest\x12\x0f\n\x07project\x18\x01 \x01(\t\x12\x11\n\tpage_size\x18\x02 \x01(\x05\x12\x12\n\npage_token\x18\x03 \x01(\t\"k\n\x19ListSubscriptionsResponse\x12\x35\n\rsubscriptions\x18\x01 \x03(\x0b\x32\x1e.google.pubsub.v1.Subscription\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"1\n\x19\x44\x65leteSubscriptionRequest\x12\x14\n\x0csubscription\x18\x01 \x01(\t\"b\n\x17ModifyPushConfigRequest\x12\x14\n\x0csubscription\x18\x01 \x01(\t\x12\x31\n\x0bpush_config\x18\x02 \x01(\x0b\x32\x1c.google.pubsub.v1.PushConfig\"U\n\x0bPullRequest\x12\x14\n\x0csubscription\x18\x01 \x01(\t\x12\x1a\n\x12return_immediately\x18\x02 \x01(\x08\x12\x14\n\x0cmax_messages\x18\x03 \x01(\x05\"L\n\x0cPullResponse\x12<\n\x11received_messages\x18\x01 \x03(\x0b\x32!.google.pubsub.v1.ReceivedMessage\"_\n\x18ModifyAckDeadlineRequest\x12\x14\n\x0csubscription\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x63k_ids\x18\x04 \x03(\t\x12\x1c\n\x14\x61\x63k_deadline_seconds\x18\x03 \x01(\x05\";\n\x12\x41\x63knowledgeRequest\x12\x14\n\x0csubscription\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x63k_ids\x18\x02 \x03(\t2\xc0\t\n\nSubscriber\x12\x86\x01\n\x12\x43reateSubscription\x12\x1e.google.pubsub.v1.Subscription\x1a\x1e.google.pubsub.v1.Subscription\"0\x82\xd3\xe4\x93\x02*\x1a%/v1/{name=projects/*/subscriptions/*}:\x01*\x12\x92\x01\n\x0fGetSubscription\x12(.google.pubsub.v1.GetSubscriptionRequest\x1a\x1e.google.pubsub.v1.Subscription\"5\x82\xd3\xe4\x93\x02/\x12-/v1/{subscription=projects/*/subscriptions/*}\x12\x9c\x01\n\x11ListSubscriptions\x12*.google.pubsub.v1.ListSubscriptionsRequest\x1a+.google.pubsub.v1.ListSubscriptionsResponse\".\x82\xd3\xe4\x93\x02(\x12&/v1/{project=projects/*}/subscriptions\x12\x90\x01\n\x12\x44\x65leteSubscription\x12+.google.pubsub.v1.DeleteSubscriptionRequest\x1a\x16.google.protobuf.Empty\"5\x82\xd3\xe4\x93\x02/*-/v1/{subscription=projects/*/subscriptions/*}\x12\xa3\x01\n\x11ModifyAckDeadline\x12*.google.pubsub.v1.ModifyAckDeadlineRequest\x1a\x16.google.protobuf.Empty\"J\x82\xd3\xe4\x93\x02\x44\"?/v1/{subscription=projects/*/subscriptions/*}:modifyAckDeadline:\x01*\x12\x91\x01\n\x0b\x41\x63knowledge\x12$.google.pubsub.v1.AcknowledgeRequest\x1a\x16.google.protobuf.Empty\"D\x82\xd3\xe4\x93\x02>\"9/v1/{subscription=projects/*/subscriptions/*}:acknowledge:\x01*\x12\x84\x01\n\x04Pull\x12\x1d.google.pubsub.v1.PullRequest\x1a\x1e.google.pubsub.v1.PullResponse\"=\x82\xd3\xe4\x93\x02\x37\"2/v1/{subscription=projects/*/subscriptions/*}:pull:\x01*\x12\xa0\x01\n\x10ModifyPushConfig\x12).google.pubsub.v1.ModifyPushConfigRequest\x1a\x16.google.protobuf.Empty\"I\x82\xd3\xe4\x93\x02\x43\">/v1/{subscription=projects/*/subscriptions/*}:modifyPushConfig:\x01*2\x9b\x06\n\tPublisher\x12j\n\x0b\x43reateTopic\x12\x17.google.pubsub.v1.Topic\x1a\x17.google.pubsub.v1.Topic\")\x82\xd3\xe4\x93\x02#\x1a\x1e/v1/{name=projects/*/topics/*}:\x01*\x12\x82\x01\n\x07Publish\x12 .google.pubsub.v1.PublishRequest\x1a!.google.pubsub.v1.PublishResponse\"2\x82\xd3\xe4\x93\x02,\"\'/v1/{topic=projects/*/topics/*}:publish:\x01*\x12o\n\x08GetTopic\x12!.google.pubsub.v1.GetTopicRequest\x1a\x17.google.pubsub.v1.Topic\"\'\x82\xd3\xe4\x93\x02!\x12\x1f/v1/{topic=projects/*/topics/*}\x12\x80\x01\n\nListTopics\x12#.google.pubsub.v1.ListTopicsRequest\x1a$.google.pubsub.v1.ListTopicsResponse\"\'\x82\xd3\xe4\x93\x02!\x12\x1f/v1/{project=projects/*}/topics\x12\xb2\x01\n\x16ListTopicSubscriptions\x12/.google.pubsub.v1.ListTopicSubscriptionsRequest\x1a\x30.google.pubsub.v1.ListTopicSubscriptionsResponse\"5\x82\xd3\xe4\x93\x02/\x12-/v1/{topic=projects/*/topics/*}/subscriptions\x12t\n\x0b\x44\x65leteTopic\x12$.google.pubsub.v1.DeleteTopicRequest\x1a\x16.google.protobuf.Empty\"\'\x82\xd3\xe4\x93\x02!*\x1f/v1/{topic=projects/*/topics/*}B(\n\x14\x63om.google.pubsub.v1B\x0bPubsubProtoP\x01\xf8\x01\x01\x62\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_TOPIC = _descriptor.Descriptor(
  name='Topic',
  full_name='google.pubsub.v1.Topic',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.pubsub.v1.Topic.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=143,
  serialized_end=164,
)


_PUBSUBMESSAGE_ATTRIBUTESENTRY = _descriptor.Descriptor(
  name='AttributesEntry',
  full_name='google.pubsub.v1.PubsubMessage.AttributesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='google.pubsub.v1.PubsubMessage.AttributesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='google.pubsub.v1.PubsubMessage.AttributesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=337,
  serialized_end=386,
)

_PUBSUBMESSAGE = _descriptor.Descriptor(
  name='PubsubMessage',
  full_name='google.pubsub.v1.PubsubMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='google.pubsub.v1.PubsubMessage.data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attributes', full_name='google.pubsub.v1.PubsubMessage.attributes', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message_id', full_name='google.pubsub.v1.PubsubMessage.message_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='publish_time', full_name='google.pubsub.v1.PubsubMessage.publish_time', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_PUBSUBMESSAGE_ATTRIBUTESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=167,
  serialized_end=386,
)


_GETTOPICREQUEST = _descriptor.Descriptor(
  name='GetTopicRequest',
  full_name='google.pubsub.v1.GetTopicRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='google.pubsub.v1.GetTopicRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=388,
  serialized_end=420,
)


_PUBLISHREQUEST = _descriptor.Descriptor(
  name='PublishRequest',
  full_name='google.pubsub.v1.PublishRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='google.pubsub.v1.PublishRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='messages', full_name='google.pubsub.v1.PublishRequest.messages', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=422,
  serialized_end=504,
)


_PUBLISHRESPONSE = _descriptor.Descriptor(
  name='PublishResponse',
  full_name='google.pubsub.v1.PublishResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message_ids', full_name='google.pubsub.v1.PublishResponse.message_ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=506,
  serialized_end=544,
)


_LISTTOPICSREQUEST = _descriptor.Descriptor(
  name='ListTopicsRequest',
  full_name='google.pubsub.v1.ListTopicsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='google.pubsub.v1.ListTopicsRequest.project', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_size', full_name='google.pubsub.v1.ListTopicsRequest.page_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='google.pubsub.v1.ListTopicsRequest.page_token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=546,
  serialized_end=621,
)


_LISTTOPICSRESPONSE = _descriptor.Descriptor(
  name='ListTopicsResponse',
  full_name='google.pubsub.v1.ListTopicsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topics', full_name='google.pubsub.v1.ListTopicsResponse.topics', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='google.pubsub.v1.ListTopicsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=623,
  serialized_end=709,
)


_LISTTOPICSUBSCRIPTIONSREQUEST = _descriptor.Descriptor(
  name='ListTopicSubscriptionsRequest',
  full_name='google.pubsub.v1.ListTopicSubscriptionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='google.pubsub.v1.ListTopicSubscriptionsRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_size', full_name='google.pubsub.v1.ListTopicSubscriptionsRequest.page_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='google.pubsub.v1.ListTopicSubscriptionsRequest.page_token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=711,
  serialized_end=796,
)


_LISTTOPICSUBSCRIPTIONSRESPONSE = _descriptor.Descriptor(
  name='ListTopicSubscriptionsResponse',
  full_name='google.pubsub.v1.ListTopicSubscriptionsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subscriptions', full_name='google.pubsub.v1.ListTopicSubscriptionsResponse.subscriptions', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='google.pubsub.v1.ListTopicSubscriptionsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=798,
  serialized_end=878,
)


_DELETETOPICREQUEST = _descriptor.Descriptor(
  name='DeleteTopicRequest',
  full_name='google.pubsub.v1.DeleteTopicRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='google.pubsub.v1.DeleteTopicRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=880,
  serialized_end=915,
)


_SUBSCRIPTION = _descriptor.Descriptor(
  name='Subscription',
  full_name='google.pubsub.v1.Subscription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.pubsub.v1.Subscription.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='topic', full_name='google.pubsub.v1.Subscription.topic', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='push_config', full_name='google.pubsub.v1.Subscription.push_config', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ack_deadline_seconds', full_name='google.pubsub.v1.Subscription.ack_deadline_seconds', index=3,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=917,
  serialized_end=1041,
)


_PUSHCONFIG_ATTRIBUTESENTRY = _descriptor.Descriptor(
  name='AttributesEntry',
  full_name='google.pubsub.v1.PushConfig.AttributesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='google.pubsub.v1.PushConfig.AttributesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='google.pubsub.v1.PushConfig.AttributesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=337,
  serialized_end=386,
)

_PUSHCONFIG = _descriptor.Descriptor(
  name='PushConfig',
  full_name='google.pubsub.v1.PushConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='push_endpoint', full_name='google.pubsub.v1.PushConfig.push_endpoint', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attributes', full_name='google.pubsub.v1.PushConfig.attributes', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_PUSHCONFIG_ATTRIBUTESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1044,
  serialized_end=1196,
)


_RECEIVEDMESSAGE = _descriptor.Descriptor(
  name='ReceivedMessage',
  full_name='google.pubsub.v1.ReceivedMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ack_id', full_name='google.pubsub.v1.ReceivedMessage.ack_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='google.pubsub.v1.ReceivedMessage.message', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1198,
  serialized_end=1281,
)


_GETSUBSCRIPTIONREQUEST = _descriptor.Descriptor(
  name='GetSubscriptionRequest',
  full_name='google.pubsub.v1.GetSubscriptionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subscription', full_name='google.pubsub.v1.GetSubscriptionRequest.subscription', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1283,
  serialized_end=1329,
)


_LISTSUBSCRIPTIONSREQUEST = _descriptor.Descriptor(
  name='ListSubscriptionsRequest',
  full_name='google.pubsub.v1.ListSubscriptionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='google.pubsub.v1.ListSubscriptionsRequest.project', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_size', full_name='google.pubsub.v1.ListSubscriptionsRequest.page_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='google.pubsub.v1.ListSubscriptionsRequest.page_token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1331,
  serialized_end=1413,
)


_LISTSUBSCRIPTIONSRESPONSE = _descriptor.Descriptor(
  name='ListSubscriptionsResponse',
  full_name='google.pubsub.v1.ListSubscriptionsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subscriptions', full_name='google.pubsub.v1.ListSubscriptionsResponse.subscriptions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='google.pubsub.v1.ListSubscriptionsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1415,
  serialized_end=1522,
)


_DELETESUBSCRIPTIONREQUEST = _descriptor.Descriptor(
  name='DeleteSubscriptionRequest',
  full_name='google.pubsub.v1.DeleteSubscriptionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subscription', full_name='google.pubsub.v1.DeleteSubscriptionRequest.subscription', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1524,
  serialized_end=1573,
)


_MODIFYPUSHCONFIGREQUEST = _descriptor.Descriptor(
  name='ModifyPushConfigRequest',
  full_name='google.pubsub.v1.ModifyPushConfigRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subscription', full_name='google.pubsub.v1.ModifyPushConfigRequest.subscription', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='push_config', full_name='google.pubsub.v1.ModifyPushConfigRequest.push_config', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1575,
  serialized_end=1673,
)


_PULLREQUEST = _descriptor.Descriptor(
  name='PullRequest',
  full_name='google.pubsub.v1.PullRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subscription', full_name='google.pubsub.v1.PullRequest.subscription', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='return_immediately', full_name='google.pubsub.v1.PullRequest.return_immediately', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_messages', full_name='google.pubsub.v1.PullRequest.max_messages', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1675,
  serialized_end=1760,
)


_PULLRESPONSE = _descriptor.Descriptor(
  name='PullResponse',
  full_name='google.pubsub.v1.PullResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='received_messages', full_name='google.pubsub.v1.PullResponse.received_messages', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1762,
  serialized_end=1838,
)


_MODIFYACKDEADLINEREQUEST = _descriptor.Descriptor(
  name='ModifyAckDeadlineRequest',
  full_name='google.pubsub.v1.ModifyAckDeadlineRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subscription', full_name='google.pubsub.v1.ModifyAckDeadlineRequest.subscription', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ack_ids', full_name='google.pubsub.v1.ModifyAckDeadlineRequest.ack_ids', index=1,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ack_deadline_seconds', full_name='google.pubsub.v1.ModifyAckDeadlineRequest.ack_deadline_seconds', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1840,
  serialized_end=1935,
)


_ACKNOWLEDGEREQUEST = _descriptor.Descriptor(
  name='AcknowledgeRequest',
  full_name='google.pubsub.v1.AcknowledgeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subscription', full_name='google.pubsub.v1.AcknowledgeRequest.subscription', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ack_ids', full_name='google.pubsub.v1.AcknowledgeRequest.ack_ids', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1937,
  serialized_end=1996,
)

_PUBSUBMESSAGE_ATTRIBUTESENTRY.containing_type = _PUBSUBMESSAGE
_PUBSUBMESSAGE.fields_by_name['attributes'].message_type = _PUBSUBMESSAGE_ATTRIBUTESENTRY
_PUBSUBMESSAGE.fields_by_name['publish_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_PUBLISHREQUEST.fields_by_name['messages'].message_type = _PUBSUBMESSAGE
_LISTTOPICSRESPONSE.fields_by_name['topics'].message_type = _TOPIC
_SUBSCRIPTION.fields_by_name['push_config'].message_type = _PUSHCONFIG
_PUSHCONFIG_ATTRIBUTESENTRY.containing_type = _PUSHCONFIG
_PUSHCONFIG.fields_by_name['attributes'].message_type = _PUSHCONFIG_ATTRIBUTESENTRY
_RECEIVEDMESSAGE.fields_by_name['message'].message_type = _PUBSUBMESSAGE
_LISTSUBSCRIPTIONSRESPONSE.fields_by_name['subscriptions'].message_type = _SUBSCRIPTION
_MODIFYPUSHCONFIGREQUEST.fields_by_name['push_config'].message_type = _PUSHCONFIG
_PULLRESPONSE.fields_by_name['received_messages'].message_type = _RECEIVEDMESSAGE
DESCRIPTOR.message_types_by_name['Topic'] = _TOPIC
DESCRIPTOR.message_types_by_name['PubsubMessage'] = _PUBSUBMESSAGE
DESCRIPTOR.message_types_by_name['GetTopicRequest'] = _GETTOPICREQUEST
DESCRIPTOR.message_types_by_name['PublishRequest'] = _PUBLISHREQUEST
DESCRIPTOR.message_types_by_name['PublishResponse'] = _PUBLISHRESPONSE
DESCRIPTOR.message_types_by_name['ListTopicsRequest'] = _LISTTOPICSREQUEST
DESCRIPTOR.message_types_by_name['ListTopicsResponse'] = _LISTTOPICSRESPONSE
DESCRIPTOR.message_types_by_name['ListTopicSubscriptionsRequest'] = _LISTTOPICSUBSCRIPTIONSREQUEST
DESCRIPTOR.message_types_by_name['ListTopicSubscriptionsResponse'] = _LISTTOPICSUBSCRIPTIONSRESPONSE
DESCRIPTOR.message_types_by_name['DeleteTopicRequest'] = _DELETETOPICREQUEST
DESCRIPTOR.message_types_by_name['Subscription'] = _SUBSCRIPTION
DESCRIPTOR.message_types_by_name['PushConfig'] = _PUSHCONFIG
DESCRIPTOR.message_types_by_name['ReceivedMessage'] = _RECEIVEDMESSAGE
DESCRIPTOR.message_types_by_name['GetSubscriptionRequest'] = _GETSUBSCRIPTIONREQUEST
DESCRIPTOR.message_types_by_name['ListSubscriptionsRequest'] = _LISTSUBSCRIPTIONSREQUEST
DESCRIPTOR.message_types_by_name['ListSubscriptionsResponse'] = _LISTSUBSCRIPTIONSRESPONSE
DESCRIPTOR.message_types_by_name['DeleteSubscriptionRequest'] = _DELETESUBSCRIPTIONREQUEST
DESCRIPTOR.message_types_by_name['ModifyPushConfigRequest'] = _MODIFYPUSHCONFIGREQUEST
DESCRIPTOR.message_types_by_name['PullRequest'] = _PULLREQUEST
DESCRIPTOR.message_types_by_name['PullResponse'] = _PULLRESPONSE
DESCRIPTOR.message_types_by_name['ModifyAckDeadlineRequest'] = _MODIFYACKDEADLINEREQUEST
DESCRIPTOR.message_types_by_name['AcknowledgeRequest'] = _ACKNOWLEDGEREQUEST

Topic = _reflection.GeneratedProtocolMessageType('Topic', (_message.Message,), dict(
  DESCRIPTOR = _TOPIC,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.Topic)
  ))
_sym_db.RegisterMessage(Topic)

PubsubMessage = _reflection.GeneratedProtocolMessageType('PubsubMessage', (_message.Message,), dict(

  AttributesEntry = _reflection.GeneratedProtocolMessageType('AttributesEntry', (_message.Message,), dict(
    DESCRIPTOR = _PUBSUBMESSAGE_ATTRIBUTESENTRY,
    __module__ = 'google.pubsub.v1.pubsub_pb2'
    # @@protoc_insertion_point(class_scope:google.pubsub.v1.PubsubMessage.AttributesEntry)
    ))
  ,
  DESCRIPTOR = _PUBSUBMESSAGE,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.PubsubMessage)
  ))
_sym_db.RegisterMessage(PubsubMessage)
_sym_db.RegisterMessage(PubsubMessage.AttributesEntry)

GetTopicRequest = _reflection.GeneratedProtocolMessageType('GetTopicRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETTOPICREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.GetTopicRequest)
  ))
_sym_db.RegisterMessage(GetTopicRequest)

PublishRequest = _reflection.GeneratedProtocolMessageType('PublishRequest', (_message.Message,), dict(
  DESCRIPTOR = _PUBLISHREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.PublishRequest)
  ))
_sym_db.RegisterMessage(PublishRequest)

PublishResponse = _reflection.GeneratedProtocolMessageType('PublishResponse', (_message.Message,), dict(
  DESCRIPTOR = _PUBLISHRESPONSE,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.PublishResponse)
  ))
_sym_db.RegisterMessage(PublishResponse)

ListTopicsRequest = _reflection.GeneratedProtocolMessageType('ListTopicsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTTOPICSREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.ListTopicsRequest)
  ))
_sym_db.RegisterMessage(ListTopicsRequest)

ListTopicsResponse = _reflection.GeneratedProtocolMessageType('ListTopicsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTTOPICSRESPONSE,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.ListTopicsResponse)
  ))
_sym_db.RegisterMessage(ListTopicsResponse)

ListTopicSubscriptionsRequest = _reflection.GeneratedProtocolMessageType('ListTopicSubscriptionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTTOPICSUBSCRIPTIONSREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.ListTopicSubscriptionsRequest)
  ))
_sym_db.RegisterMessage(ListTopicSubscriptionsRequest)

ListTopicSubscriptionsResponse = _reflection.GeneratedProtocolMessageType('ListTopicSubscriptionsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTTOPICSUBSCRIPTIONSRESPONSE,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.ListTopicSubscriptionsResponse)
  ))
_sym_db.RegisterMessage(ListTopicSubscriptionsResponse)

DeleteTopicRequest = _reflection.GeneratedProtocolMessageType('DeleteTopicRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETETOPICREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.DeleteTopicRequest)
  ))
_sym_db.RegisterMessage(DeleteTopicRequest)

Subscription = _reflection.GeneratedProtocolMessageType('Subscription', (_message.Message,), dict(
  DESCRIPTOR = _SUBSCRIPTION,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.Subscription)
  ))
_sym_db.RegisterMessage(Subscription)

PushConfig = _reflection.GeneratedProtocolMessageType('PushConfig', (_message.Message,), dict(

  AttributesEntry = _reflection.GeneratedProtocolMessageType('AttributesEntry', (_message.Message,), dict(
    DESCRIPTOR = _PUSHCONFIG_ATTRIBUTESENTRY,
    __module__ = 'google.pubsub.v1.pubsub_pb2'
    # @@protoc_insertion_point(class_scope:google.pubsub.v1.PushConfig.AttributesEntry)
    ))
  ,
  DESCRIPTOR = _PUSHCONFIG,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.PushConfig)
  ))
_sym_db.RegisterMessage(PushConfig)
_sym_db.RegisterMessage(PushConfig.AttributesEntry)

ReceivedMessage = _reflection.GeneratedProtocolMessageType('ReceivedMessage', (_message.Message,), dict(
  DESCRIPTOR = _RECEIVEDMESSAGE,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.ReceivedMessage)
  ))
_sym_db.RegisterMessage(ReceivedMessage)

GetSubscriptionRequest = _reflection.GeneratedProtocolMessageType('GetSubscriptionRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETSUBSCRIPTIONREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.GetSubscriptionRequest)
  ))
_sym_db.RegisterMessage(GetSubscriptionRequest)

ListSubscriptionsRequest = _reflection.GeneratedProtocolMessageType('ListSubscriptionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTSUBSCRIPTIONSREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.ListSubscriptionsRequest)
  ))
_sym_db.RegisterMessage(ListSubscriptionsRequest)

ListSubscriptionsResponse = _reflection.GeneratedProtocolMessageType('ListSubscriptionsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTSUBSCRIPTIONSRESPONSE,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.ListSubscriptionsResponse)
  ))
_sym_db.RegisterMessage(ListSubscriptionsResponse)

DeleteSubscriptionRequest = _reflection.GeneratedProtocolMessageType('DeleteSubscriptionRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETESUBSCRIPTIONREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.DeleteSubscriptionRequest)
  ))
_sym_db.RegisterMessage(DeleteSubscriptionRequest)

ModifyPushConfigRequest = _reflection.GeneratedProtocolMessageType('ModifyPushConfigRequest', (_message.Message,), dict(
  DESCRIPTOR = _MODIFYPUSHCONFIGREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.ModifyPushConfigRequest)
  ))
_sym_db.RegisterMessage(ModifyPushConfigRequest)

PullRequest = _reflection.GeneratedProtocolMessageType('PullRequest', (_message.Message,), dict(
  DESCRIPTOR = _PULLREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.PullRequest)
  ))
_sym_db.RegisterMessage(PullRequest)

PullResponse = _reflection.GeneratedProtocolMessageType('PullResponse', (_message.Message,), dict(
  DESCRIPTOR = _PULLRESPONSE,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.PullResponse)
  ))
_sym_db.RegisterMessage(PullResponse)

ModifyAckDeadlineRequest = _reflection.GeneratedProtocolMessageType('ModifyAckDeadlineRequest', (_message.Message,), dict(
  DESCRIPTOR = _MODIFYACKDEADLINEREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.ModifyAckDeadlineRequest)
  ))
_sym_db.RegisterMessage(ModifyAckDeadlineRequest)

AcknowledgeRequest = _reflection.GeneratedProtocolMessageType('AcknowledgeRequest', (_message.Message,), dict(
  DESCRIPTOR = _ACKNOWLEDGEREQUEST,
  __module__ = 'google.pubsub.v1.pubsub_pb2'
  # @@protoc_insertion_point(class_scope:google.pubsub.v1.AcknowledgeRequest)
  ))
_sym_db.RegisterMessage(AcknowledgeRequest)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\024com.google.pubsub.v1B\013PubsubProtoP\001\370\001\001'))
_PUBSUBMESSAGE_ATTRIBUTESENTRY.has_options = True
_PUBSUBMESSAGE_ATTRIBUTESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_PUSHCONFIG_ATTRIBUTESENTRY.has_options = True
_PUSHCONFIG_ATTRIBUTESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class SubscriberStub(object):
  """The service that an application uses to manipulate subscriptions and to
  consume messages from a subscription via the `Pull` method.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateSubscription = channel.unary_unary(
        '/google.pubsub.v1.Subscriber/CreateSubscription',
        request_serializer=Subscription.SerializeToString,
        response_deserializer=Subscription.FromString,
        )
    self.GetSubscription = channel.unary_unary(
        '/google.pubsub.v1.Subscriber/GetSubscription',
        request_serializer=GetSubscriptionRequest.SerializeToString,
        response_deserializer=Subscription.FromString,
        )
    self.ListSubscriptions = channel.unary_unary(
        '/google.pubsub.v1.Subscriber/ListSubscriptions',
        request_serializer=ListSubscriptionsRequest.SerializeToString,
        response_deserializer=ListSubscriptionsResponse.FromString,
        )
    self.DeleteSubscription = channel.unary_unary(
        '/google.pubsub.v1.Subscriber/DeleteSubscription',
        request_serializer=DeleteSubscriptionRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.ModifyAckDeadline = channel.unary_unary(
        '/google.pubsub.v1.Subscriber/ModifyAckDeadline',
        request_serializer=ModifyAckDeadlineRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.Acknowledge = channel.unary_unary(
        '/google.pubsub.v1.Subscriber/Acknowledge',
        request_serializer=AcknowledgeRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.Pull = channel.unary_unary(
        '/google.pubsub.v1.Subscriber/Pull',
        request_serializer=PullRequest.SerializeToString,
        response_deserializer=PullResponse.FromString,
        )
    self.ModifyPushConfig = channel.unary_unary(
        '/google.pubsub.v1.Subscriber/ModifyPushConfig',
        request_serializer=ModifyPushConfigRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class SubscriberServicer(object):
  """The service that an application uses to manipulate subscriptions and to
  consume messages from a subscription via the `Pull` method.
  """

  def CreateSubscription(self, request, context):
    """Creates a subscription to a given topic.
    If the subscription already exists, returns `ALREADY_EXISTS`.
    If the corresponding topic doesn't exist, returns `NOT_FOUND`.

    If the name is not provided in the request, the server will assign a random
    name for this subscription on the same project as the topic. Note that
    for REST API requests, you must specify a name.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSubscription(self, request, context):
    """Gets the configuration details of a subscription.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListSubscriptions(self, request, context):
    """Lists matching subscriptions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteSubscription(self, request, context):
    """Deletes an existing subscription. All pending messages in the subscription
    are immediately dropped. Calls to `Pull` after deletion will return
    `NOT_FOUND`. After a subscription is deleted, a new one may be created with
    the same name, but the new one has no association with the old
    subscription, or its topic unless the same topic is specified.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ModifyAckDeadline(self, request, context):
    """Modifies the ack deadline for a specific message. This method is useful
    to indicate that more time is needed to process a message by the
    subscriber, or to make the message available for redelivery if the
    processing was interrupted. Note that this does not modify the
    subscription-level `ackDeadlineSeconds` used for subsequent messages.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Acknowledge(self, request, context):
    """Acknowledges the messages associated with the `ack_ids` in the
    `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
    from the subscription.

    Acknowledging a message whose ack deadline has expired may succeed,
    but such a message may be redelivered later. Acknowledging a message more
    than once will not result in an error.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Pull(self, request, context):
    """Pulls messages from the server. Returns an empty list if there are no
    messages available in the backlog. The server may return `UNAVAILABLE` if
    there are too many concurrent pull requests pending for the given
    subscription.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ModifyPushConfig(self, request, context):
    """Modifies the `PushConfig` for a specified subscription.

    This may be used to change a push subscription to a pull one (signified by
    an empty `PushConfig`) or vice versa, or change the endpoint URL and other
    attributes of a push subscription. Messages will accumulate for delivery
    continuously through the call regardless of changes to the `PushConfig`.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SubscriberServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateSubscription': grpc.unary_unary_rpc_method_handler(
          servicer.CreateSubscription,
          request_deserializer=Subscription.FromString,
          response_serializer=Subscription.SerializeToString,
      ),
      'GetSubscription': grpc.unary_unary_rpc_method_handler(
          servicer.GetSubscription,
          request_deserializer=GetSubscriptionRequest.FromString,
          response_serializer=Subscription.SerializeToString,
      ),
      'ListSubscriptions': grpc.unary_unary_rpc_method_handler(
          servicer.ListSubscriptions,
          request_deserializer=ListSubscriptionsRequest.FromString,
          response_serializer=ListSubscriptionsResponse.SerializeToString,
      ),
      'DeleteSubscription': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteSubscription,
          request_deserializer=DeleteSubscriptionRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'ModifyAckDeadline': grpc.unary_unary_rpc_method_handler(
          servicer.ModifyAckDeadline,
          request_deserializer=ModifyAckDeadlineRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'Acknowledge': grpc.unary_unary_rpc_method_handler(
          servicer.Acknowledge,
          request_deserializer=AcknowledgeRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'Pull': grpc.unary_unary_rpc_method_handler(
          servicer.Pull,
          request_deserializer=PullRequest.FromString,
          response_serializer=PullResponse.SerializeToString,
      ),
      'ModifyPushConfig': grpc.unary_unary_rpc_method_handler(
          servicer.ModifyPushConfig,
          request_deserializer=ModifyPushConfigRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.pubsub.v1.Subscriber', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaSubscriberServicer(object):
  """The service that an application uses to manipulate subscriptions and to
  consume messages from a subscription via the `Pull` method.
  """
  def CreateSubscription(self, request, context):
    """Creates a subscription to a given topic.
    If the subscription already exists, returns `ALREADY_EXISTS`.
    If the corresponding topic doesn't exist, returns `NOT_FOUND`.

    If the name is not provided in the request, the server will assign a random
    name for this subscription on the same project as the topic. Note that
    for REST API requests, you must specify a name.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetSubscription(self, request, context):
    """Gets the configuration details of a subscription.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ListSubscriptions(self, request, context):
    """Lists matching subscriptions.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def DeleteSubscription(self, request, context):
    """Deletes an existing subscription. All pending messages in the subscription
    are immediately dropped. Calls to `Pull` after deletion will return
    `NOT_FOUND`. After a subscription is deleted, a new one may be created with
    the same name, but the new one has no association with the old
    subscription, or its topic unless the same topic is specified.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ModifyAckDeadline(self, request, context):
    """Modifies the ack deadline for a specific message. This method is useful
    to indicate that more time is needed to process a message by the
    subscriber, or to make the message available for redelivery if the
    processing was interrupted. Note that this does not modify the
    subscription-level `ackDeadlineSeconds` used for subsequent messages.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Acknowledge(self, request, context):
    """Acknowledges the messages associated with the `ack_ids` in the
    `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
    from the subscription.

    Acknowledging a message whose ack deadline has expired may succeed,
    but such a message may be redelivered later. Acknowledging a message more
    than once will not result in an error.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Pull(self, request, context):
    """Pulls messages from the server. Returns an empty list if there are no
    messages available in the backlog. The server may return `UNAVAILABLE` if
    there are too many concurrent pull requests pending for the given
    subscription.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ModifyPushConfig(self, request, context):
    """Modifies the `PushConfig` for a specified subscription.

    This may be used to change a push subscription to a pull one (signified by
    an empty `PushConfig`) or vice versa, or change the endpoint URL and other
    attributes of a push subscription. Messages will accumulate for delivery
    continuously through the call regardless of changes to the `PushConfig`.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaSubscriberStub(object):
  """The service that an application uses to manipulate subscriptions and to
  consume messages from a subscription via the `Pull` method.
  """
  def CreateSubscription(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Creates a subscription to a given topic.
    If the subscription already exists, returns `ALREADY_EXISTS`.
    If the corresponding topic doesn't exist, returns `NOT_FOUND`.

    If the name is not provided in the request, the server will assign a random
    name for this subscription on the same project as the topic. Note that
    for REST API requests, you must specify a name.
    """
    raise NotImplementedError()
  CreateSubscription.future = None
  def GetSubscription(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Gets the configuration details of a subscription.
    """
    raise NotImplementedError()
  GetSubscription.future = None
  def ListSubscriptions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Lists matching subscriptions.
    """
    raise NotImplementedError()
  ListSubscriptions.future = None
  def DeleteSubscription(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Deletes an existing subscription. All pending messages in the subscription
    are immediately dropped. Calls to `Pull` after deletion will return
    `NOT_FOUND`. After a subscription is deleted, a new one may be created with
    the same name, but the new one has no association with the old
    subscription, or its topic unless the same topic is specified.
    """
    raise NotImplementedError()
  DeleteSubscription.future = None
  def ModifyAckDeadline(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Modifies the ack deadline for a specific message. This method is useful
    to indicate that more time is needed to process a message by the
    subscriber, or to make the message available for redelivery if the
    processing was interrupted. Note that this does not modify the
    subscription-level `ackDeadlineSeconds` used for subsequent messages.
    """
    raise NotImplementedError()
  ModifyAckDeadline.future = None
  def Acknowledge(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Acknowledges the messages associated with the `ack_ids` in the
    `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages
    from the subscription.

    Acknowledging a message whose ack deadline has expired may succeed,
    but such a message may be redelivered later. Acknowledging a message more
    than once will not result in an error.
    """
    raise NotImplementedError()
  Acknowledge.future = None
  def Pull(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Pulls messages from the server. Returns an empty list if there are no
    messages available in the backlog. The server may return `UNAVAILABLE` if
    there are too many concurrent pull requests pending for the given
    subscription.
    """
    raise NotImplementedError()
  Pull.future = None
  def ModifyPushConfig(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Modifies the `PushConfig` for a specified subscription.

    This may be used to change a push subscription to a pull one (signified by
    an empty `PushConfig`) or vice versa, or change the endpoint URL and other
    attributes of a push subscription. Messages will accumulate for delivery
    continuously through the call regardless of changes to the `PushConfig`.
    """
    raise NotImplementedError()
  ModifyPushConfig.future = None


def beta_create_Subscriber_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('google.pubsub.v1.Subscriber', 'Acknowledge'): AcknowledgeRequest.FromString,
    ('google.pubsub.v1.Subscriber', 'CreateSubscription'): Subscription.FromString,
    ('google.pubsub.v1.Subscriber', 'DeleteSubscription'): DeleteSubscriptionRequest.FromString,
    ('google.pubsub.v1.Subscriber', 'GetSubscription'): GetSubscriptionRequest.FromString,
    ('google.pubsub.v1.Subscriber', 'ListSubscriptions'): ListSubscriptionsRequest.FromString,
    ('google.pubsub.v1.Subscriber', 'ModifyAckDeadline'): ModifyAckDeadlineRequest.FromString,
    ('google.pubsub.v1.Subscriber', 'ModifyPushConfig'): ModifyPushConfigRequest.FromString,
    ('google.pubsub.v1.Subscriber', 'Pull'): PullRequest.FromString,
  }
  response_serializers = {
    ('google.pubsub.v1.Subscriber', 'Acknowledge'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'CreateSubscription'): Subscription.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'DeleteSubscription'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'GetSubscription'): Subscription.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'ListSubscriptions'): ListSubscriptionsResponse.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'ModifyAckDeadline'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'ModifyPushConfig'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'Pull'): PullResponse.SerializeToString,
  }
  method_implementations = {
    ('google.pubsub.v1.Subscriber', 'Acknowledge'): face_utilities.unary_unary_inline(servicer.Acknowledge),
    ('google.pubsub.v1.Subscriber', 'CreateSubscription'): face_utilities.unary_unary_inline(servicer.CreateSubscription),
    ('google.pubsub.v1.Subscriber', 'DeleteSubscription'): face_utilities.unary_unary_inline(servicer.DeleteSubscription),
    ('google.pubsub.v1.Subscriber', 'GetSubscription'): face_utilities.unary_unary_inline(servicer.GetSubscription),
    ('google.pubsub.v1.Subscriber', 'ListSubscriptions'): face_utilities.unary_unary_inline(servicer.ListSubscriptions),
    ('google.pubsub.v1.Subscriber', 'ModifyAckDeadline'): face_utilities.unary_unary_inline(servicer.ModifyAckDeadline),
    ('google.pubsub.v1.Subscriber', 'ModifyPushConfig'): face_utilities.unary_unary_inline(servicer.ModifyPushConfig),
    ('google.pubsub.v1.Subscriber', 'Pull'): face_utilities.unary_unary_inline(servicer.Pull),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Subscriber_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('google.pubsub.v1.Subscriber', 'Acknowledge'): AcknowledgeRequest.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'CreateSubscription'): Subscription.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'DeleteSubscription'): DeleteSubscriptionRequest.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'GetSubscription'): GetSubscriptionRequest.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'ListSubscriptions'): ListSubscriptionsRequest.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'ModifyAckDeadline'): ModifyAckDeadlineRequest.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'ModifyPushConfig'): ModifyPushConfigRequest.SerializeToString,
    ('google.pubsub.v1.Subscriber', 'Pull'): PullRequest.SerializeToString,
  }
  response_deserializers = {
    ('google.pubsub.v1.Subscriber', 'Acknowledge'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
    ('google.pubsub.v1.Subscriber', 'CreateSubscription'): Subscription.FromString,
    ('google.pubsub.v1.Subscriber', 'DeleteSubscription'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
    ('google.pubsub.v1.Subscriber', 'GetSubscription'): Subscription.FromString,
    ('google.pubsub.v1.Subscriber', 'ListSubscriptions'): ListSubscriptionsResponse.FromString,
    ('google.pubsub.v1.Subscriber', 'ModifyAckDeadline'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
    ('google.pubsub.v1.Subscriber', 'ModifyPushConfig'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
    ('google.pubsub.v1.Subscriber', 'Pull'): PullResponse.FromString,
  }
  cardinalities = {
    'Acknowledge': cardinality.Cardinality.UNARY_UNARY,
    'CreateSubscription': cardinality.Cardinality.UNARY_UNARY,
    'DeleteSubscription': cardinality.Cardinality.UNARY_UNARY,
    'GetSubscription': cardinality.Cardinality.UNARY_UNARY,
    'ListSubscriptions': cardinality.Cardinality.UNARY_UNARY,
    'ModifyAckDeadline': cardinality.Cardinality.UNARY_UNARY,
    'ModifyPushConfig': cardinality.Cardinality.UNARY_UNARY,
    'Pull': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'google.pubsub.v1.Subscriber', cardinalities, options=stub_options)


class PublisherStub(object):
  """The service that an application uses to manipulate topics, and to send
  messages to a topic.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateTopic = channel.unary_unary(
        '/google.pubsub.v1.Publisher/CreateTopic',
        request_serializer=Topic.SerializeToString,
        response_deserializer=Topic.FromString,
        )
    self.Publish = channel.unary_unary(
        '/google.pubsub.v1.Publisher/Publish',
        request_serializer=PublishRequest.SerializeToString,
        response_deserializer=PublishResponse.FromString,
        )
    self.GetTopic = channel.unary_unary(
        '/google.pubsub.v1.Publisher/GetTopic',
        request_serializer=GetTopicRequest.SerializeToString,
        response_deserializer=Topic.FromString,
        )
    self.ListTopics = channel.unary_unary(
        '/google.pubsub.v1.Publisher/ListTopics',
        request_serializer=ListTopicsRequest.SerializeToString,
        response_deserializer=ListTopicsResponse.FromString,
        )
    self.ListTopicSubscriptions = channel.unary_unary(
        '/google.pubsub.v1.Publisher/ListTopicSubscriptions',
        request_serializer=ListTopicSubscriptionsRequest.SerializeToString,
        response_deserializer=ListTopicSubscriptionsResponse.FromString,
        )
    self.DeleteTopic = channel.unary_unary(
        '/google.pubsub.v1.Publisher/DeleteTopic',
        request_serializer=DeleteTopicRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class PublisherServicer(object):
  """The service that an application uses to manipulate topics, and to send
  messages to a topic.
  """

  def CreateTopic(self, request, context):
    """Creates the given topic with the given name.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Publish(self, request, context):
    """Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
    does not exist. The message payload must not be empty; it must contain
    either a non-empty data field, or at least one attribute.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTopic(self, request, context):
    """Gets the configuration of a topic.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListTopics(self, request, context):
    """Lists matching topics.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListTopicSubscriptions(self, request, context):
    """Lists the name of the subscriptions for this topic.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteTopic(self, request, context):
    """Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
    does not exist. After a topic is deleted, a new topic may be created with
    the same name; this is an entirely new topic with none of the old
    configuration or subscriptions. Existing subscriptions to this topic are
    not deleted, but their `topic` field is set to `_deleted-topic_`.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PublisherServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateTopic': grpc.unary_unary_rpc_method_handler(
          servicer.CreateTopic,
          request_deserializer=Topic.FromString,
          response_serializer=Topic.SerializeToString,
      ),
      'Publish': grpc.unary_unary_rpc_method_handler(
          servicer.Publish,
          request_deserializer=PublishRequest.FromString,
          response_serializer=PublishResponse.SerializeToString,
      ),
      'GetTopic': grpc.unary_unary_rpc_method_handler(
          servicer.GetTopic,
          request_deserializer=GetTopicRequest.FromString,
          response_serializer=Topic.SerializeToString,
      ),
      'ListTopics': grpc.unary_unary_rpc_method_handler(
          servicer.ListTopics,
          request_deserializer=ListTopicsRequest.FromString,
          response_serializer=ListTopicsResponse.SerializeToString,
      ),
      'ListTopicSubscriptions': grpc.unary_unary_rpc_method_handler(
          servicer.ListTopicSubscriptions,
          request_deserializer=ListTopicSubscriptionsRequest.FromString,
          response_serializer=ListTopicSubscriptionsResponse.SerializeToString,
      ),
      'DeleteTopic': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteTopic,
          request_deserializer=DeleteTopicRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.pubsub.v1.Publisher', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaPublisherServicer(object):
  """The service that an application uses to manipulate topics, and to send
  messages to a topic.
  """
  def CreateTopic(self, request, context):
    """Creates the given topic with the given name.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Publish(self, request, context):
    """Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
    does not exist. The message payload must not be empty; it must contain
    either a non-empty data field, or at least one attribute.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetTopic(self, request, context):
    """Gets the configuration of a topic.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ListTopics(self, request, context):
    """Lists matching topics.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ListTopicSubscriptions(self, request, context):
    """Lists the name of the subscriptions for this topic.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def DeleteTopic(self, request, context):
    """Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
    does not exist. After a topic is deleted, a new topic may be created with
    the same name; this is an entirely new topic with none of the old
    configuration or subscriptions. Existing subscriptions to this topic are
    not deleted, but their `topic` field is set to `_deleted-topic_`.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaPublisherStub(object):
  """The service that an application uses to manipulate topics, and to send
  messages to a topic.
  """
  def CreateTopic(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Creates the given topic with the given name.
    """
    raise NotImplementedError()
  CreateTopic.future = None
  def Publish(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
    does not exist. The message payload must not be empty; it must contain
    either a non-empty data field, or at least one attribute.
    """
    raise NotImplementedError()
  Publish.future = None
  def GetTopic(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Gets the configuration of a topic.
    """
    raise NotImplementedError()
  GetTopic.future = None
  def ListTopics(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Lists matching topics.
    """
    raise NotImplementedError()
  ListTopics.future = None
  def ListTopicSubscriptions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Lists the name of the subscriptions for this topic.
    """
    raise NotImplementedError()
  ListTopicSubscriptions.future = None
  def DeleteTopic(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Deletes the topic with the given name. Returns `NOT_FOUND` if the topic
    does not exist. After a topic is deleted, a new topic may be created with
    the same name; this is an entirely new topic with none of the old
    configuration or subscriptions. Existing subscriptions to this topic are
    not deleted, but their `topic` field is set to `_deleted-topic_`.
    """
    raise NotImplementedError()
  DeleteTopic.future = None


def beta_create_Publisher_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('google.pubsub.v1.Publisher', 'CreateTopic'): Topic.FromString,
    ('google.pubsub.v1.Publisher', 'DeleteTopic'): DeleteTopicRequest.FromString,
    ('google.pubsub.v1.Publisher', 'GetTopic'): GetTopicRequest.FromString,
    ('google.pubsub.v1.Publisher', 'ListTopicSubscriptions'): ListTopicSubscriptionsRequest.FromString,
    ('google.pubsub.v1.Publisher', 'ListTopics'): ListTopicsRequest.FromString,
    ('google.pubsub.v1.Publisher', 'Publish'): PublishRequest.FromString,
  }
  response_serializers = {
    ('google.pubsub.v1.Publisher', 'CreateTopic'): Topic.SerializeToString,
    ('google.pubsub.v1.Publisher', 'DeleteTopic'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
    ('google.pubsub.v1.Publisher', 'GetTopic'): Topic.SerializeToString,
    ('google.pubsub.v1.Publisher', 'ListTopicSubscriptions'): ListTopicSubscriptionsResponse.SerializeToString,
    ('google.pubsub.v1.Publisher', 'ListTopics'): ListTopicsResponse.SerializeToString,
    ('google.pubsub.v1.Publisher', 'Publish'): PublishResponse.SerializeToString,
  }
  method_implementations = {
    ('google.pubsub.v1.Publisher', 'CreateTopic'): face_utilities.unary_unary_inline(servicer.CreateTopic),
    ('google.pubsub.v1.Publisher', 'DeleteTopic'): face_utilities.unary_unary_inline(servicer.DeleteTopic),
    ('google.pubsub.v1.Publisher', 'GetTopic'): face_utilities.unary_unary_inline(servicer.GetTopic),
    ('google.pubsub.v1.Publisher', 'ListTopicSubscriptions'): face_utilities.unary_unary_inline(servicer.ListTopicSubscriptions),
    ('google.pubsub.v1.Publisher', 'ListTopics'): face_utilities.unary_unary_inline(servicer.ListTopics),
    ('google.pubsub.v1.Publisher', 'Publish'): face_utilities.unary_unary_inline(servicer.Publish),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Publisher_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('google.pubsub.v1.Publisher', 'CreateTopic'): Topic.SerializeToString,
    ('google.pubsub.v1.Publisher', 'DeleteTopic'): DeleteTopicRequest.SerializeToString,
    ('google.pubsub.v1.Publisher', 'GetTopic'): GetTopicRequest.SerializeToString,
    ('google.pubsub.v1.Publisher', 'ListTopicSubscriptions'): ListTopicSubscriptionsRequest.SerializeToString,
    ('google.pubsub.v1.Publisher', 'ListTopics'): ListTopicsRequest.SerializeToString,
    ('google.pubsub.v1.Publisher', 'Publish'): PublishRequest.SerializeToString,
  }
  response_deserializers = {
    ('google.pubsub.v1.Publisher', 'CreateTopic'): Topic.FromString,
    ('google.pubsub.v1.Publisher', 'DeleteTopic'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
    ('google.pubsub.v1.Publisher', 'GetTopic'): Topic.FromString,
    ('google.pubsub.v1.Publisher', 'ListTopicSubscriptions'): ListTopicSubscriptionsResponse.FromString,
    ('google.pubsub.v1.Publisher', 'ListTopics'): ListTopicsResponse.FromString,
    ('google.pubsub.v1.Publisher', 'Publish'): PublishResponse.FromString,
  }
  cardinalities = {
    'CreateTopic': cardinality.Cardinality.UNARY_UNARY,
    'DeleteTopic': cardinality.Cardinality.UNARY_UNARY,
    'GetTopic': cardinality.Cardinality.UNARY_UNARY,
    'ListTopicSubscriptions': cardinality.Cardinality.UNARY_UNARY,
    'ListTopics': cardinality.Cardinality.UNARY_UNARY,
    'Publish': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'google.pubsub.v1.Publisher', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
