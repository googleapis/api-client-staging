# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/iam/admin/v1/iam.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.iam.v1 import iam_policy_pb2 as google_dot_iam_dot_v1_dot_iam__policy__pb2
from google.iam.v1 import policy_pb2 as google_dot_iam_dot_v1_dot_policy__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import field_mask_pb2 as google_dot_protobuf_dot_field__mask__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='google/iam/admin/v1/iam.proto',
  package='google.iam.admin.v1',
  syntax='proto3',
  serialized_pb=_b('\n\x1dgoogle/iam/admin/v1/iam.proto\x12\x13google.iam.admin.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1egoogle/iam/v1/iam_policy.proto\x1a\x1agoogle/iam/v1/policy.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x92\x01\n\x0eServiceAccount\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\nproject_id\x18\x02 \x01(\t\x12\x11\n\tunique_id\x18\x04 \x01(\t\x12\r\n\x05\x65mail\x18\x05 \x01(\t\x12\x14\n\x0c\x64isplay_name\x18\x06 \x01(\t\x12\x0c\n\x04\x65tag\x18\x07 \x01(\x0c\x12\x18\n\x10oauth2_client_id\x18\t \x01(\t\"}\n\x1b\x43reateServiceAccountRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\naccount_id\x18\x02 \x01(\t\x12<\n\x0fservice_account\x18\x03 \x01(\x0b\x32#.google.iam.admin.v1.ServiceAccount\"Q\n\x1aListServiceAccountsRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tpage_size\x18\x02 \x01(\x05\x12\x12\n\npage_token\x18\x03 \x01(\t\"m\n\x1bListServiceAccountsResponse\x12\x35\n\x08\x61\x63\x63ounts\x18\x01 \x03(\x0b\x32#.google.iam.admin.v1.ServiceAccount\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"(\n\x18GetServiceAccountRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"+\n\x1b\x44\x65leteServiceAccountRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\xc7\x01\n\x1dListServiceAccountKeysRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12M\n\tkey_types\x18\x02 \x03(\x0e\x32:.google.iam.admin.v1.ListServiceAccountKeysRequest.KeyType\"I\n\x07KeyType\x12\x18\n\x14KEY_TYPE_UNSPECIFIED\x10\x00\x12\x10\n\x0cUSER_MANAGED\x10\x01\x12\x12\n\x0eSYSTEM_MANAGED\x10\x02\"V\n\x1eListServiceAccountKeysResponse\x12\x34\n\x04keys\x18\x01 \x03(\x0b\x32&.google.iam.admin.v1.ServiceAccountKey\"v\n\x1bGetServiceAccountKeyRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12I\n\x0fpublic_key_type\x18\x02 \x01(\x0e\x32\x30.google.iam.admin.v1.ServiceAccountPublicKeyType\"\xd6\x02\n\x11ServiceAccountKey\x12\x0c\n\x04name\x18\x01 \x01(\t\x12K\n\x10private_key_type\x18\x02 \x01(\x0e\x32\x31.google.iam.admin.v1.ServiceAccountPrivateKeyType\x12\x46\n\rkey_algorithm\x18\x08 \x01(\x0e\x32/.google.iam.admin.v1.ServiceAccountKeyAlgorithm\x12\x18\n\x10private_key_data\x18\x03 \x01(\x0c\x12\x17\n\x0fpublic_key_data\x18\x07 \x01(\x0c\x12\x34\n\x10valid_after_time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x35\n\x11valid_before_time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\xc3\x01\n\x1e\x43reateServiceAccountKeyRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12K\n\x10private_key_type\x18\x02 \x01(\x0e\x32\x31.google.iam.admin.v1.ServiceAccountPrivateKeyType\x12\x46\n\rkey_algorithm\x18\x03 \x01(\x0e\x32/.google.iam.admin.v1.ServiceAccountKeyAlgorithm\".\n\x1e\x44\x65leteServiceAccountKeyRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"6\n\x0fSignBlobRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x15\n\rbytes_to_sign\x18\x02 \x01(\x0c\"5\n\x10SignBlobResponse\x12\x0e\n\x06key_id\x18\x01 \x01(\t\x12\x11\n\tsignature\x18\x02 \x01(\x0c\"8\n\x04Role\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05title\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\"8\n\x1aQueryGrantableRolesRequest\x12\x1a\n\x12\x66ull_resource_name\x18\x01 \x01(\t\"G\n\x1bQueryGrantableRolesResponse\x12(\n\x05roles\x18\x01 \x03(\x0b\x32\x19.google.iam.admin.v1.Role*a\n\x1aServiceAccountKeyAlgorithm\x12\x17\n\x13KEY_ALG_UNSPECIFIED\x10\x00\x12\x14\n\x10KEY_ALG_RSA_1024\x10\x01\x12\x14\n\x10KEY_ALG_RSA_2048\x10\x02*l\n\x1cServiceAccountPrivateKeyType\x12\x14\n\x10TYPE_UNSPECIFIED\x10\x00\x12\x14\n\x10TYPE_PKCS12_FILE\x10\x01\x12 \n\x1cTYPE_GOOGLE_CREDENTIALS_FILE\x10\x02*]\n\x1bServiceAccountPublicKeyType\x12\r\n\tTYPE_NONE\x10\x00\x12\x16\n\x12TYPE_X509_PEM_FILE\x10\x01\x12\x17\n\x13TYPE_RAW_PUBLIC_KEY\x10\x02\x32\xe1\x11\n\x03IAM\x12\xa7\x01\n\x13ListServiceAccounts\x12/.google.iam.admin.v1.ListServiceAccountsRequest\x1a\x30.google.iam.admin.v1.ListServiceAccountsResponse\"-\x82\xd3\xe4\x93\x02\'\x12%/v1/{name=projects/*}/serviceAccounts\x12\x98\x01\n\x11GetServiceAccount\x12-.google.iam.admin.v1.GetServiceAccountRequest\x1a#.google.iam.admin.v1.ServiceAccount\"/\x82\xd3\xe4\x93\x02)\x12\'/v1/{name=projects/*/serviceAccounts/*}\x12\x9f\x01\n\x14\x43reateServiceAccount\x12\x30.google.iam.admin.v1.CreateServiceAccountRequest\x1a#.google.iam.admin.v1.ServiceAccount\"0\x82\xd3\xe4\x93\x02*\"%/v1/{name=projects/*}/serviceAccounts:\x01*\x12\x94\x01\n\x14UpdateServiceAccount\x12#.google.iam.admin.v1.ServiceAccount\x1a#.google.iam.admin.v1.ServiceAccount\"2\x82\xd3\xe4\x93\x02,\x1a\'/v1/{name=projects/*/serviceAccounts/*}:\x01*\x12\x91\x01\n\x14\x44\x65leteServiceAccount\x12\x30.google.iam.admin.v1.DeleteServiceAccountRequest\x1a\x16.google.protobuf.Empty\"/\x82\xd3\xe4\x93\x02)*\'/v1/{name=projects/*/serviceAccounts/*}\x12\xb7\x01\n\x16ListServiceAccountKeys\x12\x32.google.iam.admin.v1.ListServiceAccountKeysRequest\x1a\x33.google.iam.admin.v1.ListServiceAccountKeysResponse\"4\x82\xd3\xe4\x93\x02.\x12,/v1/{name=projects/*/serviceAccounts/*}/keys\x12\xa8\x01\n\x14GetServiceAccountKey\x12\x30.google.iam.admin.v1.GetServiceAccountKeyRequest\x1a&.google.iam.admin.v1.ServiceAccountKey\"6\x82\xd3\xe4\x93\x02\x30\x12./v1/{name=projects/*/serviceAccounts/*/keys/*}\x12\xaf\x01\n\x17\x43reateServiceAccountKey\x12\x33.google.iam.admin.v1.CreateServiceAccountKeyRequest\x1a&.google.iam.admin.v1.ServiceAccountKey\"7\x82\xd3\xe4\x93\x02\x31\",/v1/{name=projects/*/serviceAccounts/*}/keys:\x01*\x12\x9e\x01\n\x17\x44\x65leteServiceAccountKey\x12\x33.google.iam.admin.v1.DeleteServiceAccountKeyRequest\x1a\x16.google.protobuf.Empty\"6\x82\xd3\xe4\x93\x02\x30*./v1/{name=projects/*/serviceAccounts/*/keys/*}\x12\x94\x01\n\x08SignBlob\x12$.google.iam.admin.v1.SignBlobRequest\x1a%.google.iam.admin.v1.SignBlobResponse\";\x82\xd3\xe4\x93\x02\x35\"0/v1/{name=projects/*/serviceAccounts/*}:signBlob:\x01*\x12\x8b\x01\n\x0cGetIamPolicy\x12\".google.iam.v1.GetIamPolicyRequest\x1a\x15.google.iam.v1.Policy\"@\x82\xd3\xe4\x93\x02:\"8/v1/{resource=projects/*/serviceAccounts/*}:getIamPolicy\x12\x8e\x01\n\x0cSetIamPolicy\x12\".google.iam.v1.SetIamPolicyRequest\x1a\x15.google.iam.v1.Policy\"C\x82\xd3\xe4\x93\x02=\"8/v1/{resource=projects/*/serviceAccounts/*}:setIamPolicy:\x01*\x12\xb4\x01\n\x12TestIamPermissions\x12(.google.iam.v1.TestIamPermissionsRequest\x1a).google.iam.v1.TestIamPermissionsResponse\"I\x82\xd3\xe4\x93\x02\x43\">/v1/{resource=projects/*/serviceAccounts/*}:testIamPermissions:\x01*\x12\xa2\x01\n\x13QueryGrantableRoles\x12/.google.iam.admin.v1.QueryGrantableRolesRequest\x1a\x30.google.iam.admin.v1.QueryGrantableRolesResponse\"(\x82\xd3\xe4\x93\x02\"\"\x1d/v1/roles:queryGrantableRoles:\x01*B(\n\x17\x63om.google.iam.admin.v1B\x08IamProtoP\x01\xf8\x01\x01\x62\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_iam_dot_v1_dot_iam__policy__pb2.DESCRIPTOR,google_dot_iam_dot_v1_dot_policy__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,google_dot_protobuf_dot_field__mask__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_SERVICEACCOUNTKEYALGORITHM = _descriptor.EnumDescriptor(
  name='ServiceAccountKeyAlgorithm',
  full_name='google.iam.admin.v1.ServiceAccountKeyAlgorithm',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='KEY_ALG_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KEY_ALG_RSA_1024', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KEY_ALG_RSA_2048', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2098,
  serialized_end=2195,
)
_sym_db.RegisterEnumDescriptor(_SERVICEACCOUNTKEYALGORITHM)

ServiceAccountKeyAlgorithm = enum_type_wrapper.EnumTypeWrapper(_SERVICEACCOUNTKEYALGORITHM)
_SERVICEACCOUNTPRIVATEKEYTYPE = _descriptor.EnumDescriptor(
  name='ServiceAccountPrivateKeyType',
  full_name='google.iam.admin.v1.ServiceAccountPrivateKeyType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TYPE_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TYPE_PKCS12_FILE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TYPE_GOOGLE_CREDENTIALS_FILE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2197,
  serialized_end=2305,
)
_sym_db.RegisterEnumDescriptor(_SERVICEACCOUNTPRIVATEKEYTYPE)

ServiceAccountPrivateKeyType = enum_type_wrapper.EnumTypeWrapper(_SERVICEACCOUNTPRIVATEKEYTYPE)
_SERVICEACCOUNTPUBLICKEYTYPE = _descriptor.EnumDescriptor(
  name='ServiceAccountPublicKeyType',
  full_name='google.iam.admin.v1.ServiceAccountPublicKeyType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TYPE_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TYPE_X509_PEM_FILE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TYPE_RAW_PUBLIC_KEY', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2307,
  serialized_end=2400,
)
_sym_db.RegisterEnumDescriptor(_SERVICEACCOUNTPUBLICKEYTYPE)

ServiceAccountPublicKeyType = enum_type_wrapper.EnumTypeWrapper(_SERVICEACCOUNTPUBLICKEYTYPE)
KEY_ALG_UNSPECIFIED = 0
KEY_ALG_RSA_1024 = 1
KEY_ALG_RSA_2048 = 2
TYPE_UNSPECIFIED = 0
TYPE_PKCS12_FILE = 1
TYPE_GOOGLE_CREDENTIALS_FILE = 2
TYPE_NONE = 0
TYPE_X509_PEM_FILE = 1
TYPE_RAW_PUBLIC_KEY = 2


_LISTSERVICEACCOUNTKEYSREQUEST_KEYTYPE = _descriptor.EnumDescriptor(
  name='KeyType',
  full_name='google.iam.admin.v1.ListServiceAccountKeysRequest.KeyType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='KEY_TYPE_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USER_MANAGED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYSTEM_MANAGED', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=924,
  serialized_end=997,
)
_sym_db.RegisterEnumDescriptor(_LISTSERVICEACCOUNTKEYSREQUEST_KEYTYPE)


_SERVICEACCOUNT = _descriptor.Descriptor(
  name='ServiceAccount',
  full_name='google.iam.admin.v1.ServiceAccount',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.ServiceAccount.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.iam.admin.v1.ServiceAccount.project_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unique_id', full_name='google.iam.admin.v1.ServiceAccount.unique_id', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='email', full_name='google.iam.admin.v1.ServiceAccount.email', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='display_name', full_name='google.iam.admin.v1.ServiceAccount.display_name', index=4,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='etag', full_name='google.iam.admin.v1.ServiceAccount.etag', index=5,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='oauth2_client_id', full_name='google.iam.admin.v1.ServiceAccount.oauth2_client_id', index=6,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=241,
  serialized_end=387,
)


_CREATESERVICEACCOUNTREQUEST = _descriptor.Descriptor(
  name='CreateServiceAccountRequest',
  full_name='google.iam.admin.v1.CreateServiceAccountRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.CreateServiceAccountRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='account_id', full_name='google.iam.admin.v1.CreateServiceAccountRequest.account_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='service_account', full_name='google.iam.admin.v1.CreateServiceAccountRequest.service_account', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=389,
  serialized_end=514,
)


_LISTSERVICEACCOUNTSREQUEST = _descriptor.Descriptor(
  name='ListServiceAccountsRequest',
  full_name='google.iam.admin.v1.ListServiceAccountsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.ListServiceAccountsRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_size', full_name='google.iam.admin.v1.ListServiceAccountsRequest.page_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='google.iam.admin.v1.ListServiceAccountsRequest.page_token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=516,
  serialized_end=597,
)


_LISTSERVICEACCOUNTSRESPONSE = _descriptor.Descriptor(
  name='ListServiceAccountsResponse',
  full_name='google.iam.admin.v1.ListServiceAccountsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='accounts', full_name='google.iam.admin.v1.ListServiceAccountsResponse.accounts', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='google.iam.admin.v1.ListServiceAccountsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=599,
  serialized_end=708,
)


_GETSERVICEACCOUNTREQUEST = _descriptor.Descriptor(
  name='GetServiceAccountRequest',
  full_name='google.iam.admin.v1.GetServiceAccountRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.GetServiceAccountRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=710,
  serialized_end=750,
)


_DELETESERVICEACCOUNTREQUEST = _descriptor.Descriptor(
  name='DeleteServiceAccountRequest',
  full_name='google.iam.admin.v1.DeleteServiceAccountRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.DeleteServiceAccountRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=752,
  serialized_end=795,
)


_LISTSERVICEACCOUNTKEYSREQUEST = _descriptor.Descriptor(
  name='ListServiceAccountKeysRequest',
  full_name='google.iam.admin.v1.ListServiceAccountKeysRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.ListServiceAccountKeysRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key_types', full_name='google.iam.admin.v1.ListServiceAccountKeysRequest.key_types', index=1,
      number=2, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LISTSERVICEACCOUNTKEYSREQUEST_KEYTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=798,
  serialized_end=997,
)


_LISTSERVICEACCOUNTKEYSRESPONSE = _descriptor.Descriptor(
  name='ListServiceAccountKeysResponse',
  full_name='google.iam.admin.v1.ListServiceAccountKeysResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='keys', full_name='google.iam.admin.v1.ListServiceAccountKeysResponse.keys', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=999,
  serialized_end=1085,
)


_GETSERVICEACCOUNTKEYREQUEST = _descriptor.Descriptor(
  name='GetServiceAccountKeyRequest',
  full_name='google.iam.admin.v1.GetServiceAccountKeyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.GetServiceAccountKeyRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='public_key_type', full_name='google.iam.admin.v1.GetServiceAccountKeyRequest.public_key_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1087,
  serialized_end=1205,
)


_SERVICEACCOUNTKEY = _descriptor.Descriptor(
  name='ServiceAccountKey',
  full_name='google.iam.admin.v1.ServiceAccountKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.ServiceAccountKey.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='private_key_type', full_name='google.iam.admin.v1.ServiceAccountKey.private_key_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key_algorithm', full_name='google.iam.admin.v1.ServiceAccountKey.key_algorithm', index=2,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='private_key_data', full_name='google.iam.admin.v1.ServiceAccountKey.private_key_data', index=3,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='public_key_data', full_name='google.iam.admin.v1.ServiceAccountKey.public_key_data', index=4,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='valid_after_time', full_name='google.iam.admin.v1.ServiceAccountKey.valid_after_time', index=5,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='valid_before_time', full_name='google.iam.admin.v1.ServiceAccountKey.valid_before_time', index=6,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1208,
  serialized_end=1550,
)


_CREATESERVICEACCOUNTKEYREQUEST = _descriptor.Descriptor(
  name='CreateServiceAccountKeyRequest',
  full_name='google.iam.admin.v1.CreateServiceAccountKeyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.CreateServiceAccountKeyRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='private_key_type', full_name='google.iam.admin.v1.CreateServiceAccountKeyRequest.private_key_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key_algorithm', full_name='google.iam.admin.v1.CreateServiceAccountKeyRequest.key_algorithm', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1553,
  serialized_end=1748,
)


_DELETESERVICEACCOUNTKEYREQUEST = _descriptor.Descriptor(
  name='DeleteServiceAccountKeyRequest',
  full_name='google.iam.admin.v1.DeleteServiceAccountKeyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.DeleteServiceAccountKeyRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1750,
  serialized_end=1796,
)


_SIGNBLOBREQUEST = _descriptor.Descriptor(
  name='SignBlobRequest',
  full_name='google.iam.admin.v1.SignBlobRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.SignBlobRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bytes_to_sign', full_name='google.iam.admin.v1.SignBlobRequest.bytes_to_sign', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1798,
  serialized_end=1852,
)


_SIGNBLOBRESPONSE = _descriptor.Descriptor(
  name='SignBlobResponse',
  full_name='google.iam.admin.v1.SignBlobResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key_id', full_name='google.iam.admin.v1.SignBlobResponse.key_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='signature', full_name='google.iam.admin.v1.SignBlobResponse.signature', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1854,
  serialized_end=1907,
)


_ROLE = _descriptor.Descriptor(
  name='Role',
  full_name='google.iam.admin.v1.Role',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.iam.admin.v1.Role.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='title', full_name='google.iam.admin.v1.Role.title', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='google.iam.admin.v1.Role.description', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1909,
  serialized_end=1965,
)


_QUERYGRANTABLEROLESREQUEST = _descriptor.Descriptor(
  name='QueryGrantableRolesRequest',
  full_name='google.iam.admin.v1.QueryGrantableRolesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='full_resource_name', full_name='google.iam.admin.v1.QueryGrantableRolesRequest.full_resource_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1967,
  serialized_end=2023,
)


_QUERYGRANTABLEROLESRESPONSE = _descriptor.Descriptor(
  name='QueryGrantableRolesResponse',
  full_name='google.iam.admin.v1.QueryGrantableRolesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='roles', full_name='google.iam.admin.v1.QueryGrantableRolesResponse.roles', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2025,
  serialized_end=2096,
)

_CREATESERVICEACCOUNTREQUEST.fields_by_name['service_account'].message_type = _SERVICEACCOUNT
_LISTSERVICEACCOUNTSRESPONSE.fields_by_name['accounts'].message_type = _SERVICEACCOUNT
_LISTSERVICEACCOUNTKEYSREQUEST.fields_by_name['key_types'].enum_type = _LISTSERVICEACCOUNTKEYSREQUEST_KEYTYPE
_LISTSERVICEACCOUNTKEYSREQUEST_KEYTYPE.containing_type = _LISTSERVICEACCOUNTKEYSREQUEST
_LISTSERVICEACCOUNTKEYSRESPONSE.fields_by_name['keys'].message_type = _SERVICEACCOUNTKEY
_GETSERVICEACCOUNTKEYREQUEST.fields_by_name['public_key_type'].enum_type = _SERVICEACCOUNTPUBLICKEYTYPE
_SERVICEACCOUNTKEY.fields_by_name['private_key_type'].enum_type = _SERVICEACCOUNTPRIVATEKEYTYPE
_SERVICEACCOUNTKEY.fields_by_name['key_algorithm'].enum_type = _SERVICEACCOUNTKEYALGORITHM
_SERVICEACCOUNTKEY.fields_by_name['valid_after_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_SERVICEACCOUNTKEY.fields_by_name['valid_before_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_CREATESERVICEACCOUNTKEYREQUEST.fields_by_name['private_key_type'].enum_type = _SERVICEACCOUNTPRIVATEKEYTYPE
_CREATESERVICEACCOUNTKEYREQUEST.fields_by_name['key_algorithm'].enum_type = _SERVICEACCOUNTKEYALGORITHM
_QUERYGRANTABLEROLESRESPONSE.fields_by_name['roles'].message_type = _ROLE
DESCRIPTOR.message_types_by_name['ServiceAccount'] = _SERVICEACCOUNT
DESCRIPTOR.message_types_by_name['CreateServiceAccountRequest'] = _CREATESERVICEACCOUNTREQUEST
DESCRIPTOR.message_types_by_name['ListServiceAccountsRequest'] = _LISTSERVICEACCOUNTSREQUEST
DESCRIPTOR.message_types_by_name['ListServiceAccountsResponse'] = _LISTSERVICEACCOUNTSRESPONSE
DESCRIPTOR.message_types_by_name['GetServiceAccountRequest'] = _GETSERVICEACCOUNTREQUEST
DESCRIPTOR.message_types_by_name['DeleteServiceAccountRequest'] = _DELETESERVICEACCOUNTREQUEST
DESCRIPTOR.message_types_by_name['ListServiceAccountKeysRequest'] = _LISTSERVICEACCOUNTKEYSREQUEST
DESCRIPTOR.message_types_by_name['ListServiceAccountKeysResponse'] = _LISTSERVICEACCOUNTKEYSRESPONSE
DESCRIPTOR.message_types_by_name['GetServiceAccountKeyRequest'] = _GETSERVICEACCOUNTKEYREQUEST
DESCRIPTOR.message_types_by_name['ServiceAccountKey'] = _SERVICEACCOUNTKEY
DESCRIPTOR.message_types_by_name['CreateServiceAccountKeyRequest'] = _CREATESERVICEACCOUNTKEYREQUEST
DESCRIPTOR.message_types_by_name['DeleteServiceAccountKeyRequest'] = _DELETESERVICEACCOUNTKEYREQUEST
DESCRIPTOR.message_types_by_name['SignBlobRequest'] = _SIGNBLOBREQUEST
DESCRIPTOR.message_types_by_name['SignBlobResponse'] = _SIGNBLOBRESPONSE
DESCRIPTOR.message_types_by_name['Role'] = _ROLE
DESCRIPTOR.message_types_by_name['QueryGrantableRolesRequest'] = _QUERYGRANTABLEROLESREQUEST
DESCRIPTOR.message_types_by_name['QueryGrantableRolesResponse'] = _QUERYGRANTABLEROLESRESPONSE
DESCRIPTOR.enum_types_by_name['ServiceAccountKeyAlgorithm'] = _SERVICEACCOUNTKEYALGORITHM
DESCRIPTOR.enum_types_by_name['ServiceAccountPrivateKeyType'] = _SERVICEACCOUNTPRIVATEKEYTYPE
DESCRIPTOR.enum_types_by_name['ServiceAccountPublicKeyType'] = _SERVICEACCOUNTPUBLICKEYTYPE

ServiceAccount = _reflection.GeneratedProtocolMessageType('ServiceAccount', (_message.Message,), dict(
  DESCRIPTOR = _SERVICEACCOUNT,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.ServiceAccount)
  ))
_sym_db.RegisterMessage(ServiceAccount)

CreateServiceAccountRequest = _reflection.GeneratedProtocolMessageType('CreateServiceAccountRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATESERVICEACCOUNTREQUEST,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.CreateServiceAccountRequest)
  ))
_sym_db.RegisterMessage(CreateServiceAccountRequest)

ListServiceAccountsRequest = _reflection.GeneratedProtocolMessageType('ListServiceAccountsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTSERVICEACCOUNTSREQUEST,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.ListServiceAccountsRequest)
  ))
_sym_db.RegisterMessage(ListServiceAccountsRequest)

ListServiceAccountsResponse = _reflection.GeneratedProtocolMessageType('ListServiceAccountsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTSERVICEACCOUNTSRESPONSE,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.ListServiceAccountsResponse)
  ))
_sym_db.RegisterMessage(ListServiceAccountsResponse)

GetServiceAccountRequest = _reflection.GeneratedProtocolMessageType('GetServiceAccountRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETSERVICEACCOUNTREQUEST,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.GetServiceAccountRequest)
  ))
_sym_db.RegisterMessage(GetServiceAccountRequest)

DeleteServiceAccountRequest = _reflection.GeneratedProtocolMessageType('DeleteServiceAccountRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETESERVICEACCOUNTREQUEST,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.DeleteServiceAccountRequest)
  ))
_sym_db.RegisterMessage(DeleteServiceAccountRequest)

ListServiceAccountKeysRequest = _reflection.GeneratedProtocolMessageType('ListServiceAccountKeysRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTSERVICEACCOUNTKEYSREQUEST,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.ListServiceAccountKeysRequest)
  ))
_sym_db.RegisterMessage(ListServiceAccountKeysRequest)

ListServiceAccountKeysResponse = _reflection.GeneratedProtocolMessageType('ListServiceAccountKeysResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTSERVICEACCOUNTKEYSRESPONSE,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.ListServiceAccountKeysResponse)
  ))
_sym_db.RegisterMessage(ListServiceAccountKeysResponse)

GetServiceAccountKeyRequest = _reflection.GeneratedProtocolMessageType('GetServiceAccountKeyRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETSERVICEACCOUNTKEYREQUEST,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.GetServiceAccountKeyRequest)
  ))
_sym_db.RegisterMessage(GetServiceAccountKeyRequest)

ServiceAccountKey = _reflection.GeneratedProtocolMessageType('ServiceAccountKey', (_message.Message,), dict(
  DESCRIPTOR = _SERVICEACCOUNTKEY,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.ServiceAccountKey)
  ))
_sym_db.RegisterMessage(ServiceAccountKey)

CreateServiceAccountKeyRequest = _reflection.GeneratedProtocolMessageType('CreateServiceAccountKeyRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATESERVICEACCOUNTKEYREQUEST,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.CreateServiceAccountKeyRequest)
  ))
_sym_db.RegisterMessage(CreateServiceAccountKeyRequest)

DeleteServiceAccountKeyRequest = _reflection.GeneratedProtocolMessageType('DeleteServiceAccountKeyRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETESERVICEACCOUNTKEYREQUEST,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.DeleteServiceAccountKeyRequest)
  ))
_sym_db.RegisterMessage(DeleteServiceAccountKeyRequest)

SignBlobRequest = _reflection.GeneratedProtocolMessageType('SignBlobRequest', (_message.Message,), dict(
  DESCRIPTOR = _SIGNBLOBREQUEST,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.SignBlobRequest)
  ))
_sym_db.RegisterMessage(SignBlobRequest)

SignBlobResponse = _reflection.GeneratedProtocolMessageType('SignBlobResponse', (_message.Message,), dict(
  DESCRIPTOR = _SIGNBLOBRESPONSE,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.SignBlobResponse)
  ))
_sym_db.RegisterMessage(SignBlobResponse)

Role = _reflection.GeneratedProtocolMessageType('Role', (_message.Message,), dict(
  DESCRIPTOR = _ROLE,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.Role)
  ))
_sym_db.RegisterMessage(Role)

QueryGrantableRolesRequest = _reflection.GeneratedProtocolMessageType('QueryGrantableRolesRequest', (_message.Message,), dict(
  DESCRIPTOR = _QUERYGRANTABLEROLESREQUEST,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.QueryGrantableRolesRequest)
  ))
_sym_db.RegisterMessage(QueryGrantableRolesRequest)

QueryGrantableRolesResponse = _reflection.GeneratedProtocolMessageType('QueryGrantableRolesResponse', (_message.Message,), dict(
  DESCRIPTOR = _QUERYGRANTABLEROLESRESPONSE,
  __module__ = 'google.iam.admin.v1.iam_pb2'
  # @@protoc_insertion_point(class_scope:google.iam.admin.v1.QueryGrantableRolesResponse)
  ))
_sym_db.RegisterMessage(QueryGrantableRolesResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\027com.google.iam.admin.v1B\010IamProtoP\001\370\001\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class IAMStub(object):
  """Creates and manages service account objects.

  Service account is an account that belongs to your project instead
  of to an individual end user. It is used to authenticate calls
  to a Google API.

  To create a service account, specify the `project_id` and `account_id`
  for the account.  The `account_id` is unique within the project, and used
  to generate the service account email address and a stable
  `unique_id`.

  All other methods can identify accounts using the format
  `projects/{project}/serviceAccounts/{account}`.
  Using `-` as a wildcard for the project will infer the project from
  the account. The `account` value can be the `email` address or the
  `unique_id` of the service account.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListServiceAccounts = channel.unary_unary(
        '/google.iam.admin.v1.IAM/ListServiceAccounts',
        request_serializer=ListServiceAccountsRequest.SerializeToString,
        response_deserializer=ListServiceAccountsResponse.FromString,
        )
    self.GetServiceAccount = channel.unary_unary(
        '/google.iam.admin.v1.IAM/GetServiceAccount',
        request_serializer=GetServiceAccountRequest.SerializeToString,
        response_deserializer=ServiceAccount.FromString,
        )
    self.CreateServiceAccount = channel.unary_unary(
        '/google.iam.admin.v1.IAM/CreateServiceAccount',
        request_serializer=CreateServiceAccountRequest.SerializeToString,
        response_deserializer=ServiceAccount.FromString,
        )
    self.UpdateServiceAccount = channel.unary_unary(
        '/google.iam.admin.v1.IAM/UpdateServiceAccount',
        request_serializer=ServiceAccount.SerializeToString,
        response_deserializer=ServiceAccount.FromString,
        )
    self.DeleteServiceAccount = channel.unary_unary(
        '/google.iam.admin.v1.IAM/DeleteServiceAccount',
        request_serializer=DeleteServiceAccountRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.ListServiceAccountKeys = channel.unary_unary(
        '/google.iam.admin.v1.IAM/ListServiceAccountKeys',
        request_serializer=ListServiceAccountKeysRequest.SerializeToString,
        response_deserializer=ListServiceAccountKeysResponse.FromString,
        )
    self.GetServiceAccountKey = channel.unary_unary(
        '/google.iam.admin.v1.IAM/GetServiceAccountKey',
        request_serializer=GetServiceAccountKeyRequest.SerializeToString,
        response_deserializer=ServiceAccountKey.FromString,
        )
    self.CreateServiceAccountKey = channel.unary_unary(
        '/google.iam.admin.v1.IAM/CreateServiceAccountKey',
        request_serializer=CreateServiceAccountKeyRequest.SerializeToString,
        response_deserializer=ServiceAccountKey.FromString,
        )
    self.DeleteServiceAccountKey = channel.unary_unary(
        '/google.iam.admin.v1.IAM/DeleteServiceAccountKey',
        request_serializer=DeleteServiceAccountKeyRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.SignBlob = channel.unary_unary(
        '/google.iam.admin.v1.IAM/SignBlob',
        request_serializer=SignBlobRequest.SerializeToString,
        response_deserializer=SignBlobResponse.FromString,
        )
    self.GetIamPolicy = channel.unary_unary(
        '/google.iam.admin.v1.IAM/GetIamPolicy',
        request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.SerializeToString,
        response_deserializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
        )
    self.SetIamPolicy = channel.unary_unary(
        '/google.iam.admin.v1.IAM/SetIamPolicy',
        request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.SerializeToString,
        response_deserializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
        )
    self.TestIamPermissions = channel.unary_unary(
        '/google.iam.admin.v1.IAM/TestIamPermissions',
        request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.SerializeToString,
        response_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.FromString,
        )
    self.QueryGrantableRoles = channel.unary_unary(
        '/google.iam.admin.v1.IAM/QueryGrantableRoles',
        request_serializer=QueryGrantableRolesRequest.SerializeToString,
        response_deserializer=QueryGrantableRolesResponse.FromString,
        )


class IAMServicer(object):
  """Creates and manages service account objects.

  Service account is an account that belongs to your project instead
  of to an individual end user. It is used to authenticate calls
  to a Google API.

  To create a service account, specify the `project_id` and `account_id`
  for the account.  The `account_id` is unique within the project, and used
  to generate the service account email address and a stable
  `unique_id`.

  All other methods can identify accounts using the format
  `projects/{project}/serviceAccounts/{account}`.
  Using `-` as a wildcard for the project will infer the project from
  the account. The `account` value can be the `email` address or the
  `unique_id` of the service account.
  """

  def ListServiceAccounts(self, request, context):
    """Lists [ServiceAccounts][google.iam.admin.v1.ServiceAccount] for a project.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetServiceAccount(self, request, context):
    """Gets a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateServiceAccount(self, request, context):
    """Creates a [ServiceAccount][google.iam.admin.v1.ServiceAccount]
    and returns it.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateServiceAccount(self, request, context):
    """Updates a [ServiceAccount][google.iam.admin.v1.ServiceAccount].

    Currently, only the following fields are updatable:
    `display_name` .
    The `etag` is mandatory.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteServiceAccount(self, request, context):
    """Deletes a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListServiceAccountKeys(self, request, context):
    """Lists [ServiceAccountKeys][google.iam.admin.v1.ServiceAccountKey].
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetServiceAccountKey(self, request, context):
    """Gets the [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
    by key id.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateServiceAccountKey(self, request, context):
    """Creates a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
    and returns it.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteServiceAccountKey(self, request, context):
    """Deletes a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SignBlob(self, request, context):
    """Signs a blob using a service account's system-managed private key.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetIamPolicy(self, request, context):
    """Returns the IAM access control policy for a
    [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetIamPolicy(self, request, context):
    """Sets the IAM access control policy for a
    [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TestIamPermissions(self, request, context):
    """Tests the specified permissions against the IAM access control policy
    for a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def QueryGrantableRoles(self, request, context):
    """Queries roles that can be granted on a particular resource.
    A role is grantable if it can be used as the role in a binding for a policy
    for that resource.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_IAMServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListServiceAccounts': grpc.unary_unary_rpc_method_handler(
          servicer.ListServiceAccounts,
          request_deserializer=ListServiceAccountsRequest.FromString,
          response_serializer=ListServiceAccountsResponse.SerializeToString,
      ),
      'GetServiceAccount': grpc.unary_unary_rpc_method_handler(
          servicer.GetServiceAccount,
          request_deserializer=GetServiceAccountRequest.FromString,
          response_serializer=ServiceAccount.SerializeToString,
      ),
      'CreateServiceAccount': grpc.unary_unary_rpc_method_handler(
          servicer.CreateServiceAccount,
          request_deserializer=CreateServiceAccountRequest.FromString,
          response_serializer=ServiceAccount.SerializeToString,
      ),
      'UpdateServiceAccount': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateServiceAccount,
          request_deserializer=ServiceAccount.FromString,
          response_serializer=ServiceAccount.SerializeToString,
      ),
      'DeleteServiceAccount': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteServiceAccount,
          request_deserializer=DeleteServiceAccountRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'ListServiceAccountKeys': grpc.unary_unary_rpc_method_handler(
          servicer.ListServiceAccountKeys,
          request_deserializer=ListServiceAccountKeysRequest.FromString,
          response_serializer=ListServiceAccountKeysResponse.SerializeToString,
      ),
      'GetServiceAccountKey': grpc.unary_unary_rpc_method_handler(
          servicer.GetServiceAccountKey,
          request_deserializer=GetServiceAccountKeyRequest.FromString,
          response_serializer=ServiceAccountKey.SerializeToString,
      ),
      'CreateServiceAccountKey': grpc.unary_unary_rpc_method_handler(
          servicer.CreateServiceAccountKey,
          request_deserializer=CreateServiceAccountKeyRequest.FromString,
          response_serializer=ServiceAccountKey.SerializeToString,
      ),
      'DeleteServiceAccountKey': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteServiceAccountKey,
          request_deserializer=DeleteServiceAccountKeyRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'SignBlob': grpc.unary_unary_rpc_method_handler(
          servicer.SignBlob,
          request_deserializer=SignBlobRequest.FromString,
          response_serializer=SignBlobResponse.SerializeToString,
      ),
      'GetIamPolicy': grpc.unary_unary_rpc_method_handler(
          servicer.GetIamPolicy,
          request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.FromString,
          response_serializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
      ),
      'SetIamPolicy': grpc.unary_unary_rpc_method_handler(
          servicer.SetIamPolicy,
          request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.FromString,
          response_serializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
      ),
      'TestIamPermissions': grpc.unary_unary_rpc_method_handler(
          servicer.TestIamPermissions,
          request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.FromString,
          response_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.SerializeToString,
      ),
      'QueryGrantableRoles': grpc.unary_unary_rpc_method_handler(
          servicer.QueryGrantableRoles,
          request_deserializer=QueryGrantableRolesRequest.FromString,
          response_serializer=QueryGrantableRolesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.iam.admin.v1.IAM', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaIAMServicer(object):
  """Creates and manages service account objects.

  Service account is an account that belongs to your project instead
  of to an individual end user. It is used to authenticate calls
  to a Google API.

  To create a service account, specify the `project_id` and `account_id`
  for the account.  The `account_id` is unique within the project, and used
  to generate the service account email address and a stable
  `unique_id`.

  All other methods can identify accounts using the format
  `projects/{project}/serviceAccounts/{account}`.
  Using `-` as a wildcard for the project will infer the project from
  the account. The `account` value can be the `email` address or the
  `unique_id` of the service account.
  """
  def ListServiceAccounts(self, request, context):
    """Lists [ServiceAccounts][google.iam.admin.v1.ServiceAccount] for a project.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetServiceAccount(self, request, context):
    """Gets a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def CreateServiceAccount(self, request, context):
    """Creates a [ServiceAccount][google.iam.admin.v1.ServiceAccount]
    and returns it.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def UpdateServiceAccount(self, request, context):
    """Updates a [ServiceAccount][google.iam.admin.v1.ServiceAccount].

    Currently, only the following fields are updatable:
    `display_name` .
    The `etag` is mandatory.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def DeleteServiceAccount(self, request, context):
    """Deletes a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ListServiceAccountKeys(self, request, context):
    """Lists [ServiceAccountKeys][google.iam.admin.v1.ServiceAccountKey].
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetServiceAccountKey(self, request, context):
    """Gets the [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
    by key id.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def CreateServiceAccountKey(self, request, context):
    """Creates a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
    and returns it.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def DeleteServiceAccountKey(self, request, context):
    """Deletes a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SignBlob(self, request, context):
    """Signs a blob using a service account's system-managed private key.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetIamPolicy(self, request, context):
    """Returns the IAM access control policy for a
    [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SetIamPolicy(self, request, context):
    """Sets the IAM access control policy for a
    [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def TestIamPermissions(self, request, context):
    """Tests the specified permissions against the IAM access control policy
    for a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def QueryGrantableRoles(self, request, context):
    """Queries roles that can be granted on a particular resource.
    A role is grantable if it can be used as the role in a binding for a policy
    for that resource.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaIAMStub(object):
  """Creates and manages service account objects.

  Service account is an account that belongs to your project instead
  of to an individual end user. It is used to authenticate calls
  to a Google API.

  To create a service account, specify the `project_id` and `account_id`
  for the account.  The `account_id` is unique within the project, and used
  to generate the service account email address and a stable
  `unique_id`.

  All other methods can identify accounts using the format
  `projects/{project}/serviceAccounts/{account}`.
  Using `-` as a wildcard for the project will infer the project from
  the account. The `account` value can be the `email` address or the
  `unique_id` of the service account.
  """
  def ListServiceAccounts(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Lists [ServiceAccounts][google.iam.admin.v1.ServiceAccount] for a project.
    """
    raise NotImplementedError()
  ListServiceAccounts.future = None
  def GetServiceAccount(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Gets a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    raise NotImplementedError()
  GetServiceAccount.future = None
  def CreateServiceAccount(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Creates a [ServiceAccount][google.iam.admin.v1.ServiceAccount]
    and returns it.
    """
    raise NotImplementedError()
  CreateServiceAccount.future = None
  def UpdateServiceAccount(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Updates a [ServiceAccount][google.iam.admin.v1.ServiceAccount].

    Currently, only the following fields are updatable:
    `display_name` .
    The `etag` is mandatory.
    """
    raise NotImplementedError()
  UpdateServiceAccount.future = None
  def DeleteServiceAccount(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Deletes a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    raise NotImplementedError()
  DeleteServiceAccount.future = None
  def ListServiceAccountKeys(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Lists [ServiceAccountKeys][google.iam.admin.v1.ServiceAccountKey].
    """
    raise NotImplementedError()
  ListServiceAccountKeys.future = None
  def GetServiceAccountKey(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Gets the [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
    by key id.
    """
    raise NotImplementedError()
  GetServiceAccountKey.future = None
  def CreateServiceAccountKey(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Creates a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
    and returns it.
    """
    raise NotImplementedError()
  CreateServiceAccountKey.future = None
  def DeleteServiceAccountKey(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Deletes a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].
    """
    raise NotImplementedError()
  DeleteServiceAccountKey.future = None
  def SignBlob(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Signs a blob using a service account's system-managed private key.
    """
    raise NotImplementedError()
  SignBlob.future = None
  def GetIamPolicy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Returns the IAM access control policy for a
    [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    raise NotImplementedError()
  GetIamPolicy.future = None
  def SetIamPolicy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Sets the IAM access control policy for a
    [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    raise NotImplementedError()
  SetIamPolicy.future = None
  def TestIamPermissions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Tests the specified permissions against the IAM access control policy
    for a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
    """
    raise NotImplementedError()
  TestIamPermissions.future = None
  def QueryGrantableRoles(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Queries roles that can be granted on a particular resource.
    A role is grantable if it can be used as the role in a binding for a policy
    for that resource.
    """
    raise NotImplementedError()
  QueryGrantableRoles.future = None


def beta_create_IAM_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('google.iam.admin.v1.IAM', 'CreateServiceAccount'): CreateServiceAccountRequest.FromString,
    ('google.iam.admin.v1.IAM', 'CreateServiceAccountKey'): CreateServiceAccountKeyRequest.FromString,
    ('google.iam.admin.v1.IAM', 'DeleteServiceAccount'): DeleteServiceAccountRequest.FromString,
    ('google.iam.admin.v1.IAM', 'DeleteServiceAccountKey'): DeleteServiceAccountKeyRequest.FromString,
    ('google.iam.admin.v1.IAM', 'GetIamPolicy'): google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.FromString,
    ('google.iam.admin.v1.IAM', 'GetServiceAccount'): GetServiceAccountRequest.FromString,
    ('google.iam.admin.v1.IAM', 'GetServiceAccountKey'): GetServiceAccountKeyRequest.FromString,
    ('google.iam.admin.v1.IAM', 'ListServiceAccountKeys'): ListServiceAccountKeysRequest.FromString,
    ('google.iam.admin.v1.IAM', 'ListServiceAccounts'): ListServiceAccountsRequest.FromString,
    ('google.iam.admin.v1.IAM', 'QueryGrantableRoles'): QueryGrantableRolesRequest.FromString,
    ('google.iam.admin.v1.IAM', 'SetIamPolicy'): google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.FromString,
    ('google.iam.admin.v1.IAM', 'SignBlob'): SignBlobRequest.FromString,
    ('google.iam.admin.v1.IAM', 'TestIamPermissions'): google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.FromString,
    ('google.iam.admin.v1.IAM', 'UpdateServiceAccount'): ServiceAccount.FromString,
  }
  response_serializers = {
    ('google.iam.admin.v1.IAM', 'CreateServiceAccount'): ServiceAccount.SerializeToString,
    ('google.iam.admin.v1.IAM', 'CreateServiceAccountKey'): ServiceAccountKey.SerializeToString,
    ('google.iam.admin.v1.IAM', 'DeleteServiceAccount'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
    ('google.iam.admin.v1.IAM', 'DeleteServiceAccountKey'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
    ('google.iam.admin.v1.IAM', 'GetIamPolicy'): google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
    ('google.iam.admin.v1.IAM', 'GetServiceAccount'): ServiceAccount.SerializeToString,
    ('google.iam.admin.v1.IAM', 'GetServiceAccountKey'): ServiceAccountKey.SerializeToString,
    ('google.iam.admin.v1.IAM', 'ListServiceAccountKeys'): ListServiceAccountKeysResponse.SerializeToString,
    ('google.iam.admin.v1.IAM', 'ListServiceAccounts'): ListServiceAccountsResponse.SerializeToString,
    ('google.iam.admin.v1.IAM', 'QueryGrantableRoles'): QueryGrantableRolesResponse.SerializeToString,
    ('google.iam.admin.v1.IAM', 'SetIamPolicy'): google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
    ('google.iam.admin.v1.IAM', 'SignBlob'): SignBlobResponse.SerializeToString,
    ('google.iam.admin.v1.IAM', 'TestIamPermissions'): google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.SerializeToString,
    ('google.iam.admin.v1.IAM', 'UpdateServiceAccount'): ServiceAccount.SerializeToString,
  }
  method_implementations = {
    ('google.iam.admin.v1.IAM', 'CreateServiceAccount'): face_utilities.unary_unary_inline(servicer.CreateServiceAccount),
    ('google.iam.admin.v1.IAM', 'CreateServiceAccountKey'): face_utilities.unary_unary_inline(servicer.CreateServiceAccountKey),
    ('google.iam.admin.v1.IAM', 'DeleteServiceAccount'): face_utilities.unary_unary_inline(servicer.DeleteServiceAccount),
    ('google.iam.admin.v1.IAM', 'DeleteServiceAccountKey'): face_utilities.unary_unary_inline(servicer.DeleteServiceAccountKey),
    ('google.iam.admin.v1.IAM', 'GetIamPolicy'): face_utilities.unary_unary_inline(servicer.GetIamPolicy),
    ('google.iam.admin.v1.IAM', 'GetServiceAccount'): face_utilities.unary_unary_inline(servicer.GetServiceAccount),
    ('google.iam.admin.v1.IAM', 'GetServiceAccountKey'): face_utilities.unary_unary_inline(servicer.GetServiceAccountKey),
    ('google.iam.admin.v1.IAM', 'ListServiceAccountKeys'): face_utilities.unary_unary_inline(servicer.ListServiceAccountKeys),
    ('google.iam.admin.v1.IAM', 'ListServiceAccounts'): face_utilities.unary_unary_inline(servicer.ListServiceAccounts),
    ('google.iam.admin.v1.IAM', 'QueryGrantableRoles'): face_utilities.unary_unary_inline(servicer.QueryGrantableRoles),
    ('google.iam.admin.v1.IAM', 'SetIamPolicy'): face_utilities.unary_unary_inline(servicer.SetIamPolicy),
    ('google.iam.admin.v1.IAM', 'SignBlob'): face_utilities.unary_unary_inline(servicer.SignBlob),
    ('google.iam.admin.v1.IAM', 'TestIamPermissions'): face_utilities.unary_unary_inline(servicer.TestIamPermissions),
    ('google.iam.admin.v1.IAM', 'UpdateServiceAccount'): face_utilities.unary_unary_inline(servicer.UpdateServiceAccount),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_IAM_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('google.iam.admin.v1.IAM', 'CreateServiceAccount'): CreateServiceAccountRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'CreateServiceAccountKey'): CreateServiceAccountKeyRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'DeleteServiceAccount'): DeleteServiceAccountRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'DeleteServiceAccountKey'): DeleteServiceAccountKeyRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'GetIamPolicy'): google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'GetServiceAccount'): GetServiceAccountRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'GetServiceAccountKey'): GetServiceAccountKeyRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'ListServiceAccountKeys'): ListServiceAccountKeysRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'ListServiceAccounts'): ListServiceAccountsRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'QueryGrantableRoles'): QueryGrantableRolesRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'SetIamPolicy'): google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'SignBlob'): SignBlobRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'TestIamPermissions'): google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.SerializeToString,
    ('google.iam.admin.v1.IAM', 'UpdateServiceAccount'): ServiceAccount.SerializeToString,
  }
  response_deserializers = {
    ('google.iam.admin.v1.IAM', 'CreateServiceAccount'): ServiceAccount.FromString,
    ('google.iam.admin.v1.IAM', 'CreateServiceAccountKey'): ServiceAccountKey.FromString,
    ('google.iam.admin.v1.IAM', 'DeleteServiceAccount'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
    ('google.iam.admin.v1.IAM', 'DeleteServiceAccountKey'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
    ('google.iam.admin.v1.IAM', 'GetIamPolicy'): google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
    ('google.iam.admin.v1.IAM', 'GetServiceAccount'): ServiceAccount.FromString,
    ('google.iam.admin.v1.IAM', 'GetServiceAccountKey'): ServiceAccountKey.FromString,
    ('google.iam.admin.v1.IAM', 'ListServiceAccountKeys'): ListServiceAccountKeysResponse.FromString,
    ('google.iam.admin.v1.IAM', 'ListServiceAccounts'): ListServiceAccountsResponse.FromString,
    ('google.iam.admin.v1.IAM', 'QueryGrantableRoles'): QueryGrantableRolesResponse.FromString,
    ('google.iam.admin.v1.IAM', 'SetIamPolicy'): google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
    ('google.iam.admin.v1.IAM', 'SignBlob'): SignBlobResponse.FromString,
    ('google.iam.admin.v1.IAM', 'TestIamPermissions'): google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.FromString,
    ('google.iam.admin.v1.IAM', 'UpdateServiceAccount'): ServiceAccount.FromString,
  }
  cardinalities = {
    'CreateServiceAccount': cardinality.Cardinality.UNARY_UNARY,
    'CreateServiceAccountKey': cardinality.Cardinality.UNARY_UNARY,
    'DeleteServiceAccount': cardinality.Cardinality.UNARY_UNARY,
    'DeleteServiceAccountKey': cardinality.Cardinality.UNARY_UNARY,
    'GetIamPolicy': cardinality.Cardinality.UNARY_UNARY,
    'GetServiceAccount': cardinality.Cardinality.UNARY_UNARY,
    'GetServiceAccountKey': cardinality.Cardinality.UNARY_UNARY,
    'ListServiceAccountKeys': cardinality.Cardinality.UNARY_UNARY,
    'ListServiceAccounts': cardinality.Cardinality.UNARY_UNARY,
    'QueryGrantableRoles': cardinality.Cardinality.UNARY_UNARY,
    'SetIamPolicy': cardinality.Cardinality.UNARY_UNARY,
    'SignBlob': cardinality.Cardinality.UNARY_UNARY,
    'TestIamPermissions': cardinality.Cardinality.UNARY_UNARY,
    'UpdateServiceAccount': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'google.iam.admin.v1.IAM', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
