# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/v3/agent_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.api import monitored_resource_pb2 as google_dot_api_dot_monitored__resource__pb2
from google.monitoring.v3 import agent_pb2 as google_dot_monitoring_dot_v3_dot_agent__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='google/monitoring/v3/agent_service.proto',
  package='google.monitoring.v3',
  syntax='proto3',
  serialized_pb=_b('\n(google/monitoring/v3/agent_service.proto\x12\x14google.monitoring.v3\x1a\x1cgoogle/api/annotations.proto\x1a#google/api/monitored_resource.proto\x1a google/monitoring/v3/agent.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xbc\x01\n\x1f\x43reateCollectdTimeSeriesRequest\x12\x0c\n\x04name\x18\x05 \x01(\t\x12/\n\x08resource\x18\x02 \x01(\x0b\x32\x1d.google.api.MonitoredResource\x12\x18\n\x10\x63ollectd_version\x18\x03 \x01(\t\x12@\n\x11\x63ollectd_payloads\x18\x04 \x03(\x0b\x32%.google.monitoring.v3.CollectdPayload2\xba\x01\n\x17\x41gentTranslationService\x12\x9e\x01\n\x18\x43reateCollectdTimeSeries\x12\x35.google.monitoring.v3.CreateCollectdTimeSeriesRequest\x1a\x16.google.protobuf.Empty\"3\x82\xd3\xe4\x93\x02-\"(/v3/{name=projects/*}/collectdTimeSeries:\x01*B/\n\x18\x63om.google.monitoring.v3B\x11\x41gentServiceProtoP\x01\x62\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_api_dot_monitored__resource__pb2.DESCRIPTOR,google_dot_monitoring_dot_v3_dot_agent__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_CREATECOLLECTDTIMESERIESREQUEST = _descriptor.Descriptor(
  name='CreateCollectdTimeSeriesRequest',
  full_name='google.monitoring.v3.CreateCollectdTimeSeriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.monitoring.v3.CreateCollectdTimeSeriesRequest.name', index=0,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resource', full_name='google.monitoring.v3.CreateCollectdTimeSeriesRequest.resource', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collectd_version', full_name='google.monitoring.v3.CreateCollectdTimeSeriesRequest.collectd_version', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='collectd_payloads', full_name='google.monitoring.v3.CreateCollectdTimeSeriesRequest.collectd_payloads', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=197,
  serialized_end=385,
)

_CREATECOLLECTDTIMESERIESREQUEST.fields_by_name['resource'].message_type = google_dot_api_dot_monitored__resource__pb2._MONITOREDRESOURCE
_CREATECOLLECTDTIMESERIESREQUEST.fields_by_name['collectd_payloads'].message_type = google_dot_monitoring_dot_v3_dot_agent__pb2._COLLECTDPAYLOAD
DESCRIPTOR.message_types_by_name['CreateCollectdTimeSeriesRequest'] = _CREATECOLLECTDTIMESERIESREQUEST

CreateCollectdTimeSeriesRequest = _reflection.GeneratedProtocolMessageType('CreateCollectdTimeSeriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATECOLLECTDTIMESERIESREQUEST,
  __module__ = 'google.monitoring.v3.agent_service_pb2'
  # @@protoc_insertion_point(class_scope:google.monitoring.v3.CreateCollectdTimeSeriesRequest)
  ))
_sym_db.RegisterMessage(CreateCollectdTimeSeriesRequest)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\030com.google.monitoring.v3B\021AgentServiceProtoP\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class AgentTranslationServiceStub(object):
  """The AgentTranslation API allows `collectd`-based agents to
  write time series data to Cloud Monitoring.
  See [google.monitoring.v3.MetricService.CreateTimeSeries] instead.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateCollectdTimeSeries = channel.unary_unary(
        '/google.monitoring.v3.AgentTranslationService/CreateCollectdTimeSeries',
        request_serializer=CreateCollectdTimeSeriesRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class AgentTranslationServiceServicer(object):
  """The AgentTranslation API allows `collectd`-based agents to
  write time series data to Cloud Monitoring.
  See [google.monitoring.v3.MetricService.CreateTimeSeries] instead.
  """

  def CreateCollectdTimeSeries(self, request, context):
    """**Stackdriver Monitoring Agent only:** Creates a new time series.

    <aside class="caution">This method is only for use by the Google Monitoring Agent.
    Use [projects.timeSeries.create][google.monitoring.v3.MetricService.CreateTimeSeries]
    instead.</aside>
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AgentTranslationServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateCollectdTimeSeries': grpc.unary_unary_rpc_method_handler(
          servicer.CreateCollectdTimeSeries,
          request_deserializer=CreateCollectdTimeSeriesRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.monitoring.v3.AgentTranslationService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaAgentTranslationServiceServicer(object):
  """The AgentTranslation API allows `collectd`-based agents to
  write time series data to Cloud Monitoring.
  See [google.monitoring.v3.MetricService.CreateTimeSeries] instead.
  """
  def CreateCollectdTimeSeries(self, request, context):
    """**Stackdriver Monitoring Agent only:** Creates a new time series.

    <aside class="caution">This method is only for use by the Google Monitoring Agent.
    Use [projects.timeSeries.create][google.monitoring.v3.MetricService.CreateTimeSeries]
    instead.</aside>
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaAgentTranslationServiceStub(object):
  """The AgentTranslation API allows `collectd`-based agents to
  write time series data to Cloud Monitoring.
  See [google.monitoring.v3.MetricService.CreateTimeSeries] instead.
  """
  def CreateCollectdTimeSeries(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """**Stackdriver Monitoring Agent only:** Creates a new time series.

    <aside class="caution">This method is only for use by the Google Monitoring Agent.
    Use [projects.timeSeries.create][google.monitoring.v3.MetricService.CreateTimeSeries]
    instead.</aside>
    """
    raise NotImplementedError()
  CreateCollectdTimeSeries.future = None


def beta_create_AgentTranslationService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('google.monitoring.v3.AgentTranslationService', 'CreateCollectdTimeSeries'): CreateCollectdTimeSeriesRequest.FromString,
  }
  response_serializers = {
    ('google.monitoring.v3.AgentTranslationService', 'CreateCollectdTimeSeries'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
  }
  method_implementations = {
    ('google.monitoring.v3.AgentTranslationService', 'CreateCollectdTimeSeries'): face_utilities.unary_unary_inline(servicer.CreateCollectdTimeSeries),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_AgentTranslationService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('google.monitoring.v3.AgentTranslationService', 'CreateCollectdTimeSeries'): CreateCollectdTimeSeriesRequest.SerializeToString,
  }
  response_deserializers = {
    ('google.monitoring.v3.AgentTranslationService', 'CreateCollectdTimeSeries'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
  }
  cardinalities = {
    'CreateCollectdTimeSeries': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'google.monitoring.v3.AgentTranslationService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
